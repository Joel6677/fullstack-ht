{"version":3,"sources":["TabsHeaderItem.tsx"],"names":["React","Animated","StyleSheet","View","Platform","Text","TouchableRipple","Color","MaterialCommunityIcon","useAnimatedText","AnimatedText","createAnimatedComponent","TabsHeaderItem","tab","tabIndex","active","goTo","onTabLayout","activeColor","textColor","theme","position","offset","childrenCount","uppercase","mode","iconPosition","showTextLabel","rippleColor","useMemo","alpha","rgb","string","color","opacity","props","label","styles","tabRoot","tabRootFixed","e","touchableRipple","touchableRippleTop","selected","touchableRippleInner","touchableRippleInnerTop","icon","iconContainer","marginRight","text","textTop","fonts","medium","toUpperCase","create","flex","height","justifyContent","alignItems","flexDirection","paddingRight","paddingLeft","minWidth","maxWidth","width","textAlign","letterSpacing","select","web","transitionDuration","transitionProperty","default","marginTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  LayoutChangeEvent,\n  Animated,\n  StyleSheet,\n  View,\n  Platform,\n  TextProps,\n} from 'react-native';\nimport { Text, TouchableRipple } from 'react-native-paper';\nimport type { ReactElement } from 'react';\nimport type { TabScreenProps } from './TabScreen';\nimport type { Theme } from 'react-native-paper/lib/typescript/types';\nimport Color from 'color';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\nimport { useAnimatedText } from './internal';\nimport type { IconPosition, Mode } from './utils';\nconst AnimatedText = Animated.createAnimatedComponent<\n  React.ComponentType<TextProps>\n>(Text as any);\n\nexport default function TabsHeaderItem({\n  tab,\n  tabIndex,\n  active,\n  goTo,\n  onTabLayout,\n  activeColor,\n  textColor,\n  theme,\n  position,\n  offset,\n  childrenCount,\n  uppercase,\n  mode,\n  iconPosition,\n  showTextLabel,\n}: {\n  tab: ReactElement<TabScreenProps>;\n  tabIndex: number;\n  active: boolean;\n  goTo: (index: number) => void;\n  onTabLayout: (index: number, e: LayoutChangeEvent) => void;\n  activeColor: string;\n  textColor: string;\n  theme: Theme;\n  position: Animated.Value | undefined;\n  offset: Animated.Value | undefined;\n  childrenCount: number;\n  uppercase?: boolean;\n  iconPosition?: IconPosition;\n  showTextLabel?: boolean;\n  mode: Mode;\n}) {\n  const rippleColor = React.useMemo(\n    () =>\n      Color(activeColor as any)\n        .alpha(0.32)\n        .rgb()\n        .string(),\n    [activeColor]\n  );\n\n  const { color, opacity } = useAnimatedText({\n    active,\n    position,\n    offset,\n    activeColor,\n    textColor,\n    tabIndex,\n    childrenCount,\n  });\n\n  return (\n    <View\n      key={tab.props.label}\n      style={[styles.tabRoot, mode === 'fixed' && styles.tabRootFixed]}\n      onLayout={(e) => onTabLayout(tabIndex, e)}\n    >\n      <TouchableRipple\n        onPress={() => goTo(tabIndex)}\n        onPressIn={() => {}}\n        style={[\n          styles.touchableRipple,\n          iconPosition === 'top' && styles.touchableRippleTop,\n        ]}\n        rippleColor={rippleColor}\n        // @ts-ignore\n        accessibilityTraits={'button'}\n        accessibilityRole=\"button\"\n        accessibilityComponentType=\"button\"\n        accessibilityLabel={tab.props.label}\n        accessibilityState={{ selected: active }}\n        testID={`tab_${tabIndex}`}\n      >\n        <View\n          style={[\n            styles.touchableRippleInner,\n            iconPosition === 'top' && styles.touchableRippleInnerTop,\n          ]}\n        >\n          {tab.props.icon ? (\n            <View\n              style={[\n                styles.iconContainer,\n                iconPosition !== 'top' && styles.marginRight,\n              ]}\n            >\n              <MaterialCommunityIcon\n                selectable={false}\n                accessibilityElementsHidden={true}\n                importantForAccessibility=\"no\"\n                name={tab.props.icon || ''}\n                style={{ color: color, opacity }}\n                size={24}\n              />\n            </View>\n          ) : null}\n          {showTextLabel ? (\n            <AnimatedText\n              selectable={false}\n              style={[\n                styles.text,\n                iconPosition === 'top' && styles.textTop,\n                { ...theme.fonts.medium, color, opacity },\n              ]}\n            >\n              {uppercase ? tab.props.label.toUpperCase() : tab.props.label}\n            </AnimatedText>\n          ) : null}\n        </View>\n      </TouchableRipple>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabRoot: { position: 'relative' },\n  tabRootFixed: { flex: 1 },\n  touchableRipple: {\n    height: 48,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  touchableRippleTop: {\n    height: 72,\n  },\n  touchableRippleInner: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingRight: 16,\n    paddingLeft: 16,\n    minWidth: 90,\n    maxWidth: 360,\n  },\n  touchableRippleInnerTop: {\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    width: 24,\n    height: 24,\n  },\n  text: {\n    textAlign: 'center',\n    letterSpacing: 1,\n    ...Platform.select({\n      web: {\n        transitionDuration: '150ms',\n        transitionProperty: 'all',\n      },\n      default: {},\n    }),\n  },\n  textTop: { marginTop: 6 },\n  marginRight: { marginRight: 8 },\n});\n"]}