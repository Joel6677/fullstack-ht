{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/AppBar.jsx\";\nimport React, { useContext, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openMenu } from \"../reducers/openReducer\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Constants from 'expo-constants';\nimport { Link } from 'react-router-native';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-native';\nimport theme from \"../theme\";\nimport Text from \"./Text\";\nimport AuthStorageContext from \"../contexts/AuthStorageContext\";\nimport useAuthorizedUser from \"../hooks/useAuthorizedUser\";\nimport { IconButton } from 'react-native-paper';\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: theme.colors.appBarBackground\n  },\n  scrollView: {\n    flexDirection: 'row'\n  },\n  tabTouchable: {\n    flexGrow: 0\n  },\n  tabContainer: {\n    paddingHorizontal: 15,\n    paddingVertical: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  tabText: {\n    color: 'white'\n  }\n});\n\nvar AppBarTab = function AppBarTab(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return React.createElement(TouchableWithoutFeedback, _extends({\n    style: styles.tabTouchable\n  }, props), React.createElement(View, {\n    style: styles.tabContainer\n  }, React.createElement(Text, {\n    fontWeight: \"bold\",\n    style: styles.tabText\n  }, children)));\n};\n\nvar AppBar = function AppBar() {\n  var apolloClient = useApolloClient();\n  var authStorage = useContext(AuthStorageContext);\n  var history = useHistory();\n\n  var _useAuthorizedUser = useAuthorizedUser(),\n      authorizedUser = _useAuthorizedUser.authorizedUser;\n\n  var open = useSelector(function (state) {\n    return state;\n  });\n  var dispatch = useDispatch();\n\n  var onSignOut = function onSignOut() {\n    return _regeneratorRuntime.async(function onSignOut$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(authStorage.removeAccessToken());\n\n          case 2:\n            apolloClient.resetStore();\n            history.push('/');\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  console.log('open: ', open);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(ScrollView, {\n    style: styles.scrollView,\n    horizontal: true\n  }, React.createElement(IconButton, {\n    icon: \"menu\",\n    color: theme.colors.primary,\n    size: 40,\n    onPress: function onPress() {\n      return dispatch(openMenu(open));\n    }\n  }), authorizedUser ? React.createElement(React.Fragment, null, React.createElement(AppBarTab, {\n    onPress: onSignOut\n  }, \"Sign out\")) : React.createElement(React.Fragment, null, React.createElement(Link, {\n    to: \"/sign-in\",\n    component: AppBarTab\n  }, \"Sign in\"), React.createElement(Link, {\n    to: \"/sign-up\",\n    component: AppBarTab\n  }, \"Sign up\"))));\n};\n\nexport default AppBar;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/AppBar.jsx"],"names":["React","useContext","useState","useDispatch","useSelector","openMenu","Constants","Link","useApolloClient","useHistory","theme","Text","AuthStorageContext","useAuthorizedUser","IconButton","styles","StyleSheet","create","container","paddingTop","statusBarHeight","backgroundColor","colors","appBarBackground","scrollView","flexDirection","tabTouchable","flexGrow","tabContainer","paddingHorizontal","paddingVertical","alignItems","justifyContent","tabText","color","AppBarTab","children","props","AppBar","apolloClient","authStorage","history","authorizedUser","open","state","dispatch","onSignOut","removeAccessToken","resetStore","push","console","log","primary"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openMenu } from '../reducers/openReducer';\n\nimport {\n  View,\n  ScrollView,\n  StyleSheet,\n  TouchableWithoutFeedback\n} from 'react-native';\n\nimport Constants from 'expo-constants';\nimport { Link } from 'react-router-native';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-native';\n\nimport theme from '../theme';\nimport Text from './Text';\nimport AuthStorageContext from '../contexts/AuthStorageContext';\nimport useAuthorizedUser from '../hooks/useAuthorizedUser';\n\n// import Button from './Button';\nimport { IconButton } from 'react-native-paper';\n  \n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: theme.colors.appBarBackground,\n  },\n  scrollView: {\n    flexDirection: 'row',\n  },\n  tabTouchable: {\n    flexGrow: 0,\n  },\n  tabContainer: {\n    paddingHorizontal: 15,\n    paddingVertical: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  tabText: {\n    color: 'white',\n  }\n});\n\nconst AppBarTab = ({ children, ...props }) => { \n  return (\n    <TouchableWithoutFeedback style={styles.tabTouchable} {...props}>\n      <View style={styles.tabContainer}>\n        <Text fontWeight=\"bold\" style={styles.tabText}>\n          {children}\n        </Text>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\n// const AppBarTab = ({ children, ...props }) => { \n//   console.log('children: ', children);\n//   console.log('props: ', props);\n//   // on press {...props}\n//   return (\n//   <View style={styles.tabContainer}>\n//       <Button onPress={() => console.log('Button pressed')} >{children}</Button> \n//   </View>\n\n//   );\n// };\n\nconst AppBar = () => {\n  const apolloClient = useApolloClient();\n  const authStorage = useContext(AuthStorageContext);\n  const history = useHistory();\n\n  const { authorizedUser } = useAuthorizedUser();\n\n  // const [open, setOpen] = useState('');\n  const open = useSelector(state => state);\n  const dispatch = useDispatch();\n\n\n  const onSignOut = async () => {\n    await authStorage.removeAccessToken();\n    apolloClient.resetStore();\n    history.push('/');\n  };\n\n  console.log('open: ', open);\n\n  return (\n    \n\n    <View style={styles.container}>\n      <ScrollView style={styles.scrollView} horizontal> \n        <IconButton icon=\"menu\" color={theme.colors.primary} size={40} onPress={() => dispatch(openMenu(open))} // omaan komponenttiin koko roska\n        ></IconButton>\n        {authorizedUser ? (\n          <>\n            <AppBarTab onPress={onSignOut}>Sign out</AppBarTab>\n          </>\n        ) : (\n          <>\n            <Link to=\"/sign-in\" component={AppBarTab}>\n              Sign in\n            </Link>\n            <Link to=\"/sign-up\" component={AppBarTab}>\n              Sign up\n            </Link>\n          </>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default AppBar;"]},"metadata":{},"sourceType":"module"}