{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Messages.jsx\";\nimport React, { useState, useContext, useRef, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button, TextInput } from 'react-native-paper';\nimport * as firebase from 'firebase';\nimport { sendChatMessage } from \"../firebase/chat\";\nimport { GiftedChat } from 'react-native-gifted-chat';\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'red',\n    flexDirection: 'column',\n    height: '50%',\n    width: '50%',\n    position: 'absolute',\n    zIndex: 1\n  },\n  messengerContainer: {},\n  messageContainerSend: {\n    backgroundcolor: 'red'\n  },\n  messageContainerReceived: {\n    backgroundcolor: 'yellow'\n  },\n  sendMessageContainer: {\n    flexDirection: 'row'\n  }\n});\n\nvar Messages = function Messages(_ref) {\n  var otherUser = _ref.otherUser;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var currentUser = firebase.auth().currentUser;\n  var db = firebase.firestore();\n\n  var chatID = function chatID() {\n    var chatterID = currentUser.uid;\n    var chateeID = otherUser.uid;\n    var chatIDpre = [];\n    chatIDpre.push(chatterID);\n    chatIDpre.push(chateeID);\n    chatIDpre.sort();\n    return chatIDpre.join('_');\n  };\n\n  db.collection(\"messages\").doc(\"chatID\").collection('chats').orderBy('createdAt', 'desc').onSnapshot(function (doc) {\n    console.log(\"Current data: \", doc.data());\n  });\n  return React.createElement(View, {\n    style: styles.container\n  });\n};\n\nexport default Messages;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Messages.jsx"],"names":["React","useState","useContext","useRef","useEffect","useCallback","Button","TextInput","firebase","sendChatMessage","GiftedChat","styles","StyleSheet","create","container","backgroundColor","flexDirection","height","width","position","zIndex","messengerContainer","messageContainerSend","backgroundcolor","messageContainerReceived","sendMessageContainer","Messages","otherUser","messages","setMessages","text","setText","currentUser","auth","db","firestore","chatID","chatterID","uid","chateeID","chatIDpre","push","sort","join","collection","doc","orderBy","onSnapshot","console","log","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,MAAtC,EAA8CC,SAA9C,EAAyDC,WAAzD,QAA4E,OAA5E;;;AAEA,SAAQC,MAAR,EAAgBC,SAAhB,QAAgC,oBAAhC;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,SAASC,eAAT;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,eAAe,EAAE,KADV;AAEPC,IAAAA,aAAa,EAAE,QAFR;AAGPC,IAAAA,MAAM,EAAE,KAHD;AAIPC,IAAAA,KAAK,EAAE,KAJA;AAKPC,IAAAA,QAAQ,EAAE,UALH;AAMPC,IAAAA,MAAM,EAAE;AAND,GADkB;AAS7BC,EAAAA,kBAAkB,EAAE,EATS;AAY7BC,EAAAA,oBAAoB,EAAE;AAClBC,IAAAA,eAAe,EAAE;AADC,GAZO;AAgB7BC,EAAAA,wBAAwB,EAAE;AACtBD,IAAAA,eAAe,EAAE;AADK,GAhBG;AAmB7BE,EAAAA,oBAAoB,EAAE;AAClBT,IAAAA,aAAa,EAAE;AADG;AAnBO,CAAlB,CAAf;;AA0BA,IAAMU,QAAQ,GAAG,SAAXA,QAAW,OAAiB;AAAA,MAAfC,SAAe,QAAfA,SAAe;;AAAA,kBAEE1B,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,MAEvB2B,QAFuB;AAAA,MAEbC,WAFa;;AAAA,mBAIN5B,QAAQ,CAAC,EAAD,CAJF;AAAA;AAAA,MAIvB6B,IAJuB;AAAA,MAIjBC,OAJiB;;AAK9B,MAAMC,WAAW,GAAGxB,QAAQ,CAACyB,IAAT,GAAgBD,WAApC;AACA,MAAME,EAAE,GAAG1B,QAAQ,CAAC2B,SAAT,EAAX;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,QAAMC,SAAS,GAAGL,WAAW,CAACM,GAA9B;AACA,QAAMC,QAAQ,GAAGZ,SAAS,CAACW,GAA3B;AACA,QAAME,SAAS,GAAG,EAAlB;AACAA,IAAAA,SAAS,CAACC,IAAV,CAAeJ,SAAf;AACAG,IAAAA,SAAS,CAACC,IAAV,CAAeF,QAAf;AACAC,IAAAA,SAAS,CAACE,IAAV;AACA,WAAOF,SAAS,CAACG,IAAV,CAAe,GAAf,CAAP;AACD,GARH;;AAWAT,EAAAA,EAAE,CAACU,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8B,QAA9B,EAAwCD,UAAxC,CAAmD,OAAnD,EAA4DE,OAA5D,CAAoE,WAApE,EAAiF,MAAjF,EACCC,UADD,CACY,UAACF,GAAD,EAAS;AAEjBG,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,GAAG,CAACK,IAAJ,EAA9B;AACH,GAJD;AAqBA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvC,MAAM,CAACG;AAApB,IADJ;AAsBH,CA9DD;;AAgEA,eAAeY,QAAf","sourcesContent":["import React, { useState, useContext, useRef, useEffect, useCallback } from 'react';\nimport {View, StyleSheet} from 'react-native';\nimport {Button, TextInput} from 'react-native-paper';\nimport * as firebase from 'firebase';\nimport { sendChatMessage } from '../firebase/chat';\nimport { GiftedChat } from 'react-native-gifted-chat'\n\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'red',\n        flexDirection: 'column',\n        height: '50%',\n        width: '50%',\n        position: 'absolute',\n        zIndex: 1\n    },\n    messengerContainer: {\n\n    },\n    messageContainerSend: {\n        backgroundcolor: 'red'\n        \n    },\n    messageContainerReceived: {\n        backgroundcolor: 'yellow'\n    },\n    sendMessageContainer: {\n        flexDirection: 'row'\n    }\n});\n\n\n\nconst Messages = ({otherUser}) => {\n\n    const [messages, setMessages] = useState([]);\n\n    const [text, setText] = useState('');\n    const currentUser = firebase.auth().currentUser;\n    const db = firebase.firestore();\n\n    const chatID = () => {\n        const chatterID = currentUser.uid;\n        const chateeID = otherUser.uid;\n        const chatIDpre = [];\n        chatIDpre.push(chatterID);\n        chatIDpre.push(chateeID);\n        chatIDpre.sort();\n        return chatIDpre.join('_');\n      };\n    \n\n    db.collection(\"messages\").doc(\"chatID\").collection('chats').orderBy('createdAt', 'desc')\n    .onSnapshot((doc) => {\n        // setMessages(doc.data());\n        console.log(\"Current data: \", doc.data());\n    });\n\n\n  \n    //   db.collection('messages')\n    //     .doc(chatID)\n    //     .collection('chats')\n    //     .orderBy('createdAt', 'desc')\n    //     .onSnapshot((doc) => {\n    //         setMessages(doc.data());\n    //         console.log(doc.data());         \n    //     });\n\n    // const onSend = useCallback((messages = []) => {\n    //     setMessages(previousMessages => GiftedChat.append(previousMessages, messages));\n    // }, []);\n\n    return(\n        <View style={styles.container}>\n\n            {/* <GiftedChat\n                messages={messages}\n                onSend={messages => onSend(messages)}\n                user={{\n                    _id: 1\n                }}\n            /> */}\n\n            {/* <View style={styles.sendMessageContainer}>\n                <TextInput\n                    label=\"\"\n                    value={text}\n                    onChangeText={text => setText(text)}\n                />\n                <Button icon=\"send\" onPress={()=>{sendChatMessage(chatID,text);}} />\n            </View> */}\n                    \n        </View>\n    );\n};\n\nexport default Messages;"]},"metadata":{},"sourceType":"module"}