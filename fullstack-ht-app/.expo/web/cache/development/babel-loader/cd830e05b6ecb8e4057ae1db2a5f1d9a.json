{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport DayName from \"./DayName\";\nimport { useTheme } from 'react-native-paper';\nimport { showWeekDay } from \"./dateUtils\";\nexport var dayNamesHeight = 44;\nvar weekdays = [new Date('2020-08-02'), new Date('2020-08-03'), new Date('2020-08-04'), new Date('2020-08-05'), new Date('2020-08-06'), new Date('2020-08-07'), new Date('2020-08-08')];\n\nfunction DayNames(_ref) {\n  var disableWeekDays = _ref.disableWeekDays,\n      locale = _ref.locale;\n  var theme = useTheme();\n  var shortDayNames = React.useMemo(function () {\n    var formatter = new Intl.DateTimeFormat(locale, {\n      weekday: 'narrow'\n    });\n    return weekdays.map(function (date) {\n      return formatter.format(date);\n    });\n  }, [locale]);\n  return React.createElement(View, {\n    style: [styles.dayNames, {\n      backgroundColor: theme.colors.surface\n    }],\n    pointerEvents: 'none'\n  }, shortDayNames.filter(function (_, dayIndex) {\n    return showWeekDay(dayIndex, disableWeekDays);\n  }).map(function (dayName, i) {\n    return React.createElement(DayName, {\n      key: \"\".concat(dayName, \"_\").concat(i),\n      label: dayName\n    });\n  }));\n}\n\nvar styles = StyleSheet.create({\n  dayNames: {\n    height: dayNamesHeight,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  }\n});\nexport default React.memo(DayNames);","map":{"version":3,"sources":["DayNames.tsx"],"names":["dayNamesHeight","weekdays","locale","theme","useTheme","shortDayNames","formatter","Intl","weekday","date","styles","backgroundColor","surface","showWeekDay","dayName","dayNames","height","flexDirection","alignItems","React"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;AAEA,OAAA,OAAA;AACA,SAAA,QAAA,QAAA,oBAAA;AACA,SAAA,WAAA;AAEA,OAAO,IAAMA,cAAc,GAApB,EAAA;AAGP,IAAMC,QAAQ,GAAG,CACf,IAAA,IAAA,CADe,YACf,CADe,EAEf,IAAA,IAAA,CAFe,YAEf,CAFe,EAGf,IAAA,IAAA,CAHe,YAGf,CAHe,EAIf,IAAA,IAAA,CAJe,YAIf,CAJe,EAKf,IAAA,IAAA,CALe,YAKf,CALe,EAMf,IAAA,IAAA,CANe,YAMf,CANe,EAOf,IAAA,IAAA,CAPF,YAOE,CAPe,CAAjB;;AAUA,SAAA,QAAA,OAMG;AAAA,MANe,eAMf,QANe,eAMf;AAAA,MAJDC,MAIC,QAJDA,MAIC;AACD,MAAMC,KAAK,GAAGC,QAAd,EAAA;AACA,MAAMC,aAAa,GAAG,KAAK,CAAL,OAAA,CAAwB,YAAM;AAClD,QAAMC,SAAS,GAAG,IAAIC,IAAI,CAAR,cAAA,CAAA,MAAA,EAAgC;AAChDC,MAAAA,OAAO,EAAE;AADuC,KAAhC,CAAlB;AAGA,WAAOP,QAAQ,CAARA,GAAAA,CAAcQ,UAAAA,IAAD;AAAA,aAAUH,SAAS,CAATA,MAAAA,CAA9B,IAA8BA,CAAV;AAAA,KAAbL,CAAP;AAJoB,GAAA,EAKnB,CALH,MAKG,CALmB,CAAtB;AAOA,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,IAAA,KAAK,EAAE,CAACS,MAAM,CAAP,QAAA,EAAkB;AAAEC,MAAAA,eAAe,EAAER,KAAK,CAALA,MAAAA,CAAaS;AAAhC,KAAlB,CADT;AAEE,IAAA,aAAa,EAAE;AAFjB,GAAA,EAIG,aAAa,CAAb,MAAA,CACS,UAAA,CAAA,EAAA,QAAA;AAAA,WAAiBC,WAAW,CAAA,QAAA,EADrC,eACqC,CAA5B;AAAA,GADT,EAAA,GAAA,CAEM,UAAA,OAAA,EAAA,CAAA;AAAA,WACH,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAS,MAAA,GAAG,EAAA,GAAA,MAAA,CAAA,OAAA,EAAA,GAAA,EAAA,MAAA,CAAZ,CAAY,CAAZ;AAAiC,MAAA,KAAK,EAAEC;AAAxC,KAAA,CADG;AAAA,GAFN,CAJH,CADF;AAYD;;AACD,IAAMJ,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EADE,cAAA;AAERC,IAAAA,aAAa,EAFL,KAAA;AAGRC,IAAAA,UAAU,EAHF,QAAA;AAIRP,IAAAA,eAAe,EAAE;AAJT;AADqB,CAAlB,CAAf;AAQA,eAAeQ,KAAK,CAALA,IAAAA,CAAf,QAAeA,CAAf","sourcesContent":["import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport DayName from './DayName'\nimport { useTheme } from 'react-native-paper'\nimport { DisableWeekDaysType, showWeekDay } from './dateUtils'\n\nexport const dayNamesHeight = 44\n\n// TODO: wait for a better Intl api ;-)\nconst weekdays = [\n  new Date('2020-08-02'),\n  new Date('2020-08-03'),\n  new Date('2020-08-04'),\n  new Date('2020-08-05'),\n  new Date('2020-08-06'),\n  new Date('2020-08-07'),\n  new Date('2020-08-08'),\n]\n\nfunction DayNames({\n  disableWeekDays,\n  locale,\n}: {\n  locale: undefined | string\n  disableWeekDays?: DisableWeekDaysType\n}) {\n  const theme = useTheme()\n  const shortDayNames = React.useMemo<string[]>(() => {\n    const formatter = new Intl.DateTimeFormat(locale, {\n      weekday: 'narrow',\n    })\n    return weekdays.map((date) => formatter.format(date))\n  }, [locale])\n\n  return (\n    <View\n      style={[styles.dayNames, { backgroundColor: theme.colors.surface }]}\n      pointerEvents={'none'}\n    >\n      {shortDayNames\n        .filter((_, dayIndex) => showWeekDay(dayIndex, disableWeekDays))\n        .map((dayName, i) => (\n          <DayName key={`${dayName}_${i}`} label={dayName} />\n        ))}\n    </View>\n  )\n}\nconst styles = StyleSheet.create({\n  dayNames: {\n    height: dayNamesHeight,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n  },\n})\nexport default React.memo(DayNames)\n"]},"metadata":{},"sourceType":"module"}