{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Messenger.jsx\";\nimport React, { useState, useContext, useRef, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button, TextInput } from 'react-native-paper';\nimport * as firebase from 'firebase';\nimport { sendChatMessage } from \"../firebase/chat\";\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { useParams } from 'react-router-native';\nvar styles = StyleSheet.create({\n  container: {\n    zIndex: 1,\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    flexDirection: 'column'\n  },\n  messengerContainer: {},\n  messageContainerSend: {},\n  messageContainerReceived: {},\n  sendMessageContainer: {\n    flexDirection: 'row'\n  }\n});\n\nvar Messenger = function Messenger() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var currentUser = firebase.auth().currentUser;\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  console.log('current user id: ', currentUser.uid);\n  console.log('clicked id: ', id);\n\n  var chatID = function chatID() {\n    var chatterID = currentUser.uid;\n    var chateeID = id;\n    var chatIDpre = [];\n    chatIDpre.push(chatterID);\n    chatIDpre.push(chateeID);\n    chatIDpre.sort();\n    return chatIDpre.join('_');\n  };\n\n  console.log('chatID: ', chatID);\n\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n  }, []);\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(GiftedChat, {\n    messages: messages,\n    onSend: function onSend(messages) {\n      return _onSend(messages);\n    },\n    user: {\n      _id: 1\n    }\n  }), React.createElement(View, {\n    style: styles.sendMessageContainer\n  }, React.createElement(TextInput, {\n    label: \"\",\n    value: text,\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    }\n  }), React.createElement(Button, {\n    icon: \"send\",\n    onPress: function onPress() {\n      sendChatMessage(chatID, text);\n    }\n  })));\n};\n\nexport default Messenger;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Messenger.jsx"],"names":["React","useState","useContext","useRef","useEffect","useCallback","Button","TextInput","firebase","sendChatMessage","GiftedChat","useParams","styles","StyleSheet","create","container","zIndex","height","width","position","flexDirection","messengerContainer","messageContainerSend","messageContainerReceived","sendMessageContainer","Messenger","messages","setMessages","text","setText","currentUser","auth","id","console","log","uid","chatID","chatterID","chateeID","chatIDpre","push","sort","join","onSend","previousMessages","append","_id"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useRef, useEffect, useCallback } from 'react';\nimport {View, StyleSheet} from 'react-native';\nimport {Button, TextInput} from 'react-native-paper';\nimport * as firebase from 'firebase';\nimport { sendChatMessage } from '../firebase/chat';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { useParams } from 'react-router-native';\n\n\nconst styles = StyleSheet.create({\n    container: {\n        zIndex: 1,\n        height: '100%',\n        width: '100%',\n        position: 'absolute',\n        flexDirection: 'column'\n    },\n    messengerContainer: {\n\n    },\n    messageContainerSend: {\n        // backgroundcolor: 'red'\n        \n    },\n    messageContainerReceived: {\n        // backgroundcolor: 'yellow'\n    },\n    sendMessageContainer: {\n        flexDirection: 'row'\n    }\n});\n\n\n\nconst Messenger = () => {\n\n    const [messages, setMessages] = useState([]);\n\n    const [text, setText] = useState('');\n    const currentUser = firebase.auth().currentUser;\n    const { id } = useParams();\n\n\n    console.log('current user id: ', currentUser.uid);\n    console.log('clicked id: ', id);\n    const chatID = () => {\n        const chatterID = currentUser.uid;\n        const chateeID = id;\n        const chatIDpre = [];\n        chatIDpre.push(chatterID);\n        chatIDpre.push(chateeID);\n        chatIDpre.sort();\n        return chatIDpre.join('_');\n      };\n\n    console.log('chatID: ', chatID);\n    \n\n    // const db = firebase.firestore();\n    //   db.collection('messages')\n    //     .doc(chatID)\n    //     .collection('chats')\n    //     .orderBy('createdAt', 'desc')\n    //     .onSnapshot(function(doc) {\n    //         setMessages(doc.docs);\n    //         console.log(doc.docs);         \n    //     });\n\n    const onSend = useCallback((messages = []) => {\n        setMessages(previousMessages => GiftedChat.append(previousMessages, messages));\n    }, []);\n\n    return(\n        <View style={styles.container}>\n\n            <GiftedChat\n                messages={messages}\n                onSend={messages => onSend(messages)}\n                user={{\n                    _id: 1\n                }}\n            />\n\n            <View style={styles.sendMessageContainer}>\n                <TextInput\n                    label=\"\"\n                    value={text}\n                    onChangeText={text => setText(text)}\n                />\n                <Button icon=\"send\" onPress={()=>{sendChatMessage(chatID,text);}} />\n            </View>\n                    \n        </View>\n    );\n};\n\nexport default Messenger;"]},"metadata":{},"sourceType":"module"}