{"ast":null,"code":"import * as React from 'react';\nimport { overlay, useTheme } from 'react-native-paper';\nimport Color from 'color';\nexport function useLatest(value) {\n  var valueRef = React.useRef(value);\n  React.useEffect(function () {\n    valueRef.current = value;\n  }, [value]);\n  return valueRef;\n}\nexport function useHeaderBackgroundColor() {\n  var theme = useTheme();\n  return theme.dark && theme.mode === 'adaptive' ? overlay(4, theme.colors.surface) : theme.colors.primary;\n}\nexport function useHeaderColorIsLight() {\n  var theme = useTheme();\n  var background = theme.dark && theme.mode === 'adaptive' ? theme.colors.surface : theme.colors.primary;\n  return Color(background).isLight();\n}\nexport function useHeaderTextColor() {\n  var isLight = useHeaderColorIsLight();\n  return !isLight ? '#fff' : '#000';\n}\nexport function useTextColorOnPrimary() {\n  var theme = useTheme();\n  var isDark = !Color(theme.colors.primary).isLight();\n  return isDark ? '#fff' : '#000';\n}\nexport function range(start, end) {\n  return Array(end - start + 1).fill(null).map(function (_, i) {\n    return start + i;\n  });\n}","map":{"version":3,"sources":["utils.ts"],"names":["valueRef","React","theme","useTheme","overlay","background","Color","isLight","useHeaderColorIsLight","isDark","Array","end","start"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,OAAA,EAAA,QAAA,QAAA,oBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,OAAO,SAAA,SAAA,CAAA,KAAA,EAAgC;AACrC,MAAMA,QAAQ,GAAGC,KAAK,CAALA,MAAAA,CAAjB,KAAiBA,CAAjB;AACAA,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpBD,IAAAA,QAAQ,CAARA,OAAAA,GAAAA,KAAAA;AADFC,GAAAA,EAEG,CAFHA,KAEG,CAFHA;AAGA,SAAA,QAAA;AACD;AAED,OAAO,SAAA,wBAAA,GAAoC;AACzC,MAAMC,KAAK,GAAGC,QAAd,EAAA;AACA,SAAOD,KAAK,CAALA,IAAAA,IAAcA,KAAK,CAALA,IAAAA,KAAdA,UAAAA,GACHE,OAAO,CAAA,CAAA,EAAIF,KAAK,CAALA,MAAAA,CADRA,OACI,CADJA,GAEHA,KAAK,CAALA,MAAAA,CAFJ,OAAA;AAGD;AAED,OAAO,SAAA,qBAAA,GAAiC;AACtC,MAAMA,KAAK,GAAGC,QAAd,EAAA;AACA,MAAME,UAAU,GACdH,KAAK,CAALA,IAAAA,IAAcA,KAAK,CAALA,IAAAA,KAAdA,UAAAA,GACIA,KAAK,CAALA,MAAAA,CADJA,OAAAA,GAEIA,KAAK,CAALA,MAAAA,CAHN,OAAA;AAIA,SAAOI,KAAK,CAALA,UAAK,CAALA,CAAP,OAAOA,EAAP;AACD;AAED,OAAO,SAAA,kBAAA,GAA8B;AACnC,MAAMC,OAAO,GAAGC,qBAAhB,EAAA;AACA,SAAO,CAAA,OAAA,GAAA,MAAA,GAAP,MAAA;AACD;AAED,OAAO,SAAA,qBAAA,GAAiC;AACtC,MAAMN,KAAK,GAAGC,QAAd,EAAA;AACA,MAAMM,MAAM,GAAG,CAACH,KAAK,CAACJ,KAAK,CAALA,MAAAA,CAANI,OAAK,CAALA,CAAhB,OAAgBA,EAAhB;AACA,SAAOG,MAAM,GAAA,MAAA,GAAb,MAAA;AACD;AAED,OAAO,SAAA,KAAA,CAAA,KAAA,EAAA,GAAA,EAA2C;AAChD,SAAOC,KAAK,CAACC,GAAG,GAAHA,KAAAA,GAAND,CAAK,CAALA,CAAAA,IAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CAEA,UAAA,CAAA,EAAA,CAAA;AAAA,WAAUE,KAAK,GAFtB,CAEO;AAAA,GAFAF,CAAP;AAGD","sourcesContent":["import * as React from 'react'\nimport { overlay, useTheme } from 'react-native-paper'\nimport Color from 'color'\n\nexport function useLatest<T>(value: T) {\n  const valueRef = React.useRef<T>(value)\n  React.useEffect(() => {\n    valueRef.current = value\n  }, [value])\n  return valueRef\n}\n\nexport function useHeaderBackgroundColor() {\n  const theme = useTheme()\n  return theme.dark && theme.mode === 'adaptive'\n    ? overlay(4, theme.colors.surface)\n    : theme.colors.primary\n}\n\nexport function useHeaderColorIsLight() {\n  const theme = useTheme()\n  const background =\n    theme.dark && theme.mode === 'adaptive'\n      ? theme.colors.surface\n      : theme.colors.primary\n  return Color(background).isLight()\n}\n\nexport function useHeaderTextColor() {\n  const isLight = useHeaderColorIsLight()\n  return !isLight ? '#fff' : '#000'\n}\n\nexport function useTextColorOnPrimary() {\n  const theme = useTheme()\n  const isDark = !Color(theme.colors.primary).isLight()\n  return isDark ? '#fff' : '#000'\n}\n\nexport function range(start: number, end: number) {\n  return Array(end - start + 1)\n    .fill(null)\n    .map((_, i) => start + i)\n}\n"]},"metadata":{},"sourceType":"module"}