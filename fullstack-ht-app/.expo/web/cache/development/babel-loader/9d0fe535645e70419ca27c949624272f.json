{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Messenger.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { IconButton, TextInput } from 'react-native-paper';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { useParams } from 'react-router-native';\nimport Moment from 'moment';\nimport { sendChatMessage } from \"../firebase/chat\";\nimport Text from \"./Text\";\nvar styles = StyleSheet.create({\n  container: {\n    zIndex: 1,\n    padding: 5,\n    paddingTop: 100,\n    paddingBottom: 60,\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    flexDirection: 'column'\n  },\n  sendIcon: {\n    backgroundColor: '#ffd700',\n    borderRadius: 50,\n    right: 5\n  },\n  messageText: {\n    margin: 5\n  },\n  dateText: {\n    margin: 5\n  },\n  separator: {\n    height: 10\n  },\n  messageContainerSent: {\n    width: 200,\n    marginRight: 5,\n    alignSelf: 'flex-end',\n    backgroundColor: 'orange',\n    borderRadius: 5\n  },\n  textInput: {\n    margin: 10,\n    backgroundColor: 'white',\n    width: '80%'\n  },\n  messageContainerReceived: {\n    width: 200,\n    marginLeft: 5,\n    alignSelf: 'flex-start',\n    backgroundColor: '#ffd700',\n    borderRadius: 5\n  },\n  sendMessageContainer: {\n    borderRadius: 10,\n    marginTop: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#CACACA'\n  }\n});\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  });\n};\n\nvar MessageItem = function MessageItem(_ref) {\n  var message = _ref.message;\n  var messageSent = message.user._id === firebase.auth().currentUser.uid;\n  var messageStyle = messageSent ? styles.messageContainerSent : styles.messageContainerReceived;\n  return React.createElement(View, {\n    style: messageStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    numberOfLines: 10,\n    style: styles.messageText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, message.text), React.createElement(Text, {\n    style: styles.dateText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, Moment(message.createdAt).format('DD-MM-YYYYTHH:mm'))));\n};\n\nvar Messenger = function Messenger() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var _firebase$auth = firebase.auth(),\n      currentUser = _firebase$auth.currentUser;\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var chatID = function chatID() {\n    var chatterID = currentUser.uid;\n    var chateeID = id;\n    var chatIDpre = [];\n    chatIDpre.push(chatterID);\n    chatIDpre.push(chateeID);\n    chatIDpre.sort();\n    return chatIDpre.join('_');\n  };\n\n  useEffect(function () {\n    var messagesListener = firebase.firestore().collection('messages').doc(chatID()).collection('chats').orderBy('createdAt', 'desc').onSnapshot(function (querySnapshot) {\n      var messages = querySnapshot.docs.map(function (doc) {\n        var firebaseData = doc.data();\n        console.log('firebaseData: ', firebaseData);\n\n        var data = _objectSpread({\n          _id: doc.id,\n          text: '',\n          createdAt: new Date().getTime()\n        }, firebaseData);\n\n        if (!firebaseData.system) {\n          data.user = _objectSpread(_objectSpread({}, firebaseData.user), {}, {\n            name: firebaseData.user.email\n          });\n        }\n\n        return data;\n      });\n      setMessages(messages);\n    });\n    return function () {\n      return messagesListener();\n    };\n  }, []);\n\n  var sendMessage = function sendMessage() {\n    sendChatMessage(chatID(), text);\n    setText('');\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: messages,\n    inverted: true,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(MessageItem, {\n        message: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(_ref3) {\n      var id = _ref3.id;\n      return id;\n    },\n    ItemSeparatorComponent: ItemSeparator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.sendMessageContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    mode: \"outlined\",\n    label: \"\",\n    value: text,\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    style: styles.textInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }), React.createElement(IconButton, {\n    style: styles.sendIcon,\n    icon: \"send\",\n    size: 25,\n    onPress: function onPress() {\n      sendMessage();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Messenger;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Messenger.jsx"],"names":["React","useState","useEffect","IconButton","TextInput","firebase","useParams","Moment","sendChatMessage","Text","styles","StyleSheet","create","container","zIndex","padding","paddingTop","paddingBottom","height","width","position","flexDirection","sendIcon","backgroundColor","borderRadius","right","messageText","margin","dateText","separator","messageContainerSent","marginRight","alignSelf","textInput","messageContainerReceived","marginLeft","sendMessageContainer","marginTop","alignItems","ItemSeparator","MessageItem","message","messageSent","user","_id","auth","currentUser","uid","messageStyle","text","createdAt","format","Messenger","messages","setMessages","setText","id","chatID","chatterID","chateeID","chatIDpre","push","sort","join","messagesListener","firestore","collection","doc","orderBy","onSnapshot","querySnapshot","docs","map","firebaseData","data","console","log","Date","getTime","system","name","email","sendMessage","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, FlatList } from 'react-native';\nimport { IconButton, TextInput } from 'react-native-paper';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport { useParams } from 'react-router-native';\nimport Moment from 'moment';\nimport { sendChatMessage } from '../firebase/chat';\nimport Text from './Text';\n\nconst styles = StyleSheet.create({\n  container: {\n    zIndex: 1,\n    padding: 5,\n    paddingTop: 100,\n    paddingBottom: 60,\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    flexDirection: 'column',\n  },\n  sendIcon: {\n    backgroundColor: '#ffd700',\n    borderRadius: 50,\n    right: 5,\n  },\n  messageText: {\n    margin: 5,\n  },\n  dateText: {\n    margin: 5,\n  },\n  separator: {\n    height: 10,\n  },\n  messageContainerSent: {\n    width: 200,\n    marginRight: 5,\n    alignSelf: 'flex-end',\n    backgroundColor: 'orange',\n    borderRadius: 5,\n  },\n  textInput: {\n    margin: 10,\n    backgroundColor: 'white',\n    width: '80%',\n  },\n  messageContainerReceived: {\n    width: 200,\n    marginLeft: 5,\n    alignSelf: 'flex-start',\n    backgroundColor: '#ffd700',\n    borderRadius: 5,\n  },\n  sendMessageContainer: {\n    borderRadius: 10,\n    marginTop: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#CACACA',\n\n  },\n});\n\nconst ItemSeparator = () => <View style={styles.separator} />;\n\nconst MessageItem = ({ message }) => {\n  const messageSent = message.user._id === firebase.auth().currentUser.uid;\n  const messageStyle = messageSent ? styles.messageContainerSent : styles.messageContainerReceived;\n\n  return (\n    <View style={messageStyle}>\n      <View>\n        <Text numberOfLines={10} style={styles.messageText}>\n          {message.text}\n        </Text>\n        <Text style={styles.dateText}>\n          {Moment(message.createdAt).format('DD-MM-YYYYTHH:mm')}\n        </Text>\n      </View>\n\n    </View>\n  );\n};\n\nconst Messenger = () => {\n  const [messages, setMessages] = useState([]);\n\n  const [text, setText] = useState('');\n  const { currentUser } = firebase.auth();\n  const { id } = useParams();\n\n  const chatID = () => {\n    const chatterID = currentUser.uid;\n    const chateeID = id;\n    const chatIDpre = [];\n    chatIDpre.push(chatterID);\n    chatIDpre.push(chateeID);\n    chatIDpre.sort();\n    return chatIDpre.join('_');\n  };\n\n  useEffect(() => {\n    const messagesListener = firebase.firestore()\n      .collection('messages')\n      .doc(chatID())\n      .collection('chats')\n      .orderBy('createdAt', 'desc')\n      .onSnapshot((querySnapshot) => {\n        const messages = querySnapshot.docs.map((doc) => {\n          const firebaseData = doc.data();\n          console.log('firebaseData: ', firebaseData);\n\n          const data = {\n            _id: doc.id,\n            text: '',\n            createdAt: new Date().getTime(),\n            ...firebaseData,\n          };\n\n          if (!firebaseData.system) {\n            data.user = {\n              ...firebaseData.user,\n              name: firebaseData.user.email,\n            };\n          }\n\n          return data;\n        });\n\n        setMessages(messages);\n      });\n\n    return () => messagesListener();\n  }, []);\n\n  const sendMessage = () => {\n    sendChatMessage(chatID(), text);\n    setText('');\n  };\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={messages}\n        inverted\n        renderItem={({ item }) => (\n          <MessageItem\n            message={item}\n          />\n        )}\n        keyExtractor={({ id }) => id}\n        ItemSeparatorComponent={ItemSeparator}\n      />\n\n      <View style={styles.sendMessageContainer}>\n        <TextInput\n          mode=\"outlined\"\n          label=\"\"\n          value={text}\n          onChangeText={(text) => setText(text)}\n          style={styles.textInput}\n        />\n        <IconButton style={styles.sendIcon} icon=\"send\" size={25} onPress={() => { sendMessage(); }} />\n      </View>\n\n    </View>\n  );\n};\n\nexport default Messenger;\n"]},"metadata":{},"sourceType":"module"}