{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/RepositoryList.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useHistory } from 'react-router-native';\nimport { Searchbar } from 'react-native-paper';\nimport { useDebounce } from 'use-debounce';\nimport RepositoryItem from \"./RepositoryItem\";\nimport useRepositories from \"../hooks/useRepositories\";\nimport Picker from \"./Picker\";\nimport { Keyframes, animated } from 'react-spring/renderprops';\nvar styles = StyleSheet.create({\n  separator: {\n    height: 10\n  },\n  headerContainer: {\n    padding: 15\n  },\n  searchContainer: {\n    marginBottom: 15\n  }\n});\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 29\n    }\n  });\n};\n\nvar orderByOptions = [{\n  label: 'Latest repositories',\n  value: 'latest'\n}, {\n  label: 'Highest rated repositories',\n  value: 'highestRating'\n}, {\n  label: 'Lowest rated repositories',\n  value: 'lowestRating'\n}];\nvar variablesByOrderBy = {\n  latest: {\n    orderBy: 'CREATED_AT',\n    orderDirection: 'DESC'\n  },\n  highestRating: {\n    orderBy: 'RATING_AVERAGE',\n    orderDirection: 'DESC'\n  },\n  lowestRating: {\n    orderBy: 'RATING_AVERAGE',\n    orderDirection: 'ASC'\n  }\n};\nvar Sidebar = Keyframes.Spring({\n  open: function open(call) {\n    return _regeneratorRuntime.async(function open$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(call({\n              dealy: 0,\n              x: 0\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  close: function close(call) {\n    return _regeneratorRuntime.async(function close$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(call({\n              delay: 0,\n              x: -100\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\n\nvar RepositoryListHeader = function RepositoryListHeader(_ref) {\n  var onOrderByChange = _ref.onOrderByChange,\n      orderBy = _ref.orderBy,\n      searchKeyword = _ref.searchKeyword,\n      onSearchKeywordChange = _ref.onSearchKeywordChange;\n  return React.createElement(View, {\n    style: styles.headerContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.searchContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(Searchbar, {\n    placeholder: \"Search repositories\",\n    value: searchKeyword,\n    onChangeText: onSearchKeywordChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), React.createElement(Picker, {\n    placeholder: {},\n    onValueChange: onOrderByChange,\n    value: orderBy,\n    items: orderByOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport var RepositoryListContainer = function (_React$Component) {\n  _inherits(RepositoryListContainer, _React$Component);\n\n  var _super = _createSuper(RepositoryListContainer);\n\n  function RepositoryListContainer() {\n    var _this;\n\n    _classCallCheck(this, RepositoryListContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderHeader = function () {\n      var _this$props = _this.props,\n          onOrderByChange = _this$props.onOrderByChange,\n          orderBy = _this$props.orderBy,\n          searchKeyword = _this$props.searchKeyword,\n          onSearchKeywordChange = _this$props.onSearchKeywordChange;\n      return React.createElement(RepositoryListHeader, {\n        onOrderByChange: onOrderByChange,\n        orderBy: orderBy,\n        searchKeyword: searchKeyword,\n        onSearchKeywordChange: onSearchKeywordChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RepositoryListContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          repositories = _this$props2.repositories,\n          onEndReach = _this$props2.onEndReach,\n          onRepositoryPress = _this$props2.onRepositoryPress;\n      var repositoryNodes = repositories ? repositories.edges.map(function (edge) {\n        return edge.node;\n      }) : [];\n      return React.createElement(React.Fragment, null, \" */}\", React.createElement(FlatList, {\n        data: repositoryNodes,\n        keyExtractor: function keyExtractor(_ref2) {\n          var id = _ref2.id;\n          return id;\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return React.createElement(TouchableOpacity, {\n            key: item.id,\n            onPress: function onPress() {\n              return onRepositoryPress(item.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 11\n            }\n          }, React.createElement(RepositoryItem, {\n            repository: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }\n          }));\n        },\n        ItemSeparatorComponent: ItemSeparator,\n        ListHeaderComponent: this.renderHeader,\n        onEndReached: onEndReach,\n        onEndReachedThreshold: 0.5,\n        initialNumToRender: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return RepositoryListContainer;\n}(React.Component);\n\nvar RepositoryList = function RepositoryList() {\n  var history = useHistory();\n\n  var _useState = useState('latest'),\n      _useState2 = _slicedToArray(_useState, 2),\n      orderBy = _useState2[0],\n      setOrderBy = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchKeyword = _useState4[0],\n      setSearchKeyword = _useState4[1];\n\n  var _useDebounce = useDebounce(searchKeyword, 500),\n      _useDebounce2 = _slicedToArray(_useDebounce, 1),\n      debouncedSearchKeyword = _useDebounce2[0];\n\n  var _useRepositories = useRepositories(_objectSpread(_objectSpread({\n    first: 8\n  }, variablesByOrderBy[orderBy]), {}, {\n    searchKeyword: debouncedSearchKeyword\n  })),\n      repositories = _useRepositories.repositories,\n      fetchMore = _useRepositories.fetchMore;\n\n  var onEndReach = function onEndReach() {\n    fetchMore();\n  };\n\n  return React.createElement(RepositoryListContainer, {\n    repositories: repositories,\n    orderBy: orderBy,\n    onOrderByChange: function onOrderByChange(newOrderBy) {\n      setOrderBy(newOrderBy);\n    },\n    onEndReach: onEndReach,\n    searchKeyword: searchKeyword,\n    onSearchKeywordChange: function onSearchKeywordChange(keyword) {\n      return setSearchKeyword(keyword);\n    },\n    onRepositoryPress: function onRepositoryPress(id) {\n      history.push(\"/repositories/\" + id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default RepositoryList;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/RepositoryList.jsx"],"names":["React","useState","useHistory","Searchbar","useDebounce","RepositoryItem","useRepositories","Picker","Keyframes","animated","styles","StyleSheet","create","separator","height","headerContainer","padding","searchContainer","marginBottom","ItemSeparator","orderByOptions","label","value","variablesByOrderBy","latest","orderBy","orderDirection","highestRating","lowestRating","Sidebar","Spring","open","call","dealy","x","close","delay","RepositoryListHeader","onOrderByChange","searchKeyword","onSearchKeywordChange","RepositoryListContainer","renderHeader","props","repositories","onEndReach","onRepositoryPress","repositoryNodes","edges","map","edge","node","id","item","Component","RepositoryList","history","setOrderBy","setSearchKeyword","debouncedSearchKeyword","first","fetchMore","newOrderBy","keyword","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { FlatList, View, StyleSheet, TouchableOpacity } from 'react-native';\nimport { useHistory } from 'react-router-native';\nimport { Searchbar } from 'react-native-paper';\nimport { useDebounce } from 'use-debounce';\n\nimport RepositoryItem from './RepositoryItem';\nimport useRepositories from '../hooks/useRepositories';\nimport Picker from './Picker';\nimport { Keyframes, animated } from 'react-spring/renderprops';\n\n\nconst styles = StyleSheet.create({\n  separator: {\n    height: 10,\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  searchContainer: {\n    marginBottom: 15,\n  },\n});\n\nconst ItemSeparator = () => <View style={styles.separator} />;\n\nconst orderByOptions = [\n  { label: 'Latest repositories', value: 'latest' },\n  {\n    label: 'Highest rated repositories',\n    value: 'highestRating',\n  },\n  {\n    label: 'Lowest rated repositories',\n    value: 'lowestRating',\n  },\n];\n\nconst variablesByOrderBy = {\n  latest: {\n    orderBy: 'CREATED_AT',\n    orderDirection: 'DESC',\n  },\n  highestRating: {\n    orderBy: 'RATING_AVERAGE',\n    orderDirection: 'DESC',\n  },\n  lowestRating: {\n    orderBy: 'RATING_AVERAGE',\n    orderDirection: 'ASC',\n  },\n};\n\nconst Sidebar = Keyframes.Spring({\n\n  open: async call => {\n    await call({ dealy: 0, x: 0});\n  },\n\n  close: async call => {\n    await call({ delay: 0, x: -100 });\n  }\n});\n\nconst RepositoryListHeader = ({\n  onOrderByChange,\n  orderBy,\n  searchKeyword,\n  onSearchKeywordChange,\n}) => {\n  return (\n    <View style={styles.headerContainer}>\n      <View style={styles.searchContainer}>\n        <Searchbar\n          placeholder=\"Search repositories\"\n          value={searchKeyword}\n          onChangeText={onSearchKeywordChange}\n        />\n      </View>\n      <Picker\n        placeholder={{}}\n        onValueChange={onOrderByChange}\n        value={orderBy}\n        items={orderByOptions}\n      />\n    </View>\n  );\n};\n\nexport class RepositoryListContainer extends React.Component {\n  renderHeader = () => {\n    const {\n      onOrderByChange,\n      orderBy,\n      searchKeyword,\n      onSearchKeywordChange,\n    } = this.props;\n\n    return (\n      <RepositoryListHeader\n        onOrderByChange={onOrderByChange}\n        orderBy={orderBy}\n        searchKeyword={searchKeyword}\n        onSearchKeywordChange={onSearchKeywordChange}\n      />\n    );\n  };\n\n  render() {\n    const { repositories, onEndReach, onRepositoryPress } = this.props;\n\n    const repositoryNodes = repositories\n      ? repositories.edges.map((edge) => edge.node)\n      : [];\n\n    return (\n      <>\n        {/* <Sidebar native state={state}>\n          {({ x }) => (\n            <animated.div\n              className=\"sidebar\"\n              style={{\n                transform: x.interpolate(x => `translate3d(${x}%,0,0)`), // xyz\n              }}>\n              {/* <Content\n                native\n                items={items}\n                keys={items.map((_, i) => i)}\n                reverse={!this.state.open}\n                state={state}>\n                {(item, i) => ({ x, ...props }) => (\n                  <animated.div\n                    style={{\n                      transform: x.interpolate(x => `translate3d(${x}%,0,0)`),\n                      ...props,\n                    }}>\n                    <Form.Item className={i === 0 ? 'middle' : ''}>\n                      {item}\n                    </Form.Item>\n                  </animated.div>\n                )}\n              </Content> */}\n            {/* </animated.div>\n          )}\n        </Sidebar> */} */}\n\n      <FlatList\n        data={repositoryNodes}\n        keyExtractor={({ id }) => id}\n        renderItem={({ item }) => (\n          <TouchableOpacity\n            key={item.id}\n            onPress={() => onRepositoryPress(item.id)}\n          >\n            <RepositoryItem repository={item} />\n          </TouchableOpacity>\n        )}\n        ItemSeparatorComponent={ItemSeparator}\n        ListHeaderComponent={this.renderHeader}\n        onEndReached={onEndReach}\n        onEndReachedThreshold={0.5}\n        initialNumToRender={8}\n      />\n      </>\n \n    );\n  }\n}\n\nconst RepositoryList = () => {\n  const history = useHistory();\n  const [orderBy, setOrderBy] = useState('latest');\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [debouncedSearchKeyword] = useDebounce(searchKeyword, 500);\n\n  const { repositories, fetchMore } = useRepositories({\n    first: 8,\n    ...variablesByOrderBy[orderBy],\n    searchKeyword: debouncedSearchKeyword,\n  });\n\n  const onEndReach = () => {\n    fetchMore();\n  };\n\n  return (\n    <RepositoryListContainer\n      repositories={repositories}\n      orderBy={orderBy}\n      onOrderByChange={(newOrderBy) => {\n        setOrderBy(newOrderBy);\n      }}\n      onEndReach={onEndReach}\n      searchKeyword={searchKeyword}\n      onSearchKeywordChange={(keyword) => setSearchKeyword(keyword)}\n      onRepositoryPress={(id) => {\n        history.push(`/repositories/${id}`);\n      }}\n    />\n  );\n};\n\nexport default RepositoryList;"]},"metadata":{},"sourceType":"module"}