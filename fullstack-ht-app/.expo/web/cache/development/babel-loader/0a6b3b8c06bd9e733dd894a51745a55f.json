{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Home.jsx\";\nimport React, { useContext, useRef, useEffect, useState } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useQuery } from '@apollo/client';\nimport { StateContext } from \"../state\";\nimport Text from \"./Text\";\nimport fileService from \"../services/files\";\nvar styles = StyleSheet.create({\n  home: {\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1\n  }\n});\n\nvar Home = function Home() {\n  var getImage = function getImage(filename) {\n    return _regeneratorRuntime.async(function getImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fileService.getImage(filename));\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Animated.View, {\n    style: [styles.home, {\n      transform: [{\n        translateX: homeAnim\n      }]\n    }]\n  }, React.createElement(View, null, files.map(function (file) {\n    return React.createElement(React.Fragment, {\n      key: file._id\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: {\n        uri: \"http://localhost:3001/image/\" + file.filename\n      }\n    }));\n  }), React.createElement(Text, null, \"Pictures&videos\"))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Home.jsx"],"names":["React","useContext","useRef","useEffect","useState","useQuery","StateContext","Text","fileService","styles","StyleSheet","create","home","height","width","position","zIndex","Home","getImage","filename","transform","translateX","homeAnim","files","map","file","_id","photo","uri"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D;;;;;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,SAASC,YAAT;AACA,OAAOC,IAAP;AACA,OAAOC,WAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,MADJ;AAEJC,IAAAA,KAAK,EAAE,MAFH;AAGJC,IAAAA,QAAQ,EAAE,UAHN;AAIJC,IAAAA,MAAM,EAAE;AAJJ;AADyB,CAAlB,CAAf;;AAcA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAsBjB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACFX,WAAW,CAACU,QAAZ,CAAqBC,QAArB,CADE;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAMA,SACG,0CACC,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAACV,MAAM,CAACG,IAAR,EAAc;AAClCQ,MAAAA,SAAS,EAAE,CAAC;AACVC,QAAAA,UAAU,EAAEC;AADF,OAAD;AADuB,KAAd;AAAtB,KAKE,oBAAC,IAAD,QACGC,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD;AAAA,WACT,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEA,IAAI,CAACC;AAA1B,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAEjB,MAAM,CAACkB,KADhB;AAEE,MAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,mCAAiCH,IAAI,CAACN;AADnC;AAFV,MADF,CADS;AAAA,GAAV,CADH,EAUE,oBAAC,IAAD,0BAVF,CALF,CADD,CADH;AAwBD,CApDD;;AAsDA,eAAeF,IAAf","sourcesContent":["import React, { useContext, useRef, useEffect, useState } from 'react';\nimport { Animated, StyleSheet, View, Image } from 'react-native';\nimport { useQuery } from '@apollo/client'; \n\nimport { StateContext } from '../state';\nimport Text from './Text';\nimport fileService from '../services/files';\n\nconst styles = StyleSheet.create({\n  home: {\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1,\n  },\n  // photo: {\n  //   width: 50,\n  //   height: 50,\n  // },\n});\n\n\nconst Home = () => {\n  // const homeAnim = useRef(new Animated.Value(0)).current; \n  // const { state } = useContext(StateContext);\n  // const [files, setFiles] = useState([]);\n\n  // const moveMenu = () => {\n\n  //   Animated.spring(\n  //     homeAnim,\n  //     {\n  //       toValue: state.open ? 600 : 0\n  //     }\n  //   ).start();\n  \n  // };\n\n  // useEffect(() => {\n  //   moveMenu();\n  //   fileService.getAll().then(files =>\n  //     setFiles(files));\n  // },[]);\n\n  const getImage = async (filename) => {\n    return await fileService.getImage(filename);\n  };\n\n  // get images here\n\n  return (\n     <>\n      <Animated.View style={[styles.home, {\n        transform: [{\n          translateX: homeAnim\n        }]\n      }]}>\n        <View>\n          {files.map((file) =>\n            <React.Fragment key={file._id}>\n              <Image\n                style={styles.photo}\n                source={{\n                  uri: `http://localhost:3001/image/${file.filename}`\n                }} />\n            </React.Fragment>\n          )}\n          <Text>Pictures&videos</Text>\n        </View>\n      </Animated.View> \n      \n     </>\n\n  );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}