{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/AppBar.jsx\";\nimport React, { useContext, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Constants from 'expo-constants';\nimport { Link } from 'react-router-native';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-native';\nimport useResizeAware from 'react-resize-aware';\nimport theme from \"../theme\";\nimport Text from \"./Text\";\nimport AuthStorageContext from \"../contexts/AuthStorageContext\";\nimport useAuthorizedUser from \"../hooks/useAuthorizedUser\";\nimport { StateContext } from \"../state\";\nimport { IconButton } from 'react-native-paper';\nimport { Appbar } from 'react-native-paper';\nvar styles = StyleSheet.create({\n  appbar: {\n    backgroundColor: theme.colors.primary,\n    zIndex: 200\n  },\n  container: {\n    backgroundColor: theme.colors.appBarBackground,\n    width: '100%',\n    position: 'fixed',\n    zIndex: 50\n  },\n  scrollView: {\n    flexDirection: 'row'\n  },\n  tabTouchable: {\n    flexGrow: 0\n  },\n  tabContainer: {\n    paddingHorizontal: 15,\n    paddingVertical: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  tabText: {\n    color: 'white'\n  }\n});\n\nvar AppBarTab = function AppBarTab(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return React.createElement(TouchableWithoutFeedback, _extends({\n    style: styles.tabTouchable\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: styles.tabContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    fontWeight: \"bold\",\n    style: styles.tabText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, children)));\n};\n\nvar AppBar = function AppBar() {\n  var apolloClient = useApolloClient();\n  var authStorage = useContext(AuthStorageContext);\n  var history = useHistory();\n\n  var _useResizeAware = useResizeAware(),\n      _useResizeAware2 = _slicedToArray(_useResizeAware, 2),\n      resizeListener = _useResizeAware2[0],\n      sizes = _useResizeAware2[1];\n\n  var newWidth = (sizes.width - 200) / sizes.width * 100 + \"%\";\n\n  var _useAuthorizedUser = useAuthorizedUser(),\n      authorizedUser = _useAuthorizedUser.authorizedUser;\n\n  var _useContext = useContext(StateContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var resizeAnim = useRef(new Animated.Value(0)).current;\n\n  var onSignOut = function onSignOut() {\n    return _regeneratorRuntime.async(function onSignOut$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(authStorage.removeAccessToken());\n\n          case 2:\n            apolloClient.resetStore();\n            history.push('/');\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  console.log(newWidth);\n\n  var moveAppbar = function moveAppbar() {\n    Animated.spring(resizeAnim, {\n      toValue: state.open ? 600 : 0\n    }).start();\n  };\n\n  useEffect(function () {\n    moveAppbar();\n  });\n  console.log('sizes: ', sizes);\n  return React.createElement(Animated.View, {\n    style: [styles.container, {\n      transform: [{\n        translateX: resizeAnim\n      }]\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, resizeListener, React.createElement(ScrollView, {\n    style: styles.scrollView,\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 8\n    }\n  }, React.createElement(IconButton, {\n    icon: \"menu\",\n    color: theme.colors.primary,\n    size: 40,\n    onPress: function onPress() {\n      return dispatch({\n        type: \"SET_OPEN\",\n        payload: !state.open\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 8\n    }\n  }), authorizedUser ? React.createElement(React.Fragment, null, React.createElement(AppBarTab, {\n    onPress: onSignOut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Sign out\")) : React.createElement(React.Fragment, null, React.createElement(Link, {\n    to: \"/sign-in\",\n    component: AppBarTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"Sign in\"), React.createElement(Link, {\n    to: \"/sign-up\",\n    component: AppBarTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Sign up\"), React.createElement(Link, {\n    to: \"/\",\n    component: AppBarTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, \"Home\"))));\n};\n\nexport default AppBar;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/AppBar.jsx"],"names":["React","useContext","useRef","useEffect","Constants","Link","useApolloClient","useHistory","useResizeAware","theme","Text","AuthStorageContext","useAuthorizedUser","StateContext","IconButton","Appbar","styles","StyleSheet","create","appbar","backgroundColor","colors","primary","zIndex","container","appBarBackground","width","position","scrollView","flexDirection","tabTouchable","flexGrow","tabContainer","paddingHorizontal","paddingVertical","alignItems","justifyContent","tabText","color","AppBarTab","children","props","AppBar","apolloClient","authStorage","history","resizeListener","sizes","newWidth","authorizedUser","state","dispatch","resizeAnim","Animated","Value","current","onSignOut","removeAccessToken","resetStore","push","console","log","moveAppbar","spring","toValue","open","start","transform","translateX","type","payload"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react';\n\nimport {\n  View,\n  ScrollView,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  Animated,\n} from 'react-native';\n\nimport Constants from 'expo-constants';\nimport { Link } from 'react-router-native';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-native';\nimport useResizeAware from 'react-resize-aware';\n\nimport theme from '../theme';\nimport Text from './Text';\nimport AuthStorageContext from '../contexts/AuthStorageContext';\nimport useAuthorizedUser from '../hooks/useAuthorizedUser';\n\nimport { StateContext } from '../state';\nimport { IconButton } from 'react-native-paper';\n\nimport { Appbar } from 'react-native-paper';\n\nconst styles = StyleSheet.create({\n  appbar: {\n    backgroundColor: theme.colors.primary,\n    zIndex: 200\n    \n  },\n  container: {\n    // paddingTop: Constants.statusBarHeight,\n    backgroundColor: theme.colors.appBarBackground,\n    width: '100%',\n    position: 'fixed',\n    zIndex: 50\n  },\n  scrollView: {\n    flexDirection: 'row',\n  },\n  tabTouchable: {\n    flexGrow: 0,\n  },\n  tabContainer: {\n    paddingHorizontal: 15,\n    paddingVertical: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  tabText: {\n    color: 'white',\n  }\n});\n\nconst AppBarTab = ({ children, ...props }) => { \n  return (\n    <TouchableWithoutFeedback style={styles.tabTouchable} {...props}>\n      <View style={styles.tabContainer}>\n        <Text fontWeight=\"bold\" style={styles.tabText}>\n          {children}\n        </Text>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nconst AppBar = () => {\n  const apolloClient = useApolloClient();\n  const authStorage = useContext(AuthStorageContext);\n  const history = useHistory();\n  const [resizeListener, sizes] = useResizeAware();\n  const newWidth = `${((sizes.width - 200) / sizes.width) * 100}%`;\n\n  const { authorizedUser } = useAuthorizedUser();\n\n  const { state, dispatch } = useContext(StateContext);\n  const resizeAnim = useRef(new Animated.Value(0)).current; \n\n  const onSignOut = async () => {\n    await authStorage.removeAccessToken();\n    apolloClient.resetStore();\n    history.push('/');\n  };\n\n  console.log(newWidth);\n\n  const moveAppbar = () => {\n\n    Animated.spring(\n      resizeAnim,\n      {\n        toValue: state.open ? 600 : 0\n      }\n    ).start();\n  \n  };\n\n  useEffect(() => {\n    moveAppbar();\n  });\n\n  console.log('sizes: ', sizes);\n\n  return (\n  //   <>\n\n  //   <View>\n  //     {resizeListener}\n  //   </View>\n  //   <Animated.View style={[styles.appbar, {\n  //     transform: [{\n  //       translateX: resizeAnim\n  //     }]\n  //   }]}>\n  //     <Appbar style={styles.appbar}>\n  //     <Appbar.Action\n  //       icon=\"menu\"\n  //       onPress={() => dispatch({type: \"SET_OPEN\", payload: !state.open})}\n  //     />\n  //     <Appbar.Action icon=\"mail\" onPress={() => console.log('Pressed mail')} />\n  //     <Appbar.Action icon=\"home\" onPress={() => console.log('Pressed label')} />\n  //     <Appbar.Action\n  //       icon=\"magnify\"\n  //       onPress={() => console.log('Pressed delete')}\n  //     />\n  //       <Appbar.Action\n  //       icon=\"account\"\n  //       onPress={() => console.log('account')}\n  //     />\n  //   </Appbar>\n  //   </Animated.View>\n\n\n  //  </>\n    \n      // <View style={styles.container}>\n      // <View>\n\n        <Animated.View style={[styles.container, {\n          transform: [{\n            translateX: resizeAnim\n          }]\n        }]}>\n          {resizeListener}\n       <ScrollView style={styles.scrollView} horizontal> \n       <IconButton icon=\"menu\" color={theme.colors.primary} size={40} onPress={() => dispatch({type: \"SET_OPEN\", payload: !state.open})} \n        ></IconButton>\n        {authorizedUser ? (\n          <>\n            <AppBarTab onPress={onSignOut}>Sign out</AppBarTab>\n          </>\n        ) : (\n          <>\n            <Link to=\"/sign-in\" component={AppBarTab}>\n              Sign in\n            </Link>\n            <Link to=\"/sign-up\" component={AppBarTab}>\n              Sign up\n            </Link>\n            <Link to=\"/\" component={AppBarTab}>\n              Home\n            </Link>\n          </>\n        )}\n      </ScrollView>\n      </Animated.View>\n  ); \n};\n\nexport default AppBar;"]},"metadata":{},"sourceType":"module"}