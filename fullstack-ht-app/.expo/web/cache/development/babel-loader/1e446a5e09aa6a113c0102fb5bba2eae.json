{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/RepositoryList.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useContext, useRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { StateContext } from \"../state\";\nvar styles = StyleSheet.create({\n  sidebar: {\n    width: 200,\n    height: 400,\n    backgroundColor: \"blue\"\n  }\n});\nexport var RepositoryListContainer = function (_React$Component) {\n  _inherits(RepositoryListContainer, _React$Component);\n\n  var _super = _createSuper(RepositoryListContainer);\n\n  function RepositoryListContainer() {\n    _classCallCheck(this, RepositoryListContainer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RepositoryListContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          state = _this$props.state,\n          toggleAnim = _this$props.toggleAnim;\n      Animated.spring(toggleAnim, {\n        toValue: state ? 0 : -200\n      }).start();\n      return React.createElement(React.Fragment, null, React.createElement(Animated.View, {\n        style: [styles.sidebar, {\n          transform: [{\n            translateX: toggleAnim\n          }]\n        }]\n      }));\n    }\n  }]);\n\n  return RepositoryListContainer;\n}(React.Component);\n\nvar RepositoryList = function RepositoryList() {\n  var _useContext = useContext(StateContext),\n      state = _useContext.state;\n\n  var toggleAnim = useRef(new Animated.Value(0)).current;\n  Animated.spring(toggleAnim, {\n    toValue: state ? 0 : -200\n  }).start();\n  return React.createElement(Animated.View, {\n    style: [styles.sidebar, {\n      transform: [{\n        translateX: toggleAnim\n      }]\n    }]\n  });\n};\n\nexport default RepositoryList;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/RepositoryList.jsx"],"names":["React","useContext","useRef","StateContext","styles","StyleSheet","create","sidebar","width","height","backgroundColor","RepositoryListContainer","props","state","toggleAnim","Animated","spring","toValue","start","transform","translateX","Component","RepositoryList","Value","current"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,QAA0C,OAA1C;;;;AAGA,SAASC,YAAT;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,GADA;AAEPC,IAAAA,MAAM,EAAE,GAFD;AAGPC,IAAAA,eAAe,EAAE;AAHV;AADsB,CAAlB,CAAf;AAWA,WAAaC,uBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAEW;AAAA,wBAGuB,KAAKC,KAH5B;AAAA,UAGCC,KAHD,eAGCA,KAHD;AAAA,UAGQC,UAHR,eAGQA,UAHR;AAKPC,MAAAA,QAAQ,CAACC,MAAT,CACEF,UADF,EAEE;AACEG,QAAAA,OAAO,EAAEJ,KAAK,GAAG,CAAH,GAAO,CAAC;AADxB,OAFF,EAKEK,KALF;AAOA,aACE,0CACE,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,KAAK,EAAE,CAACd,MAAM,CAACG,OAAR,EAAiB;AACrCY,UAAAA,SAAS,EAAE,CAAC;AACVC,YAAAA,UAAU,EAAEN;AADF,WAAD;AAD0B,SAAjB;AAAtB,QADF,CADF;AAYD;AA1BH;;AAAA;AAAA,EAA6Cd,KAAK,CAACqB,SAAnD;;AA6BA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,oBACTrB,UAAU,CAACE,YAAD,CADD;AAAA,MACnBU,KADmB,eACnBA,KADmB;;AAE3B,MAAMC,UAAU,GAAGZ,MAAM,CAAC,IAAIa,QAAQ,CAACQ,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAAjD;AAGAT,EAAAA,QAAQ,CAACC,MAAT,CACEF,UADF,EAEE;AACEG,IAAAA,OAAO,EAAEJ,KAAK,GAAG,CAAH,GAAO,CAAC;AADxB,GAFF,EAKEK,KALF;AAOA,SAGE,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAACd,MAAM,CAACG,OAAR,EAAiB;AACrCY,MAAAA,SAAS,EAAE,CAAC;AACVC,QAAAA,UAAU,EAAEN;AADF,OAAD;AAD0B,KAAjB;AAAtB,IAHF;AAeD,CA3BD;;AA6BA,eAAeQ,cAAf","sourcesContent":["import React, { useContext, useRef } from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\n\nimport { StateContext } from '../state';\n\nconst styles = StyleSheet.create({\n  sidebar: {\n    width: 200,\n    height: 400, \n    backgroundColor: \"blue\"\n  }\n});\n\n\n\n\nexport class RepositoryListContainer extends React.Component {\n\n  render() {\n\n\n    const { state, toggleAnim } = this.props;\n\n    Animated.spring(\n      toggleAnim,\n      {\n        toValue: state ? 0 : -200,\n      }\n    ).start();\n\n    return (\n      <>\n        <Animated.View style={[styles.sidebar, {\n          transform: [{\n            translateX: toggleAnim\n          }]\n        }]} />\n\n      \n      </>\n \n    );\n  }\n}\n\nconst RepositoryList = () => {\n  const { state } = useContext(StateContext);\n  const toggleAnim = useRef(new Animated.Value(0)).current;\n\n\n  Animated.spring(\n    toggleAnim,\n    {\n      toValue: state ? 0 : -200,\n    }\n  ).start();\n\n  return (\n\n\n    <Animated.View style={[styles.sidebar, {\n      transform: [{\n        translateX: toggleAnim\n      }]\n    }]} />\n\n\n    // <RepositoryListContainer\n    //   state={state.open}\n    //   toggleAnim={toggleAnim}\n    // />\n  );\n};\n\nexport default RepositoryList;"]},"metadata":{},"sourceType":"module"}