{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/ChoosePic.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport uuid from 'uuid';\nimport * as ImagePicker from 'expo-image-picker';\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/firebase-storage\";\nimport \"firebase/firebase-auth\";\nimport { addImageToFirestore } from \"../firebase/firebaseFunctions\";\n\nvar ChoosePic = function ChoosePic() {\n  useEffect(function () {\n    console.log('test');\n  });\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var status;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              status = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n            case 6:\n              status = _context.sent;\n\n              if (status !== 'granted') {\n                alert('Need to have permission!');\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickProfilePicFromLibrary = function pickProfilePicFromLibrary() {\n    var result;\n    return _regeneratorRuntime.async(function pickProfilePicFromLibrary$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log('result: ', result);\n\n            if (!result.cancelled) {\n              uploadImage(result.uri);\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var takeProfilePic = function takeProfilePic() {\n    var result;\n    return _regeneratorRuntime.async(function takeProfilePic$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context3.sent;\n            console.log('result: ', result);\n\n            if (!result.cancelled) {\n              uploadImage(result.uri);\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadImage = function uploadImage(uri) {\n    var response, blob, ref, uploadTask;\n    return _regeneratorRuntime.async(function uploadImage$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            console.log('uri: ', uri);\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 3:\n            response = _context4.sent;\n            _context4.next = 6;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 6:\n            blob = _context4.sent;\n            ref = firebase.storage().ref().child(\"images/\" + firebase.auth().currentUser.uid + \"/\" + uuid.v4());\n            console.log('blob: ', blob);\n            uploadTask = ref.put(blob);\n            console.log('uploadTask: ', uploadTask);\n            uploadTask.on('state_changed', function (snapshot) {\n              var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n              console.log('Upload is ' + progress + '% done');\n\n              switch (snapshot.state) {\n                case firebase.storage.TaskState.PAUSED:\n                  console.log('Upload is paused');\n                  break;\n\n                case firebase.storage.TaskState.RUNNING:\n                  console.log('Upload is running');\n                  break;\n              }\n            }, function (error) {\n              switch (error.code) {\n                case 'storage/unauthorized':\n                  console.log(error.code);\n                  break;\n\n                case 'storage/canceled':\n                  console.log(error.code);\n                  break;\n\n                case 'storage/unknown':\n                  console.log(error.code);\n                  break;\n              }\n            }, function () {\n              uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                console.log('File available at', downloadURL);\n                addImageToFirestore(downloadURL);\n              });\n            });\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, React.createElement(Button, {\n    title: \"Pick an image from camera roll\",\n    onPress: pickProfilePicFromLibrary\n  }), React.createElement(Button, {\n    title: \"Take a picture\",\n    onPress: takeProfilePic\n  }), image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 200,\n      height: 200\n    }\n  }));\n};\n\nexport default ChoosePic;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/ChoosePic.jsx"],"names":["React","useState","useEffect","uuid","ImagePicker","firebase","addImageToFirestore","ChoosePic","console","log","image","setImage","Platform","OS","requestMediaLibraryPermissionsAsync","status","requestCameraPermissionsAsync","alert","pickProfilePicFromLibrary","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uploadImage","uri","takeProfilePic","launchCameraAsync","fetch","response","blob","ref","storage","child","auth","currentUser","uid","v4","uploadTask","put","on","snapshot","progress","bytesTransferred","totalBytes","state","TaskState","PAUSED","RUNNING","error","code","getDownloadURL","then","downloadURL","flex","alignItems","justifyContent","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Image, Button, Platform, Alert } from 'react-native';\nimport uuid from 'uuid';\nimport * as ImagePicker from 'expo-image-picker';\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/firebase-storage\";\nimport \"firebase/firebase-auth\";\nimport { addImageToFirestore } from '../firebase/firebaseFunctions';\n\n\nconst ChoosePic = () => {\n\n  useEffect(() => {\n    console.log('test');\n  });\n\n  const [image, setImage] = useState(null);\n \n  // laita silloin kun painaa nappia\n  useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        let status = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        status = await ImagePicker.requestCameraPermissionsAsync();\n        if (status !== 'granted') {\n          alert('Need to have permission!');\n        }\n      }\n    })();\n  }, []);\n\n  const pickProfilePicFromLibrary = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    console.log('result: ', result);\n\n    if (!result.cancelled) {\n      uploadImage(result.uri);\n      setImage(result.uri);\n    }\n  };\n\n  const takeProfilePic = async () => {\n    let result = await ImagePicker.launchCameraAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    console.log('result: ', result);\n\n    if (!result.cancelled) {\n      uploadImage(result.uri);\n      setImage(result.uri);\n    }\n  };\n\n  const uploadImage = async(uri) => {\n    console.log('uri: ', uri);\n    const response = await fetch(uri);\n    const blob = await response.blob();\n\n    const ref = firebase.storage().ref().child(`images/${firebase.auth().currentUser.uid}/${uuid.v4()}`);\n\n    console.log('blob: ', blob);\n\n    const uploadTask = ref.put(blob);\n\n    console.log('uploadTask: ', uploadTask);\n\n    uploadTask.on('state_changed', \n  (snapshot) => {\n    // Observe state change events such as progress, pause, and resume\n    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n    console.log('Upload is ' + progress + '% done');\n    switch (snapshot.state) {\n      case firebase.storage.TaskState.PAUSED: // or 'paused'\n        console.log('Upload is paused');\n        break;\n      case firebase.storage.TaskState.RUNNING: // or 'running'\n        console.log('Upload is running');\n        break;\n    }\n  }, \n  (error) => {\n    // Handle unsuccessful uploads\n    switch (error.code) {\n      case 'storage/unauthorized':\n        // User doesn't have permission to access the object\n        console.log(error.code);\n        break;\n      case 'storage/canceled':\n        // User canceled the upload\n        console.log(error.code);\n        break;\n      case 'storage/unknown':\n        // Unknown error occurred, inspect error.serverResponse\n        console.log(error.code);\n        break;\n    }\n  },\n  () => {\n    // Handle successful uploads on complete\n    // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n    uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n      console.log('File available at', downloadURL);\n      addImageToFirestore(downloadURL);\n    });\n  });\n\n  };\n\n  return (\n\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n    <Button title=\"Pick an image from camera roll\" onPress={pickProfilePicFromLibrary} />\n    <Button title='Take a picture' onPress={takeProfilePic} />\n    {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}\n    {/* <Image source={{ url : imageUrl }} style={{ width: 200, height: 200 }} /> */}\n  </View>\n\n  );\n};\n\nexport default ChoosePic;\n"]},"metadata":{},"sourceType":"module"}