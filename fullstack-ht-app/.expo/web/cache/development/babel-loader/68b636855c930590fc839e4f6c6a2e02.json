{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyMessages.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useHistory } from 'react-router-native';\nimport MessageItem from \"./MessageItem\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nvar styles = StyleSheet.create({\n  container: {\n    padding: 5,\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1,\n    paddingTop: 80,\n    paddingBottom: 60\n  },\n  separator: {\n    marginVertical: 5\n  },\n  headerContainer: {\n    padding: 10\n  },\n  searchContainer: {\n    marginBottom: 15\n  }\n});\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator\n  });\n};\n\nvar MyMessages = function MyMessages() {\n  var history = useHistory();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      chatIDs = _useState4[0],\n      setChatIDs = _useState4[1];\n\n  var currentUser = firebase.auth().currentUser;\n  useEffect(function () {\n    firebase.firestore().collection('users').get().then(function (querySnapshot) {\n      var ids = querySnapshot.docs.map(function (doc) {\n        var id = doc.id;\n\n        if (id !== currentUser.uid) {\n          var chatIDpre = [];\n          chatIDpre.push(currentUser.uid);\n          chatIDpre.push(id);\n          chatIDpre.sort();\n          return chatIDpre.join('_');\n        }\n      });\n      console.log('ids: ', ids);\n      setChatIDs(ids);\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(FlatList, {\n    data: messages,\n    keyExtractor: function keyExtractor(_ref) {\n      var id = _ref.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        key: item,\n        onPress: function onPress() {\n          return history.push(\"/messenger/\" + item.id);\n        }\n      }, React.createElement(MessageItem, {\n        message: item\n      }));\n    },\n    ItemSeparatorComponent: ItemSeparator\n  }));\n};\n\nexport default MyMessages;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyMessages.jsx"],"names":["React","useState","useEffect","useHistory","MessageItem","firebase","styles","StyleSheet","create","container","padding","height","width","position","zIndex","paddingTop","paddingBottom","separator","marginVertical","headerContainer","searchContainer","marginBottom","ItemSeparator","MyMessages","history","messages","setMessages","chatIDs","setChatIDs","currentUser","auth","firestore","collection","get","then","querySnapshot","ids","docs","map","doc","id","uid","chatIDpre","push","sort","join","console","log","catch","error","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FlatList, View, StyleSheet, TouchableOpacity } from 'react-native';\nimport { useHistory } from 'react-router-native';\nimport MessageItem from './MessageItem';\n// import * as firebase from 'firebase';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n\nconst styles = StyleSheet.create({\n    container: {\n        padding: 5,\n        height: '100%',\n        width: '100%',\n        position: 'absolute',\n        zIndex: 1,\n        paddingTop: 80,\n        paddingBottom: 60\n    },\n    separator: {\n        marginVertical: 5\n    },\n    headerContainer: {\n        padding: 10,\n    },\n    searchContainer: {\n        marginBottom: 15,\n    },\n});\n\nconst ItemSeparator = () => {\n\n\n    return(<View style={styles.separator}>\n\n    </View>);\n\n};\n\n\nconst MyMessages = () => {\n    const history = useHistory();\n    const [messages, setMessages] = useState([]);\n    const [chatIDs, setChatIDs] = useState([]);\n    const currentUser = firebase.auth().currentUser;\n\n\n\n    useEffect(() => {   \n        \n        firebase.firestore().\n        collection('users')\n            .get()\n            .then((querySnapshot) => {\n                let ids = querySnapshot.docs.map(doc => {\n                    const id = doc.id;\n                    if (id !== currentUser.uid) {\n                    const chatIDpre = [];\n                    chatIDpre.push(currentUser.uid);\n                    chatIDpre.push(id);\n                    chatIDpre.sort();\n                    return chatIDpre.join('_');\n                    }\n                });\n                 console.log('ids: ', ids);\n                setChatIDs(ids);\n            })\n            .catch((error) => {\n                console.log(\"Error getting documents: \", error);\n            });\n        // firebase.firestore().\n        // collection('messages').where()\n        //     .get()\n        //     .then((querySnapshot) => {\n        //         let posts = querySnapshot.docs.map(doc => {\n        //             const data = doc.data();\n        //             const id = doc.id;\n        //             return { id, ...data };\n        //         });\n        //          console.log('posts: ', posts);\n        //         setUsers(posts);\n        //     })\n        //     .catch((error) => {\n        //         console.log(\"Error getting documents: \", error);\n        //     });\n    }, []);\n\n    return (\n        <View style={styles.container}>\n            <FlatList\n                data={messages}\n                keyExtractor={({ id }) => id}\n                renderItem={({ item }) => (\n                    <TouchableOpacity\n                        key={item}\n                        onPress={() => history.push(`/messenger/${item.id}`)}\n                    >\n                        <MessageItem message={item} />\n                    </TouchableOpacity>\n                )}\n                ItemSeparatorComponent={ItemSeparator}\n            />\n        </View>\n    );\n};\n\nexport default MyMessages;"]},"metadata":{},"sourceType":"module"}