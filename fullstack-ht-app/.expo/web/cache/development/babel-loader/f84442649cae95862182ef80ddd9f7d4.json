{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UploadWhisky.jsx\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-native';\nimport { Button } from 'react-native-paper';\nimport Text from \"./Text\";\nimport FormikTextInput from \"./FormikTextInput\";\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1\n  },\n  fieldContainer: {\n    margin: 15\n  },\n  heading: {\n    alignItems: 'center',\n    marginBottom: 30\n  },\n  buttoncontainer: {}\n});\nvar initialValues = {\n  name: '',\n  distillery: '',\n  country: '',\n  type: '',\n  age: '',\n  abv: '',\n  bottlesize: ''\n};\nvar validationSchema = yup.object().shape({\n  name: yup.string().required('Name is required'),\n  distillery: yup.string().required('Distillery is required'),\n  country: yup.string().required('Country is required'),\n  type: yup.string().required('Type is required'),\n  age: yup.number().required('Age is required'),\n  abv: yup.number().required('Abv is required'),\n  bottlesize: yup.number().required('Bottlesize is required')\n});\n\nvar UploadWhiskyForm = function UploadWhiskyForm(_ref) {\n  var onSubmit = _ref.onSubmit;\n  return React.createElement(View, null, React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"name\",\n    placeholder: \"Name\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"distillery\",\n    placeholder: \"Distillery\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"country\",\n    placeholder: \"Country\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"type\",\n    placeholder: \"Type\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"age\",\n    keyboardType: \"numeric\",\n    placeholder: \"Age\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"abv\",\n    keyboardType: \"numeric\",\n    placeholder: \"Abv\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"bottlesize\",\n    keyboardType: \"numeric\",\n    placeholder: \"Bottlesize\"\n  })), React.createElement(Button, {\n    icon: 'bottle-wine',\n    style: styles.fieldContainer,\n    mode: \"contained\",\n    onPress: onSubmit\n  }, \"Upload whisky\"));\n};\n\nconsole.log('upload whisky page');\n\nvar UploadWhisky = function UploadWhisky() {\n  var history = useHistory();\n\n  var onSubmit = function onSubmit(values) {\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('values: ', values);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, console.log('test test test'), React.createElement(View, {\n    style: styles.heading\n  }, React.createElement(Text, {\n    color: 'primary',\n    fontSize: 'heading',\n    fontWeight: 'bold'\n  }, \"Upload Whisky\")), React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validationSchema: validationSchema\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit;\n    return React.createElement(UploadWhiskyForm, {\n      onSubmit: handleSubmit\n    });\n  }), React.createElement(Button, {\n    icon: \"camera\",\n    mode: \"outlined\",\n    style: styles.buttoncontainer\n  }, \"Upload image\"));\n};\n\nexport default UploadWhisky;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UploadWhisky.jsx"],"names":["React","Formik","yup","useHistory","Button","Text","FormikTextInput","styles","StyleSheet","create","container","flexDirection","justifyContent","height","width","position","zIndex","fieldContainer","margin","heading","alignItems","marginBottom","buttoncontainer","initialValues","name","distillery","country","type","age","abv","bottlesize","validationSchema","object","shape","string","required","number","UploadWhiskyForm","onSubmit","console","log","UploadWhisky","history","values","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-native';\n\nimport { Button} from 'react-native-paper';\nimport Text from './Text';\nimport FormikTextInput from './FormikTextInput';\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1\n  },\n  fieldContainer: {\n    margin: 15,\n  },\n  heading: {\n    alignItems: 'center',\n    marginBottom: 30\n  },\n  buttoncontainer: {\n\n  }\n});\n\nconst initialValues = {\n  name: '',\n  distillery: '',\n  country: '',\n  type: '',\n  age: '',\n  abv: '',\n  bottlesize: ''\n\n};\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .required('Name is required'),\n  distillery: yup\n    .string()\n    .required('Distillery is required'),\n  country: yup\n    .string()\n    .required('Country is required'),\n  type: yup\n    .string()\n    .required('Type is required'),\n  age: yup \n    .number()\n    .required('Age is required'),\n  abv: yup\n    .number()\n    .required('Abv is required'),\n  bottlesize: yup\n    .number()\n    .required('Bottlesize is required')\n});\n\nconst UploadWhiskyForm = ({ onSubmit }) => {\n  return (\n    <View>\n      <View style={styles.fieldContainer}>\n        <FormikTextInput \n        name=\"name\" \n        placeholder=\"Name\" />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"distillery\"\n          placeholder=\"Distillery\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"country\"\n          placeholder=\"Country\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"type\"\n          placeholder=\"Type\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"age\"\n          keyboardType=\"numeric\"\n          placeholder=\"Age\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"abv\"\n          keyboardType=\"numeric\"\n          placeholder=\"Abv\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"bottlesize\"\n          keyboardType=\"numeric\"\n          placeholder=\"Bottlesize\"\n        />\n      </View>\n\n      <Button icon={'bottle-wine'} style={styles.fieldContainer} mode='contained' onPress={onSubmit}>\n          Upload whisky\n      </Button>\n    </View>\n  );\n};\n\nconsole.log('upload whisky page');\n\nconst UploadWhisky = () => {\n  const history = useHistory();\n\n  const onSubmit = async (values) => {\n    console.log('values: ', values);\n\n  };\n\n  return (\n    <View style={styles.container}>\n\n      {console.log('test test test')}\n\n      <View style={styles.heading}>\n        <Text color={'primary'} fontSize={'heading'} fontWeight={'bold'}>\n          Upload Whisky\n        </Text>\n      </View>\n      \n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {({ handleSubmit }) => <UploadWhiskyForm onSubmit={handleSubmit} />}\n      </Formik>\n      <Button icon='camera' mode='outlined' style={styles.buttoncontainer}>Upload image</Button>\n\n    </View>\n  );\n};\n\nexport default UploadWhisky;"]},"metadata":{},"sourceType":"module"}