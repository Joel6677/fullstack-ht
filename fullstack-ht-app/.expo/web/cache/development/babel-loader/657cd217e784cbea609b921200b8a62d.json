{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { IconButton, Text } from 'react-native-paper';\nimport { useHeaderTextColor } from \"../utils\";\nimport Color from 'color';\n\nfunction getLabel(mode, configuredLabel) {\n  if (configuredLabel) {\n    return configuredLabel;\n  }\n\n  if (mode === 'range') {\n    return 'Select period';\n  }\n\n  if (mode === 'single') {\n    return 'Select date';\n  }\n\n  if (mode === 'excludeInRange') {\n    return 'Select excluded dates';\n  }\n\n  if (mode === 'multiple') {\n    return 'Select dates';\n  }\n\n  return '...?';\n}\n\nexport default function DatePickerModalHeader(props) {\n  var onToggle = props.onToggle,\n      collapsed = props.collapsed,\n      mode = props.mode,\n      moreLabel = props.moreLabel;\n  var label = getLabel(props.mode, props.label);\n  var color = useHeaderTextColor();\n  var allowEditing = mode !== 'excludeInRange' && mode !== 'multiple';\n  return React.createElement(View, {\n    style: [styles.header]\n  }, React.createElement(View, null, React.createElement(Text, {\n    style: [styles.label, {\n      color: color\n    }]\n  }, label.toUpperCase()), React.createElement(View, {\n    style: styles.headerContentContainer\n  }, mode === 'range' ? React.createElement(HeaderContentRange, _extends({}, props, {\n    color: color\n  })) : null, mode === 'single' ? React.createElement(HeaderContentSingle, _extends({}, props, {\n    color: color\n  })) : null, mode === 'excludeInRange' ? React.createElement(HeaderContentExcludeInRange, _extends({}, props, {\n    color: color\n  })) : null, mode === 'multiple' ? React.createElement(HeaderContentMulti, _extends({}, props, {\n    color: color,\n    moreLabel: moreLabel\n  })) : null)), React.createElement(View, {\n    style: styles.fill\n  }), allowEditing ? React.createElement(IconButton, {\n    icon: collapsed ? 'pencil' : 'calendar',\n    color: color,\n    onPress: onToggle\n  }) : null);\n}\nexport function HeaderContentSingle(_ref) {\n  var state = _ref.state,\n      _ref$emptyLabel = _ref.emptyLabel,\n      emptyLabel = _ref$emptyLabel === void 0 ? ' ' : _ref$emptyLabel,\n      color = _ref.color,\n      locale = _ref.locale;\n  var lighterColor = Color(color).fade(0.5).rgb().toString();\n  var dateColor = state.date ? color : lighterColor;\n  var formatter = React.useMemo(function () {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric'\n    });\n  }, [locale]);\n  return React.createElement(Text, {\n    style: [styles.singleHeaderText, {\n      color: dateColor\n    }]\n  }, state.date ? formatter.format(state.date) : emptyLabel);\n}\nexport function HeaderContentMulti(_ref2) {\n  var state = _ref2.state,\n      _ref2$emptyLabel = _ref2.emptyLabel,\n      emptyLabel = _ref2$emptyLabel === void 0 ? ' ' : _ref2$emptyLabel,\n      _ref2$moreLabel = _ref2.moreLabel,\n      moreLabel = _ref2$moreLabel === void 0 ? 'more' : _ref2$moreLabel,\n      color = _ref2.color,\n      locale = _ref2.locale;\n\n  var _state$dates;\n\n  var dateCount = ((_state$dates = state.dates) === null || _state$dates === void 0 ? void 0 : _state$dates.length) || 0;\n  var lighterColor = Color(color).fade(0.5).rgb().toString();\n  var dateColor = dateCount ? color : lighterColor;\n  var formatter = React.useMemo(function () {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric'\n    });\n  }, [locale]);\n  var label = emptyLabel;\n\n  if (dateCount) {\n    if (dateCount <= 2) {\n      label = state.dates.map(function (date) {\n        return formatter.format(date);\n      }).join(', ');\n    } else {\n      label = formatter.format(state.dates[0]) + \" (+ \".concat(dateCount - 1, \" \").concat(moreLabel, \")\");\n    }\n  }\n\n  return React.createElement(Text, {\n    style: [styles.singleHeaderText, {\n      color: dateColor\n    }]\n  }, label);\n}\nexport function HeaderContentExcludeInRange(_ref3) {\n  var state = _ref3.state,\n      _ref3$emptyLabel = _ref3.emptyLabel,\n      emptyLabel = _ref3$emptyLabel === void 0 ? ' ' : _ref3$emptyLabel,\n      color = _ref3.color,\n      locale = _ref3.locale;\n  var lighterColor = Color(color).fade(0.5).rgb().toString();\n  var dayFormatter = React.useMemo(function () {\n    return new Intl.DateTimeFormat(locale, {\n      day: 'numeric'\n    });\n  }, [locale]);\n  var monthFormatter = React.useMemo(function () {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short'\n    });\n  }, [locale]);\n  var excludedDaysPerMonth = React.useMemo(function () {\n    var months = {};\n    state.excludedDates.forEach(function (ed) {\n      var existing = months[ed.getMonth()];\n      months[ed.getMonth()] = existing ? [].concat(_toConsumableArray(existing), [ed]) : [ed];\n    });\n    return months;\n  }, [state.excludedDates]);\n  var dateColor = state.excludedDates && state.excludedDates.length > 0 ? color : lighterColor;\n  return React.createElement(View, {\n    style: styles.column\n  }, React.createElement(View, {\n    style: styles.row\n  }, React.createElement(Text, {\n    style: [styles.excludeInRangeHeaderText, {\n      color: dateColor\n    }]\n  }, Object.keys(excludedDaysPerMonth).map(function (monthIndex) {\n    return excludedDaysPerMonth[monthIndex].map(function (date) {\n      return dayFormatter.format(date);\n    }).join(', ') + ' ' + monthFormatter.format(excludedDaysPerMonth[monthIndex][0]);\n  }).join(', ') || emptyLabel)));\n}\nexport function HeaderContentRange(_ref4) {\n  var locale = _ref4.locale,\n      state = _ref4.state,\n      _ref4$headerSeparator = _ref4.headerSeparator,\n      headerSeparator = _ref4$headerSeparator === void 0 ? '-' : _ref4$headerSeparator,\n      _ref4$startLabel = _ref4.startLabel,\n      startLabel = _ref4$startLabel === void 0 ? 'Start' : _ref4$startLabel,\n      _ref4$endLabel = _ref4.endLabel,\n      endLabel = _ref4$endLabel === void 0 ? 'End' : _ref4$endLabel,\n      color = _ref4.color;\n  var formatter = React.useMemo(function () {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric'\n    });\n  }, [locale]);\n  var lighterColor = Color(color).fade(0.5).rgb().toString();\n  var startColor = state.startDate ? color : lighterColor;\n  var endColor = state.endDate ? color : lighterColor;\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: [styles.rangeHeaderText, {\n      color: startColor\n    }]\n  }, state.startDate ? formatter.format(state.startDate) : startLabel), React.createElement(Text, {\n    style: [styles.headerSeparator, {\n      color: color\n    }]\n  }, headerSeparator), React.createElement(Text, {\n    style: [styles.rangeHeaderText, {\n      color: endColor\n    }]\n  }, state.endDate ? formatter.format(state.endDate) : endLabel));\n}\nvar styles = StyleSheet.create({\n  fill: {\n    flex: 1\n  },\n  animated: {\n    paddingBottom: 0,\n    elevation: 4\n  },\n  safeContent: {\n    paddingBottom: 0\n  },\n  header: {\n    height: 75,\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingLeft: 24,\n    paddingRight: 12\n  },\n  headerContentContainer: {\n    marginTop: 5,\n    flexDirection: 'row'\n  },\n  label: {\n    color: '#fff',\n    letterSpacing: 1,\n    fontSize: 13\n  },\n  singleHeaderText: {\n    color: '#fff',\n    fontSize: 25\n  },\n  rangeHeaderText: {\n    color: '#fff',\n    fontSize: 25\n  },\n  excludeInRangeHeaderText: {\n    fontSize: 25\n  },\n  excludeInRangeHeaderTextSmall: {\n    fontSize: 14,\n    marginTop: -3,\n    marginLeft: 3\n  },\n  headerSeparator: {\n    color: 'rgba(255,255,255,1)',\n    fontSize: 25,\n    paddingLeft: 6,\n    paddingRight: 6\n  },\n  appbarHeader: {\n    elevation: 0\n  },\n  column: {\n    flexDirection: 'column'\n  },\n  row: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["DatePickerModalContentHeader.tsx"],"names":["mode","moreLabel","label","getLabel","props","color","useHeaderTextColor","allowEditing","styles","headerContentContainer","fill","collapsed","onToggle","emptyLabel","locale","lighterColor","Color","dateColor","state","formatter","Intl","month","day","dateCount","date","dayFormatter","monthFormatter","excludedDaysPerMonth","months","ed","existing","column","row","Object","monthIndex","headerSeparator","startLabel","endLabel","startColor","endColor","flex","animated","paddingBottom","elevation","safeContent","header","height","alignItems","flexDirection","paddingLeft","paddingRight","marginTop","letterSpacing","fontSize","singleHeaderText","rangeHeaderText","excludeInRangeHeaderText","excludeInRangeHeaderTextSmall","marginLeft","appbarHeader"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport { IconButton, Text } from 'react-native-paper'\nimport { ModeType } from './Calendar'\nimport { LocalState } from './DatePickerModalContent'\nimport { useHeaderTextColor } from '../utils'\nimport Color from 'color'\n\nexport interface HeaderPickProps {\n  moreLabel?: string\n  label?: string\n  emptyLabel?: string\n  saveLabel?: string\n  headerSeparator?: string\n  startLabel?: string\n  endLabel?: string\n}\n\nexport interface HeaderContentProps extends HeaderPickProps {\n  state: LocalState\n  mode: ModeType\n  collapsed: boolean\n  onToggle: () => any\n  locale: undefined | string\n}\n\nfunction getLabel(mode: ModeType, configuredLabel?: string) {\n  if (configuredLabel) {\n    return configuredLabel\n  }\n  if (mode === 'range') {\n    return 'Select period'\n  }\n  if (mode === 'single') {\n    return 'Select date'\n  }\n  if (mode === 'excludeInRange') {\n    return 'Select excluded dates'\n  }\n  if (mode === 'multiple') {\n    return 'Select dates'\n  }\n  return '...?'\n}\n\nexport default function DatePickerModalHeader(props: HeaderContentProps) {\n  const { onToggle, collapsed, mode, moreLabel } = props\n\n  const label = getLabel(props.mode, props.label)\n\n  const color = useHeaderTextColor()\n  const allowEditing = mode !== 'excludeInRange' && mode !== 'multiple'\n  return (\n    <View style={[styles.header]}>\n      <View>\n        <Text style={[styles.label, { color }]}>{label.toUpperCase()}</Text>\n\n        <View style={styles.headerContentContainer}>\n          {mode === 'range' ? (\n            <HeaderContentRange {...props} color={color} />\n          ) : null}\n          {mode === 'single' ? (\n            <HeaderContentSingle {...props} color={color} />\n          ) : null}\n          {mode === 'excludeInRange' ? (\n            <HeaderContentExcludeInRange {...props} color={color} />\n          ) : null}\n          {mode === 'multiple' ? (\n            <HeaderContentMulti\n              {...props}\n              color={color}\n              moreLabel={moreLabel}\n            />\n          ) : null}\n        </View>\n      </View>\n      <View style={styles.fill} />\n      {allowEditing ? (\n        <IconButton\n          icon={collapsed ? 'pencil' : 'calendar'}\n          color={color}\n          onPress={onToggle}\n        />\n      ) : null}\n    </View>\n  )\n}\n\nexport function HeaderContentSingle({\n  state,\n  emptyLabel = ' ',\n  color,\n  locale,\n}: HeaderContentProps & { color: string }) {\n  const lighterColor = Color(color).fade(0.5).rgb().toString()\n  const dateColor = state.date ? color : lighterColor\n\n  const formatter = React.useMemo(() => {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric',\n    })\n  }, [locale])\n\n  return (\n    <Text style={[styles.singleHeaderText, { color: dateColor }]}>\n      {state.date ? formatter.format(state.date) : emptyLabel}\n    </Text>\n  )\n}\n\nexport function HeaderContentMulti({\n  state,\n  emptyLabel = ' ',\n  moreLabel = 'more',\n  color,\n  locale,\n}: HeaderContentProps & { color: string; moreLabel: string | undefined }) {\n  const dateCount = state.dates?.length || 0\n  const lighterColor = Color(color).fade(0.5).rgb().toString()\n  const dateColor = dateCount ? color : lighterColor\n\n  const formatter = React.useMemo(() => {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric',\n    })\n  }, [locale])\n\n  let label = emptyLabel\n  if (dateCount) {\n    if (dateCount <= 2) {\n      label = state.dates.map((date) => formatter.format(date)).join(', ')\n    } else {\n      label =\n        formatter.format(state.dates[0]) + ` (+ ${dateCount - 1} ${moreLabel})`\n    }\n  }\n\n  return (\n    <Text style={[styles.singleHeaderText, { color: dateColor }]}>{label}</Text>\n  )\n}\n\nexport function HeaderContentExcludeInRange({\n  state,\n  emptyLabel = ' ',\n  color,\n  locale,\n}: HeaderContentProps & { color: string }) {\n  const lighterColor = Color(color).fade(0.5).rgb().toString()\n\n  const dayFormatter = React.useMemo(() => {\n    return new Intl.DateTimeFormat(locale, {\n      day: 'numeric',\n    })\n  }, [locale])\n  const monthFormatter = React.useMemo(() => {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n    })\n  }, [locale])\n\n  const excludedDaysPerMonth = React.useMemo(() => {\n    // TODO: fix years :O\n    let months: { [monthIndex: number]: Date[] } = {}\n    state.excludedDates.forEach((ed) => {\n      const existing = months[ed.getMonth()]\n      months[ed.getMonth()] = existing ? [...existing, ed] : [ed]\n    })\n    return months\n  }, [state.excludedDates])\n  const dateColor =\n    state.excludedDates && state.excludedDates.length > 0 ? color : lighterColor\n\n  return (\n    <View style={styles.column}>\n      <View style={styles.row}>\n        <Text style={[styles.excludeInRangeHeaderText, { color: dateColor }]}>\n          {Object.keys(excludedDaysPerMonth)\n            .map(\n              (monthIndex: any) =>\n                excludedDaysPerMonth[monthIndex]\n                  .map((date) => dayFormatter.format(date))\n                  .join(', ') +\n                ' ' +\n                monthFormatter.format(excludedDaysPerMonth[monthIndex][0]!)\n            )\n            .join(', ') || emptyLabel}\n        </Text>\n      </View>\n    </View>\n  )\n}\n\nexport function HeaderContentRange({\n  locale,\n  state,\n  headerSeparator = '-',\n  startLabel = 'Start',\n  endLabel = 'End',\n  color,\n}: HeaderContentProps & { color: string }) {\n  const formatter = React.useMemo(() => {\n    return new Intl.DateTimeFormat(locale, {\n      month: 'short',\n      day: 'numeric',\n    })\n  }, [locale])\n\n  const lighterColor = Color(color).fade(0.5).rgb().toString()\n  const startColor = state.startDate ? color : lighterColor\n  const endColor = state.endDate ? color : lighterColor\n\n  return (\n    <>\n      <Text style={[styles.rangeHeaderText, { color: startColor }]}>\n        {state.startDate ? formatter.format(state.startDate) : startLabel}\n      </Text>\n      <Text style={[styles.headerSeparator, { color }]}>{headerSeparator}</Text>\n      <Text style={[styles.rangeHeaderText, { color: endColor }]}>\n        {state.endDate ? formatter.format(state.endDate) : endLabel}\n      </Text>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  fill: {\n    flex: 1,\n  },\n  animated: {\n    paddingBottom: 0,\n    elevation: 4,\n  },\n  safeContent: {\n    paddingBottom: 0,\n  },\n  header: {\n    height: 75,\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingLeft: 24,\n    paddingRight: 12,\n  },\n  headerContentContainer: { marginTop: 5, flexDirection: 'row' },\n  label: { color: '#fff', letterSpacing: 1, fontSize: 13 },\n  singleHeaderText: { color: '#fff', fontSize: 25 },\n  rangeHeaderText: { color: '#fff', fontSize: 25 },\n  excludeInRangeHeaderText: { fontSize: 25 },\n  excludeInRangeHeaderTextSmall: {\n    fontSize: 14,\n    marginTop: -3,\n    marginLeft: 3,\n  },\n\n  headerSeparator: {\n    color: 'rgba(255,255,255,1)',\n    fontSize: 25,\n    paddingLeft: 6,\n    paddingRight: 6,\n  },\n  appbarHeader: {\n    elevation: 0,\n  },\n  column: { flexDirection: 'column' },\n  row: { flexDirection: 'row' },\n})\n"]},"metadata":{},"sourceType":"module"}