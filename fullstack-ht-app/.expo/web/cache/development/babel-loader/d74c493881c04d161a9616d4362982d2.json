{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/RepositoryList.jsx\";\nimport React, { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useHistory } from 'react-router-native';\nimport { Searchbar } from 'react-native-paper';\nimport { useDebounce } from 'use-debounce';\nimport Picker from \"./Picker\";\nvar styles = StyleSheet.create({\n  separator: {\n    height: 10\n  },\n  headerContainer: {\n    padding: 15\n  },\n  searchContainer: {\n    marginBottom: 15\n  }\n});\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 29\n    }\n  });\n};\n\nvar orderByOptions = [{\n  label: 'Latest repositories',\n  value: 'latest'\n}, {\n  label: 'Highest rated repositories',\n  value: 'highestRating'\n}, {\n  label: 'Lowest rated repositories',\n  value: 'lowestRating'\n}];\nvar variablesByOrderBy = {\n  latest: {\n    orderBy: 'CREATED_AT',\n    orderDirection: 'DESC'\n  },\n  highestRating: {\n    orderBy: 'RATING_AVERAGE',\n    orderDirection: 'DESC'\n  },\n  lowestRating: {\n    orderBy: 'RATING_AVERAGE',\n    orderDirection: 'ASC'\n  }\n};\n\nvar RepositoryListHeader = function RepositoryListHeader(_ref) {\n  var onOrderByChange = _ref.onOrderByChange,\n      orderBy = _ref.orderBy,\n      searchKeyword = _ref.searchKeyword,\n      onSearchKeywordChange = _ref.onSearchKeywordChange;\n  return React.createElement(View, {\n    style: styles.headerContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.searchContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(Searchbar, {\n    placeholder: \"Search repositories\",\n    value: searchKeyword,\n    onChangeText: onSearchKeywordChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), React.createElement(Picker, {\n    placeholder: {},\n    onValueChange: onOrderByChange,\n    value: orderBy,\n    items: orderByOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar RepositoryList = function RepositoryList() {\n  var _useState = useState('latest'),\n      _useState2 = _slicedToArray(_useState, 2),\n      orderBy = _useState2[0],\n      setOrderBy = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchKeyword = _useState4[0],\n      setSearchKeyword = _useState4[1];\n\n  var _useDebounce = useDebounce(searchKeyword, 500),\n      _useDebounce2 = _slicedToArray(_useDebounce, 1),\n      debouncedSearchKeyword = _useDebounce2[0];\n\n  var onEndReach = function onEndReach() {\n    fetchMore();\n  };\n\n  return console.log('testi');\n};\n\nexport default RepositoryList;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/RepositoryList.jsx"],"names":["React","useState","useHistory","Searchbar","useDebounce","Picker","styles","StyleSheet","create","separator","height","headerContainer","padding","searchContainer","marginBottom","ItemSeparator","orderByOptions","label","value","variablesByOrderBy","latest","orderBy","orderDirection","highestRating","lowestRating","RepositoryListHeader","onOrderByChange","searchKeyword","onSearchKeywordChange","RepositoryList","setOrderBy","setSearchKeyword","debouncedSearchKeyword","onEndReach","fetchMore","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { FlatList, View, StyleSheet, TouchableOpacity } from 'react-native';\nimport { useHistory } from 'react-router-native';\nimport { Searchbar } from 'react-native-paper';\nimport { useDebounce } from 'use-debounce';\n\n// import useRepositories from '../hooks/useRepositories';\nimport Picker from './Picker';\n\nconst styles = StyleSheet.create({\n  separator: {\n    height: 10,\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  searchContainer: {\n    marginBottom: 15,\n  },\n});\n\nconst ItemSeparator = () => <View style={styles.separator} />;\n\nconst orderByOptions = [\n  { label: 'Latest repositories', value: 'latest' },\n  {\n    label: 'Highest rated repositories',\n    value: 'highestRating',\n  },\n  {\n    label: 'Lowest rated repositories',\n    value: 'lowestRating',\n  },\n];\n\nconst variablesByOrderBy = {\n  latest: {\n    orderBy: 'CREATED_AT',\n    orderDirection: 'DESC',\n  },\n  highestRating: {\n    orderBy: 'RATING_AVERAGE',\n    orderDirection: 'DESC',\n  },\n  lowestRating: {\n    orderBy: 'RATING_AVERAGE',\n    orderDirection: 'ASC',\n  },\n};\n\nconst RepositoryListHeader = ({\n  onOrderByChange,\n  orderBy,\n  searchKeyword,\n  onSearchKeywordChange,\n}) => {\n  return (\n    <View style={styles.headerContainer}>\n      <View style={styles.searchContainer}>\n        <Searchbar\n          placeholder=\"Search repositories\"\n          value={searchKeyword}\n          onChangeText={onSearchKeywordChange}\n        />\n      </View>\n      <Picker\n        placeholder={{}}\n        onValueChange={onOrderByChange}\n        value={orderBy}\n        items={orderByOptions}\n      />\n    </View>\n  );\n};\n\n\nconst RepositoryList = () => {\n  // const history = useHistory();\n  const [orderBy, setOrderBy] = useState('latest');\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [debouncedSearchKeyword] = useDebounce(searchKeyword, 500);\n\n  // const { repositories, fetchMore } = useRepositories({\n  //   first: 8,\n  //   ...variablesByOrderBy[orderBy],\n  //   searchKeyword: debouncedSearchKeyword,\n  // });\n\n  const onEndReach = () => {\n    fetchMore();\n  };\n\n  return (\n    console.log('testi')\n    // <RepositoryListContainer\n    //   repositories={repositories}\n    //   orderBy={orderBy}\n    //   onOrderByChange={(newOrderBy) => {\n    //     setOrderBy(newOrderBy);\n    //   }}\n    //   onEndReach={onEndReach}\n    //   searchKeyword={searchKeyword}\n    //   onSearchKeywordChange={(keyword) => setSearchKeyword(keyword)}\n    //   onRepositoryPress={(id) => {\n    //     history.push(`/repositories/${id}`);\n    //   }}\n    // />\n  );\n};\n\nexport default RepositoryList;"]},"metadata":{},"sourceType":"module"}