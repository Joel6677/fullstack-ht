{"ast":null,"code":"var _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UploadUserInfo.jsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Button } from 'react-native-paper';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-native';\nimport * as yup from 'yup';\nimport FormikTextInput from \"./FormikTextInput\";\nimport ChooseDate from \"./ChooseDate\";\nimport theme from \"../theme\";\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    flex: 1,\n    zIndex: 1\n  },\n  fieldContainer: {\n    marginBottom: 15\n  },\n  buttonContainer: {\n    zIndex: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    borderColor: '#aab2bb',\n    marginBottom: 15\n  },\n  textContainer: {\n    fontSize: theme.fontSizes.body,\n    fontFamily: theme.fonts.main,\n    color: '#A6ACAF'\n  }\n});\nvar initialValues = {\n  firstName: '',\n  lastName: '',\n  country: '',\n  bio: ''\n};\nvar validationSchema = yup.object().shape({\n  firstName: yup.string().min(1, 'First name must be at least 1 charaters long').required('First name is required'),\n  lastName: yup.string().min(1, 'Last name must be at least 1 characters long').required('Last name is required'),\n  country: yup.string().required('Country is required'),\n  bio: yup.string().max(150, 'Bio can be at most 150 characters long')\n});\n\nvar submitDate = function submitDate() {\n  console.log('pressed');\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      zIndex: 1000,\n      position: 'absolute'\n    }\n  }, React.createElement(Text, null, \"HEI HEI HEI\")), React.createElement(ChooseDate, null));\n};\n\nvar UserinfoForm = function UserinfoForm(_ref) {\n  var onSubmit = _ref.onSubmit;\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"firstName\",\n    placeholder: \"First name\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"lastName\",\n    placeholder: \"Last name\"\n  })), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return submitDate();\n    }\n  }, React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(Text, {\n    style: styles.textContainer\n  }, \"Birthdate\"))), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"country\",\n    placeholder: \"Country\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"bio\",\n    placeholder: \"Bio\",\n    multiline: true,\n    numberOfLines: 4\n  })), React.createElement(Button, {\n    mode: 'outlined',\n    onPress: onSubmit\n  }, \"Submit\"));\n};\n\nvar UploadUserInfo = function UploadUserInfo() {\n  var history = useHistory();\n  return React.createElement(React.Fragment, null, React.createElement(Formik, {\n    style: styles.container,\n    initialValues: initialValues,\n    onSubmit: function onSubmit() {\n      history.push('/');\n    },\n    validationSchema: validationSchema\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit;\n    return React.createElement(UserinfoForm, {\n      onSubmit: handleSubmit\n    });\n  }));\n};\n\nexport default UploadUserInfo;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UploadUserInfo.jsx"],"names":["React","useState","Button","Formik","useHistory","yup","FormikTextInput","ChooseDate","theme","styles","StyleSheet","create","container","flexDirection","justifyContent","height","width","position","flex","zIndex","fieldContainer","marginBottom","buttonContainer","paddingVertical","paddingHorizontal","borderWidth","borderStyle","borderRadius","borderColor","textContainer","fontSize","fontSizes","body","fontFamily","fonts","main","color","initialValues","firstName","lastName","country","bio","validationSchema","object","shape","string","min","required","max","submitDate","console","log","UserinfoForm","onSubmit","UploadUserInfo","history","push","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet, Text, TouchableWithoutFeedback} from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-native';\nimport * as yup from 'yup';\nimport FormikTextInput from './FormikTextInput';\nimport ChooseDate from './ChooseDate';\nimport theme from '../theme';\n\nconst styles = StyleSheet.create({\n    container: {\n      flexDirection: 'column',\n      justifyContent: 'center',\n      height: '100%',\n      width: '100%',\n      position: 'absolute',\n      flex: 1,\n      zIndex: 1\n    },\n    fieldContainer: {\n      marginBottom: 15,\n    },\n    buttonContainer: {\n        zIndex: 10,\n        paddingVertical: 10,\n        paddingHorizontal: 15,\n        borderWidth: 1,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        borderColor: '#aab2bb',\n        marginBottom: 15\n    }, textContainer: {\n        fontSize: theme.fontSizes.body,\n        fontFamily: theme.fonts.main,\n        color: '#A6ACAF',\n    }\n  });\n\nconst initialValues = {\n    firstName: '',\n    lastName: '',\n    country: '',\n    bio: ''\n\n};\n\nconst validationSchema = yup.object().shape({\n    firstName: yup\n        .string()\n        .min(1, 'First name must be at least 1 charaters long')\n        .required('First name is required'),\n    lastName: yup\n        .string()\n        .min(1, 'Last name must be at least 1 characters long')\n        .required('Last name is required'),\n    country: yup\n        .string()\n        .required('Country is required'),\n    bio: yup\n        .string()\n        .max(150, 'Bio can be at most 150 characters long'),\n});\n\nconst submitDate = () => {\n    console.log('pressed');\n\n    return (\n\n        <>\n            <View style={{ zIndex: 1000, position: 'absolute' }}>\n\n                <Text>\n                    HEI HEI HEI\n                </Text>\n\n            </View>\n\n            <ChooseDate/>\n\n        </>\n        \n\n    );\n};\n\n\nconst UserinfoForm = ({ onSubmit }) => {\n\n\n    return (\n        <View style={styles.container}>\n\n            <View style={styles.fieldContainer}>\n                <FormikTextInput\n                    name=\"firstName\"\n                    placeholder=\"First name\" \n                />    \n            </View>\n\n            <View style={styles.fieldContainer}>\n                <FormikTextInput\n                    name=\"lastName\"\n                    placeholder=\"Last name\" />\n            </View>\n\n            <TouchableWithoutFeedback onPress={() => submitDate()} >\n                <View style={styles.buttonContainer}>\n                    <Text style={styles.textContainer}>Birthdate</Text>\n                </View>\n            </TouchableWithoutFeedback>\n\n            <View style={styles.fieldContainer}>\n                <FormikTextInput\n                    name=\"country\"\n                    placeholder=\"Country\"\n                />\n            </View>\n\n            <View style={styles.fieldContainer}>\n                <FormikTextInput\n                    name=\"bio\"\n                    placeholder=\"Bio\"\n                    multiline\n                    numberOfLines={4}\n                />\n            </View>\n\n        <Button mode={'outlined'} onPress={onSubmit}>\n            Submit\n        </Button>\n\n        </View>\n    );\n};\n\nconst UploadUserInfo = () => {\n\n    const history = useHistory();\n\n    // const onSubmit = async (values) => {\n    //     const { email, password } = values;\n\n    //     SignUpWithEmail(email, password);\n\n    //     history.push(\"/choose-pic\");\n    // };\n\n\n    return (\n        <>\n            <Formik\n                style={styles.container}\n                initialValues={initialValues}\n                onSubmit={() => { history.push('/'); }}\n                validationSchema={validationSchema}\n            >\n                {({ handleSubmit }) => <UserinfoForm onSubmit={handleSubmit} />}\n            </Formik>\n            \n        </>\n    );\n};\n\nexport default UploadUserInfo;"]},"metadata":{},"sourceType":"module"}