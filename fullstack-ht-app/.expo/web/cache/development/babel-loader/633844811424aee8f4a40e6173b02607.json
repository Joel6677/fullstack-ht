{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Basic.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport SideMenu from 'react-native-side-menu';\nimport Menu from \"./Menu\";\nvar styles = StyleSheet.create({\n  button: {\n    position: 'absolute',\n    top: 20,\n    padding: 10\n  },\n  caption: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF'\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5\n  }\n});\n\nvar Basic = function (_Component) {\n  _inherits(Basic, _Component);\n\n  var _super = _createSuper(Basic);\n\n  function Basic(props) {\n    var _this;\n\n    _classCallCheck(this, Basic);\n\n    _this = _super.call(this, props);\n\n    _this.onMenuItemSelected = function (item) {\n      return _this.setState({\n        isOpen: false,\n        selectedItem: item\n      });\n    };\n\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isOpen: false,\n      selectedItem: 'About'\n    };\n    return _this;\n  }\n\n  _createClass(Basic, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"updateMenuState\",\n    value: function updateMenuState(isOpen) {\n      this.setState({\n        isOpen: isOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var menu = React.createElement(Menu, {\n        onItemSelected: this.onMenuItemSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 18\n        }\n      });\n      return React.createElement(SafeAreaView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      }, React.createElement(SideMenu, {\n        menu: menu,\n        isOpen: this.state.isOpen,\n        onChange: function onChange(isOpen) {\n          return _this2.updateMenuState(isOpen);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.welcome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, \"Welcome to React Native!\"), React.createElement(Text, {\n        style: styles.instructions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, \"To get started, edit index.ios.js\"), React.createElement(Text, {\n        style: styles.instructions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, \"Press Cmd+R to reload,\", '\\n', \"Cmd+Control+Z for dev menu\"), React.createElement(Text, {\n        style: styles.instructions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, \"Current selected menu item is: \", this.state.selectedItem)), React.createElement(TouchableOpacity, {\n        onPress: this.toggle,\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Basic;\n}(Component);\n\nexport { Basic as default };","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Basic.js"],"names":["React","Component","SideMenu","Menu","styles","StyleSheet","create","button","position","top","padding","caption","fontSize","fontWeight","alignItems","container","flex","justifyContent","backgroundColor","welcome","textAlign","margin","instructions","color","marginBottom","Basic","props","onMenuItemSelected","item","setState","isOpen","selectedItem","toggle","bind","state","menu","updateMenuState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n//   Image,\n  TouchableOpacity,\n  SafeAreaView,\n} from 'react-native';\nimport SideMenu from 'react-native-side-menu';\nimport Menu from './Menu';\n\n// const image = require('./assets/menu.png');\n\nconst styles = StyleSheet.create({\n  button: {\n    position: 'absolute',\n    top: 20,\n    padding: 10,\n  },\n  caption: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    alignItems: 'center',\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5,\n  },\n});\n\nexport default class Basic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n\n    this.state = {\n      isOpen: false,\n      selectedItem: 'About',\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  }\n\n  updateMenuState(isOpen) {\n    this.setState({ isOpen });\n  }\n\n  onMenuItemSelected = item =>\n    this.setState({\n      isOpen: false,\n      selectedItem: item,\n    });\n\n  render() {\n    const menu = <Menu onItemSelected={this.onMenuItemSelected} />;\n\n    return (\n      <SafeAreaView>\n        <SideMenu\n          menu={menu}\n          isOpen={this.state.isOpen}\n          onChange={isOpen => this.updateMenuState(isOpen)}\n        >\n          <View style={styles.container}>\n            <Text style={styles.welcome}>\n              Welcome to React Native!\n            </Text>\n            <Text style={styles.instructions}>\n              To get started, edit index.ios.js\n            </Text>\n            <Text style={styles.instructions}>\n              Press Cmd+R to reload,{'\\n'}\n              Cmd+Control+Z for dev menu\n            </Text>\n            <Text style={styles.instructions}>\n              Current selected menu item is: {this.state.selectedItem}\n            </Text>\n          </View>\n          <TouchableOpacity\n            onPress={this.toggle}\n            style={styles.button}\n          >\n            {/* <Image\n              source={image}\n              style={{ width: 32, height: 32 }}\n            /> */}\n          </TouchableOpacity>\n        </SideMenu>\n      </SafeAreaView>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}