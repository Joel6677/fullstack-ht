{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// import React from 'react';\n// import { StyleSheet, View } from 'react-native';\n// import { Formik } from 'formik';\n// import * as yup from 'yup';\n// import { useHistory } from 'react-router-native';\n// import { useMutation } from '@apollo/react-hooks';\n\n// import Button from './Button';\n// import FormikTextInput from './FormikTextInput';\n// import useSignIn from '../hooks/useSignIn';\n// import { CREATE_USER } from '../graphql/mutations';\n\n// const styles = StyleSheet.create({\n//   container: {\n//     backgroundColor: 'white',\n//     padding: 15,\n//   },\n//   fieldContainer: {\n//     marginBottom: 15,\n//   },\n// });\n\n// const initialValues = {\n//   username: '',\n//   password: '',\n//   passwordConfirmation: '',\n// };\n\n// const validationSchema = yup.object().shape({\n//   username: yup\n//     .string()\n//     .min(1, 'Username must be at least 1 character long')\n//     .max(30, 'Username must be at most 30 characters long')\n//     .required('Username is required'),\n//   password: yup\n//     .string()\n//     .min(5, 'Password must be at least 5 characters long')\n//     .max(50, 'Password must be at least 50 characters long')\n//     .required('Password is required'),\n//   passwordConfirmation: yup\n//     .string()\n//     .oneOf(\n//       [yup.ref('password'), null],\n//       'Password confirmation must match the password',\n//     )\n//     .required('Password confirmation is required'),\n// });\n\n// const SignUpForm = ({ onSubmit }) => {\n//   return (\n//     <View style={styles.container}>\n//       <View style={styles.fieldContainer}>\n//         <FormikTextInput name=\"username\" placeholder=\"Username\" />\n//       </View>\n\n//       <View style={styles.fieldContainer}>\n//         <FormikTextInput\n//           name=\"password\"\n//           placeholder=\"Password\"\n//           secureTextEntry\n//         />\n//       </View>\n\n//       <View style={styles.fieldContainer}>\n//         <FormikTextInput\n//           name=\"passwordConfirmation\"\n//           placeholder=\"Password confirmation\"\n//           secureTextEntry\n//         />\n//       </View>\n\n//       <Button onPress={onSubmit} testID=\"submitButton\">\n//         Sign up\n//       </Button>\n//     </View>\n//   );\n// };\n\n// const SignUp = () => {\n//   const [createUser] = useMutation(CREATE_USER);\n//   const [signIn] = useSignIn();\n//   const history = useHistory();\n\n//   const onSubmit = async (values) => {\n//     const { username, password } = values;\n\n//     const user = {\n//       username,\n//       password,\n//     };\n\n//     await createUser({ variables: { user } });\n//     await signIn(user);\n\n//     history.push('/');\n//   };\n\n//   return (\n//     <Formik\n//       initialValues={initialValues}\n//       onSubmit={onSubmit}\n//       validationSchema={validationSchema}\n//     >\n//       {({ handleSubmit }) => <SignUpForm onSubmit={handleSubmit} />}\n//     </Formik>\n//   );\n// };\n\n// export default SignUp;"]},"metadata":{},"sourceType":"script"}