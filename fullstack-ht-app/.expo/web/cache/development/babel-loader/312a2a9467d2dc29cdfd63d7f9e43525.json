{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/ChoosePic.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as firebase from 'firebase';\nimport { reducer } from \"../state\";\nimport * as FileSystem from 'expo-file-system';\n\nvar ChoosePic = function ChoosePic() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var status;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              status = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n            case 6:\n              status = _context.sent;\n\n              if (status !== 'granted') {\n                alert('Need to have permission!');\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickProfilePicFromLibrary = function pickProfilePicFromLibrary() {\n    var result;\n    return _regeneratorRuntime.async(function pickProfilePicFromLibrary$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n            uploadImage(image, 'profile.png');\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var takeProfilePic = function takeProfilePic() {\n    var result;\n    return _regeneratorRuntime.async(function takeProfilePic$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context3.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n            uploadImage(image, 'profile.png');\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadImage = function uploadImage(uri, imageName) {\n    var response, blob, ref, url, downloaded;\n    return _regeneratorRuntime.async(function uploadImage$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 2:\n            response = _context4.sent;\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 5:\n            blob = _context4.sent;\n            ref = firebase.storage().ref().child(\"images/\" + imageName);\n            _context4.next = 9;\n            return _regeneratorRuntime.awrap(ref.getDownloadURL());\n\n          case 9:\n            url = _context4.sent;\n            console.log('url: ', url);\n            downloaded = FileSystem.downloadAsync(url);\n            console.log('downloaded: ', downloaded);\n            return _context4.abrupt(\"return\", ref.put(blob));\n\n          case 14:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, React.createElement(Button, {\n    title: \"Pick an image from camera roll\",\n    onPress: pickProfilePicFromLibrary\n  }), React.createElement(Button, {\n    title: \"Take a picture\",\n    onPress: takeProfilePic\n  }), image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 200,\n      height: 200\n    }\n  }));\n};\n\nexport default ChoosePic;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/ChoosePic.jsx"],"names":["React","useState","useEffect","ImagePicker","firebase","reducer","FileSystem","ChoosePic","image","setImage","Platform","OS","requestMediaLibraryPermissionsAsync","status","requestCameraPermissionsAsync","alert","pickProfilePicFromLibrary","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","uri","uploadImage","takeProfilePic","launchCameraAsync","imageName","fetch","response","blob","ref","storage","child","getDownloadURL","url","downloaded","downloadAsync","put","flex","alignItems","justifyContent","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Image, Button, Platform } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as firebase from 'firebase';\nimport { reducer } from '../state';\nimport * as FileSystem from 'expo-file-system';\n\nconst ChoosePic = () => {\n\n  const [image, setImage] = useState(null);\n\n  // laita silloin kun painaa nappia\n  useEffect(() => {\n    (async () => {\n      if (Platform.OS !== 'web') {\n        let status = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        status = await ImagePicker.requestCameraPermissionsAsync();\n        if (status !== 'granted') {\n          alert('Need to have permission!');\n        }\n      }\n    })();\n  }, []);\n\n  const pickProfilePicFromLibrary = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n\n    uploadImage(image, 'profile.png');\n\n  };\n\n  const takeProfilePic = async () => {\n    let result = await ImagePicker.launchCameraAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n\n    uploadImage(image, 'profile.png');\n\n  };\n\n  const uploadImage = async(uri, imageName) => {\n    const response = await fetch(uri);\n    const blob = await response.blob();\n    const ref = firebase.storage().ref().child(\"images/\"+imageName);\n\n    const url = await ref.getDownloadURL();\n\n    console.log('url: ', url);\n\n    const downloaded = FileSystem.downloadAsync(url);\n\n    console.log('downloaded: ', downloaded);\n\n    return ref.put(blob);\n  };\n\n  return (\n\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n    <Button title=\"Pick an image from camera roll\" onPress={pickProfilePicFromLibrary} />\n    <Button title='Take a picture' onPress={takeProfilePic} />\n    {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}\n  </View>\n\n  );\n};\n\nexport default ChoosePic;\n"]},"metadata":{},"sourceType":"module"}