{"ast":null,"code":"var _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SideMenu.jsx\";\nimport React, { useContext, useEffect, useRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Button, Avatar, Divider } from 'react-native-paper';\nimport { StateContext } from \"../state\";\nimport CustomButton from \"./CustomButton\";\nimport theme from \"../theme\";\nvar styles = StyleSheet.create({\n  sidebar: {\n    width: Dimensions.get('window').width * 0.85,\n    height: '100%',\n    backgroundColor: theme.colors.primary,\n    zIndex: 4,\n    position: 'absolute'\n  },\n  closeMenu: {\n    backgroundColor: 'grey',\n    width: '100%',\n    height: '100%'\n  },\n  sidemenuButtons: {\n    top: 50,\n    zIndex: 5,\n    alignItems: 'flex-start'\n  },\n  button: {\n    padding: 10\n  },\n  avatar: {\n    marginLeft: 30,\n    marginBottom: 50\n  },\n  divider: {\n    zIndex: 5,\n    marginTop: 10,\n    width: '100%'\n  }\n});\n\nvar SideMenu = function SideMenu() {\n  var toggleAnim = useRef(new Animated.Value(Dimensions.get('window').width * -0.85)).current;\n  var fadeAnim = useRef(new Animated.Value(0)).current;\n\n  var _useContext = useContext(StateContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var moveMenu = function moveMenu() {\n    Animated.timing(toggleAnim, {\n      toValue: state.open ? 0 : Dimensions.get('window').width * -0.85,\n      useNativeDriver: true,\n      duration: 300\n    }).start();\n  };\n\n  var fade = function fade() {\n    Animated.timing(fadeAnim, {\n      toValue: state.open ? 0.5 : 0,\n      duration: 300,\n      useNativeDriver: true\n    }).start();\n  };\n\n  useEffect(function () {\n    moveMenu();\n    fade();\n  }, [state.open]);\n  return React.createElement(React.Fragment, null, React.createElement(Animated.View, {\n    style: [styles.sidebar, {\n      transform: [{\n        translateX: toggleAnim\n      }]\n    }]\n  }, React.createElement(View, {\n    style: styles.sidemenuButtons\n  }, React.createElement(Avatar.Icon, {\n    style: styles.avatar,\n    label: \"U\",\n    size: 70\n  }), React.createElement(Divider, {\n    style: styles.divider\n  }), React.createElement(Button, {\n    color: \"white\",\n    icon: \"account\",\n    style: styles.button,\n    onPress: function onPress() {\n      console.log('Profile pressed');\n    }\n  }, \"Profile\"), React.createElement(Button, {\n    color: \"white\",\n    icon: \"star-box\",\n    style: styles.button,\n    onPress: function onPress() {\n      console.log('Reviews pressed');\n    }\n  }, \"Reviews\"), React.createElement(Button, {\n    color: \"white\",\n    icon: \"map\",\n    style: styles.button,\n    onPress: function onPress() {\n      console.log('Map pressed');\n    }\n  }, \"Map\"), React.createElement(Button, {\n    color: \"white\",\n    icon: \"shopping\",\n    style: styles.button,\n    onPress: function onPress() {\n      console.log('Market pressed');\n    }\n  }, \"Market\"))), React.createElement(Animated.View, {\n    style: [styles.closeMenu, {\n      opacity: fadeAnim,\n      zIndex: state.open ? 3 : 0\n    }]\n  }, state.open && React.createElement(CustomButton, {\n    style: {\n      height: \"100%\",\n      borderRadius: 0\n    },\n    color: \"\",\n    onPress: function onPress() {\n      return dispatch({\n        type: \"SET_OPEN\",\n        payload: !state.open\n      });\n    }\n  })));\n};\n\nexport default SideMenu;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SideMenu.jsx"],"names":["React","useContext","useEffect","useRef","Button","Avatar","Divider","StateContext","CustomButton","theme","styles","StyleSheet","create","sidebar","width","Dimensions","get","height","backgroundColor","colors","primary","zIndex","position","closeMenu","sidemenuButtons","top","alignItems","button","padding","avatar","marginLeft","marginBottom","divider","marginTop","SideMenu","toggleAnim","Animated","Value","current","fadeAnim","state","dispatch","moveMenu","timing","toValue","open","useNativeDriver","duration","start","fade","transform","translateX","console","log","opacity","borderRadius","type","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,QAAqD,OAArD;;;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,QAAwC,oBAAxC;AAGA,SAASC,YAAT;AACA,OAAOC,YAAP;AACA,OAAOC,KAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAzB,GAA+B,IAD/B;AAEPG,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,eAAe,EAAET,KAAK,CAACU,MAAN,CAAaC,OAHvB;AAIPC,IAAAA,MAAM,EAAE,CAJD;AAKPC,IAAAA,QAAQ,EAAE;AALH,GADsB;AAQ/BC,EAAAA,SAAS,EAAE;AACTL,IAAAA,eAAe,EAAE,MADR;AAETJ,IAAAA,KAAK,EAAE,MAFE;AAGTG,IAAAA,MAAM,EAAE;AAHC,GARoB;AAa/BO,EAAAA,eAAe,EAAE;AACfC,IAAAA,GAAG,EAAE,EADU;AAEfJ,IAAAA,MAAM,EAAC,CAFQ;AAGfK,IAAAA,UAAU,EAAE;AAHG,GAbc;AAkB/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH,GAlBuB;AAqB/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,UAAU,EAAE,EADN;AAENC,IAAAA,YAAY,EAAE;AAFR,GArBuB;AAyB/BC,EAAAA,OAAO,EAAE;AACPX,IAAAA,MAAM,EAAE,CADD;AAEPY,IAAAA,SAAS,EAAE,EAFJ;AAGPnB,IAAAA,KAAK,EAAE;AAHA;AAzBsB,CAAlB,CAAf;;AAgCA,IAAMoB,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAIrB,MAAMC,UAAU,GAAGhC,MAAM,CAAC,IAAIiC,QAAQ,CAACC,KAAb,CAAmBtB,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAzB,GAA+B,CAAC,IAAnD,CAAD,CAAN,CAAiEwB,OAApF;AACA,MAAMC,QAAQ,GAAGpC,MAAM,CAAC,IAAIiC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAA/C;;AALqB,oBAMOrC,UAAU,CAACM,YAAD,CANjB;AAAA,MAMbiC,KANa,eAMbA,KANa;AAAA,MAMNC,QANM,eAMNA,QANM;;AASrB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAErBN,IAAAA,QAAQ,CAACO,MAAT,CACER,UADF,EAEE;AACES,MAAAA,OAAO,EAAEJ,KAAK,CAACK,IAAN,GAAa,CAAb,GAAiB9B,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAzB,GAA+B,CAAC,IAD5D;AAEEgC,MAAAA,eAAe,EAAE,IAFnB;AAGEC,MAAAA,QAAQ,EAAE;AAHZ,KAFF,EAOEC,KAPF;AASD,GAXD;;AAaA,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBb,IAAAA,QAAQ,CAACO,MAAT,CACEJ,QADF,EAEE;AACEK,MAAAA,OAAO,EAAEJ,KAAK,CAACK,IAAN,GAAa,GAAb,GAAkB,CAD7B;AAEEE,MAAAA,QAAQ,EAAE,GAFZ;AAGED,MAAAA,eAAe,EAAE;AAHnB,KAFF,EAOEE,KAPF;AAQD,GATD;;AAWA9C,EAAAA,SAAS,CAAC,YAAM;AACdwC,IAAAA,QAAQ;AACRO,IAAAA,IAAI;AACL,GAHQ,EAGP,CAACT,KAAK,CAACK,IAAP,CAHO,CAAT;AAKA,SACE,0CAEE,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAACnC,MAAM,CAACG,OAAR,EAAiB;AACrCqC,MAAAA,SAAS,EAAE,CAAC;AACVC,QAAAA,UAAU,EAAEhB;AADF,OAAD;AAD0B,KAAjB;AAAtB,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,MAAM,CAACc;AAApB,KAEE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAEd,MAAM,CAACmB,MAA3B;AAAmC,IAAA,KAAK,EAAE,GAA1C;AAA+C,IAAA,IAAI,EAAE;AAArD,IAFF,EAIE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEnB,MAAM,CAACsB;AAAvB,IAJF,EAME,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,IAAI,EAAC,SAA3B;AAAqC,IAAA,KAAK,EAAEtB,MAAM,CAACiB,MAAnD;AAA2D,IAAA,OAAO,EAAE,mBAAM;AAACyB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAAgC;AAA3G,eANF,EASE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,IAAI,EAAC,UAA3B;AAAsC,IAAA,KAAK,EAAE3C,MAAM,CAACiB,MAApD;AAA4D,IAAA,OAAO,EAAE,mBAAM;AAACyB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAAgC;AAA5G,eATF,EAYE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,IAAI,EAAC,KAA3B;AAAiC,IAAA,KAAK,EAAE3C,MAAM,CAACiB,MAA/C;AAAuD,IAAA,OAAO,EAAE,mBAAM;AAACyB,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAA4B;AAAnG,WAZF,EAeE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,IAAI,EAAC,UAA3B;AAAsC,IAAA,KAAK,EAAE3C,MAAM,CAACiB,MAApD;AAA4D,IAAA,OAAO,EAAE,mBAAM;AAACyB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAA+B;AAA3G,cAfF,CALF,CAFF,EA2BE,oBAAC,QAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE,CAAC3C,MAAM,CAACa,SAAR,EAAmB;AAAC+B,MAAAA,OAAO,EAAEf,QAAV;AAAoBlB,MAAAA,MAAM,EAAEmB,KAAK,CAACK,IAAN,GAAa,CAAb,GAAiB;AAA7C,KAAnB;AADT,KAGKL,KAAK,CAACK,IAAN,IACD,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAC5B,MAAAA,MAAM,EAAE,MAAT;AAAiBsC,MAAAA,YAAY,EAAE;AAA/B,KAArB;AAAwD,IAAA,KAAK,EAAC,EAA9D;AAAiE,IAAA,OAAO,EAAE;AAAA,aAAMd,QAAQ,CAAC;AAACe,QAAAA,IAAI,EAAE,UAAP;AAAmBC,QAAAA,OAAO,EAAE,CAACjB,KAAK,CAACK;AAAnC,OAAD,CAAd;AAAA;AAA1E,IAJJ,CA3BF,CADF;AAqCD,CA3ED;;AA6EA,eAAeX,QAAf","sourcesContent":["import React, { useContext, useEffect, useRef } from 'react';\nimport { Animated, StyleSheet, View, Text, Dimensions } from 'react-native';\nimport { Button, Avatar, Divider } from 'react-native-paper';\n// import useResizeAware from 'react-resize-aware';\n\nimport { StateContext } from '../state';\nimport CustomButton from './CustomButton';\nimport theme from '../theme';\n\nconst styles = StyleSheet.create({ \n  sidebar: {\n    width: Dimensions.get('window').width*0.85,\n    height: '100%', \n    backgroundColor: theme.colors.primary,\n    zIndex: 4,\n    position: 'absolute'\n  },\n  closeMenu: {\n    backgroundColor: 'grey',\n    width: '100%',\n    height: '100%',\n  },\n  sidemenuButtons: {\n    top: 50,\n    zIndex:5,\n    alignItems: 'flex-start'\n  },\n  button: {\n    padding: 10\n  },\n  avatar: {\n    marginLeft: 30,\n    marginBottom: 50\n  },\n  divider: {\n    zIndex: 5,\n    marginTop: 10,\n    width: '100%'\n  }\n });\n\nconst SideMenu = () => {\n\n  // const [resizeListener, sizes] = useResizeAware();\n\n  const toggleAnim = useRef(new Animated.Value(Dimensions.get('window').width*-0.85)).current; \n  const fadeAnim = useRef(new Animated.Value(0)).current ;\n  const { state, dispatch } = useContext(StateContext);\n\n\n  const moveMenu = () => {\n\n    Animated.timing(\n      toggleAnim,\n      {\n        toValue: state.open ? 0 : Dimensions.get('window').width*-0.85,\n        useNativeDriver: true,\n        duration: 300\n      }\n    ).start();\n  \n  };\n  \n  const fade = () => {\n    Animated.timing(\n      fadeAnim,\n      {\n        toValue: state.open ? 0.5: 0,\n        duration: 300,\n        useNativeDriver: true\n      }\n    ).start();\n  };\n\n  useEffect(() => {\n    moveMenu();\n    fade();\n  },[state.open]);\n\n  return (\n    <>\n      {/* {resizeListener} */}\n      <Animated.View style={[styles.sidebar, {\n        transform: [{\n          translateX: toggleAnim\n        }]\n      }]}>\n        <View style={styles.sidemenuButtons}>\n\n          <Avatar.Icon style={styles.avatar} label={\"U\"} size={70} />\n\n          <Divider style={styles.divider}/>\n\n          <Button color='white' icon='account' style={styles.button} onPress={() => {console.log('Profile pressed');}}>\n            Profile\n          </Button>\n          <Button color='white' icon='star-box' style={styles.button} onPress={() => {console.log('Reviews pressed');}}>\n            Reviews\n          </Button>\n          <Button color='white' icon='map' style={styles.button} onPress={() => {console.log('Map pressed');}}>\n            Map\n          </Button>\n          <Button color='white' icon='shopping' style={styles.button} onPress={() => {console.log('Market pressed');}}>\n            Market\n          </Button>\n        </View>\n      </Animated.View>\n      <Animated.View\n        style={[styles.closeMenu, {opacity: fadeAnim, zIndex: state.open ? 3 : 0} ]}\n      >\n          {state.open &&\n          <CustomButton style={{height: \"100%\", borderRadius: 0}} color='' onPress={() => dispatch({type: \"SET_OPEN\", payload: !state.open})} ></CustomButton> }\n     \n      </Animated.View>\n    </>\n  );\n};\n\nexport default SideMenu;"]},"metadata":{},"sourceType":"module"}