{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UploadMedia.jsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport uuid from 'uuid';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Button, Avatar, Divider } from 'react-native-paper';\nimport { useHistory } from 'react-router-native';\nimport Text from \"./Text\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/firebase-storage\";\nimport \"firebase/firebase-auth\";\nvar styles = StyleSheet.create({\n  container: {}\n});\n\nvar MyMedia = function MyMedia() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var history = useHistory();\n\n  var pickProfilePicFromLibrary = function pickProfilePicFromLibrary() {\n    var result;\n    return _regeneratorRuntime.async(function pickProfilePicFromLibrary$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              uploadImage(result.uri);\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var takeProfilePic = function takeProfilePic() {\n    var result;\n    return _regeneratorRuntime.async(function takeProfilePic$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              uploadImage(result.uri);\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addImageToFirestore = function addImageToFirestore(downloadURL) {\n    return _regeneratorRuntime.async(function addImageToFirestore$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            firebase.auth().currentUser ? firebase.firestore().collection('images').doc(firebase.auth().currentUser.uid).collection('userImages').add({\n              downloadURL: downloadURL\n            }) : function () {\n              return console.log('not signed in');\n            };\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.heading,\n    color: 'primary',\n    fontSize: 'heading',\n    fontWeight: 'bold'\n  }, \"Choose profile picture\"), React.createElement(Button, {\n    icon: \"folder-image\",\n    mode: \"contained\",\n    style: styles.button,\n    onPress: pickProfilePicFromLibrary\n  }, \"Pick an image\"), React.createElement(Button, {\n    icon: \"camera\",\n    mode: \"contained\",\n    style: styles.button,\n    onPress: takeProfilePic\n  }, \"Take a picture\"), image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 100,\n      height: 100\n    }\n  }), React.createElement(Button, {\n    compact: true,\n    icon: \"arrow-right-bold-box\",\n    mode: \"contained\",\n    style: styles.nextButton,\n    onPress: function onPress() {\n      return history.push('/upload-userinfo');\n    }\n  }, \"Next\"));\n};\n\nexport default MyMedia;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UploadMedia.jsx"],"names":["React","useState","uuid","ImagePicker","Button","Avatar","Divider","useHistory","Text","firebase","styles","StyleSheet","create","container","MyMedia","image","setImage","history","pickProfilePicFromLibrary","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uploadImage","uri","takeProfilePic","launchCameraAsync","addImageToFirestore","downloadURL","auth","currentUser","firestore","collection","doc","uid","add","console","log","heading","button","width","height","nextButton","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Image, StyleSheet } from 'react-native';\nimport uuid from 'uuid';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Button, Avatar, Divider } from 'react-native-paper';\nimport { useHistory } from 'react-router-native';\nimport Text from './Text';\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/firebase-storage\";\nimport \"firebase/firebase-auth\";\n\n\nconst styles = StyleSheet.create({\n\n  container: {\n\n  }\n\n});\n\n\nconst MyMedia = () => {\n\n  const [image, setImage] = useState();\n  const history = useHistory();\n\n  const pickProfilePicFromLibrary = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (!result.cancelled) {\n      uploadImage(result.uri);\n      setImage(result.uri);\n    }\n  };\n\n  const takeProfilePic = async () => {\n    let result = await ImagePicker.launchCameraAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (!result.cancelled) {\n      uploadImage(result.uri);\n      setImage(result.uri);\n    }\n  };\n\n  const addImageToFirestore = async (downloadURL) => {\n    firebase.auth().currentUser ? \n    firebase.firestore()\n    .collection('images')\n    .doc(firebase.auth().currentUser.uid)\n    .collection('userImages')\n    .add({\n      downloadURL\n    }) : () => console.log('not signed in');\n};\n\n  return (\n    <View style={styles.container}>\n    <Text style={styles.heading} color={'primary'} fontSize={'heading'} fontWeight={'bold'}>Choose profile picture</Text>\n    <Button icon='folder-image' mode='contained' style={styles.button} onPress={pickProfilePicFromLibrary}>Pick an image</Button>\n    <Button icon='camera' mode='contained' style={styles.button} onPress={takeProfilePic} >Take a picture</Button>\n    {image && <Image source={{ uri: image }} style={{ width: 100, height: 100 }} />}\n    <Button compact={true} icon='arrow-right-bold-box' mode='contained' style={styles.nextButton} onPress={()=>(history.push('/upload-userinfo'))}>Next</Button>\n  </View>\n\n  );\n};\n\nexport default MyMedia;"]},"metadata":{},"sourceType":"module"}