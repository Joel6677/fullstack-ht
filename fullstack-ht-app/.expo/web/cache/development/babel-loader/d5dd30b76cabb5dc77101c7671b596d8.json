{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SignIn.jsx\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-native';\nimport Button from \"./Button\";\nimport FormikTextInput from \"./FormikTextInput\";\nimport useSignIn from \"../hooks/useSignIn\";\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    padding: 15\n  },\n  fieldContainer: {\n    marginBottom: 15\n  },\n  button: {\n    padding: 10\n  }\n});\nvar initialValues = {\n  username: '',\n  password: ''\n};\nvar validationSchema = yup.object().shape({\n  username: yup.string().required('Username is required'),\n  password: yup.string().required('Password is required')\n});\n\nvar SignInForm = function SignInForm(_ref) {\n  var onSubmit = _ref.onSubmit;\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"username\",\n    placeholder: \"Username\",\n    testID: \"usernameField\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"password\",\n    placeholder: \"Password\",\n    testID: \"passwordField\",\n    secureTextEntry: true\n  })), React.createElement(Button, {\n    onPress: onSubmit,\n    testID: \"submitButton\"\n  }, \"Sign in\"));\n};\n\nexport var SignInContainer = function SignInContainer(_ref2) {\n  var onSubmit = _ref2.onSubmit;\n  return React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validationSchema: validationSchema\n  }, function (_ref3) {\n    var handleSubmit = _ref3.handleSubmit;\n    return React.createElement(SignInForm, {\n      onSubmit: handleSubmit\n    });\n  });\n};\n\nvar SignIn = function SignIn() {\n  var _useSignIn = useSignIn(),\n      _useSignIn2 = _slicedToArray(_useSignIn, 1),\n      signIn = _useSignIn2[0];\n\n  var history = useHistory();\n\n  var onSubmit = function onSubmit(values) {\n    var username, password;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            username = values.username, password = values.password;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(signIn({\n              username: username,\n              password: password\n            }));\n\n          case 3:\n            history.push('/');\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SignInContainer, {\n    onSubmit: onSubmit\n  });\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SignIn.jsx"],"names":["React","Formik","yup","useHistory","Button","FormikTextInput","useSignIn","styles","StyleSheet","create","container","backgroundColor","padding","fieldContainer","marginBottom","button","initialValues","username","password","validationSchema","object","shape","string","required","SignInForm","onSubmit","SignInContainer","handleSubmit","SignIn","signIn","history","values","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-native';\n\nimport Button from './Button';\nimport FormikTextInput from './FormikTextInput';\nimport useSignIn from '../hooks/useSignIn';\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    padding: 15,\n  },\n  fieldContainer: {\n    marginBottom: 15,\n  },\n  button: {\n    padding: 10\n  }\n});\n\nconst initialValues = {\n  username: '',\n  password: '',\n};\n\nconst validationSchema = yup.object().shape({\n  username: yup.string().required('Username is required'),\n  password: yup.string().required('Password is required'),\n});\n\nconst SignInForm = ({ onSubmit }) => {\n  return (\n    <View style={styles.container}>\n      <View style={styles.fieldContainer}>\n        <FormikTextInput name=\"username\" placeholder=\"Username\" testID=\"usernameField\" />\n      </View>\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"password\"\n          placeholder=\"Password\"\n          testID=\"passwordField\"\n          secureTextEntry\n        />\n      </View>\n      <Button onPress={onSubmit} testID=\"submitButton\">Sign in</Button>\n    </View>\n  );\n};\n\nexport const SignInContainer = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n    >\n      {({ handleSubmit }) => <SignInForm onSubmit={handleSubmit} />}\n    </Formik>\n  );\n};\n\nconst SignIn = () => {\n  const [signIn] = useSignIn();\n  const history = useHistory();\n\n  const onSubmit = async (values) => {\n    const { username, password } = values;\n\n    await signIn({ username, password });\n\n    history.push('/');\n  };\n\n  return <SignInContainer onSubmit={onSubmit} />;\n};\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}