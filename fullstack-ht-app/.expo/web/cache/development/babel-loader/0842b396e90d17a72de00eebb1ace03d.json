{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Userpage.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Button, Avatar, Divider } from 'react-native-paper';\nimport { useHistory } from 'react-router-native';\nimport { TabView, SceneMap } from 'react-native-tab-view';\nimport { StateContext } from \"../state\";\nimport Text from \"./Text\";\nimport MyReviews from \"./MyReviews\";\nimport MyCollection from \"./MyCollection\";\nimport MyWishList from \"./MyWishList\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport theme from \"../theme\";\nvar styles = StyleSheet.create({\n  topContainer: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 30,\n    flexGrow: 1\n  },\n  bottomContainer: {\n    flexGrow: 3\n  },\n  container: {\n    zIndex: 1,\n    height: '100%',\n    width: '100%',\n    flexDirection: 'column',\n    position: 'absolute',\n    backgroundColor: 'yellow'\n  },\n  avatar: {\n    width: 100,\n    height: 100,\n    borderRadius: 100\n  },\n  loading: {\n    position: 'absolute',\n    top: 245,\n    zIndex: 2\n  },\n  button: {\n    marginHorizontal: 50\n  },\n  button2: {\n    marginTop: 20\n  }\n});\nvar renderScene = SceneMap({\n  first: MyReviews,\n  second: MyCollection,\n  third: MyWishList\n});\n\nvar Userpage = function Userpage() {\n  var history = useHistory();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      img = _useState2[0],\n      setImg = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loaded = _useState4[0],\n      setLoaded = _useState4[1];\n\n  var layout = useWindowDimensions();\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      index = _useState6[0],\n      setIndex = _useState6[1];\n\n  var _useState7 = useState([{\n    key: 'first',\n    title: 'My Reviews'\n  }, {\n    key: 'second',\n    title: 'My Collection'\n  }, {\n    key: 'third',\n    title: 'My Wish List'\n  }]),\n      _useState8 = _slicedToArray(_useState7, 1),\n      routes = _useState8[0];\n\n  useEffect(function () {\n    firebase.firestore().collection(\"images\").doc(firebase.auth().currentUser.uid).collection(\"userImages\").doc(\"profilePicture\").get().then(function (snapshot) {\n      setImg(snapshot.data().downloadURL);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.topContainer\n  }, React.createElement(Image, {\n    source: {\n      uri: img\n    },\n    style: styles.avatar,\n    onLoadEnd: function onLoadEnd() {\n      return setLoaded(true);\n    },\n    defaultSource: ''\n  })), React.createElement(View, {\n    style: styles.bottomContainer\n  }, React.createElement(TabView, {\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    renderScene: renderScene,\n    onIndexChange: setIndex,\n    initialLayout: {\n      width: layout.width\n    }\n  })));\n};\n\nexport default Userpage;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Userpage.jsx"],"names":["React","useState","useEffect","Button","Avatar","Divider","useHistory","TabView","SceneMap","StateContext","Text","MyReviews","MyCollection","MyWishList","firebase","theme","styles","StyleSheet","create","topContainer","flexDirection","justifyContent","alignItems","paddingTop","flexGrow","bottomContainer","container","zIndex","height","width","position","backgroundColor","avatar","borderRadius","loading","top","button","marginHorizontal","button2","marginTop","renderScene","first","second","third","Userpage","history","img","setImg","loaded","setLoaded","layout","useWindowDimensions","index","setIndex","key","title","routes","firestore","collection","doc","auth","currentUser","uid","get","then","snapshot","data","downloadURL","uri"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, Image, ActivityIndicator,  useWindowDimensions, ImageBackground } from 'react-native';\nimport { Button, Avatar, Divider } from 'react-native-paper';\nimport { useHistory } from 'react-router-native';\nimport { TabView, SceneMap } from 'react-native-tab-view';\n\nimport { StateContext } from '../state';\nimport Text from './Text';\n\nimport MyReviews from './MyReviews';\nimport MyCollection from './MyCollection';\nimport MyWishList from './MyWishList';\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nimport theme from '../theme';\n\n\nconst styles = StyleSheet.create({\n  topContainer: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 30,\n    // height: '100%',\n    // width: '100%',\n    flexGrow: 1,\n    // position: 'absolute',\n    \n  },\n  bottomContainer: {\n    // height: '100%',\n    // width: '100%',\n    flexGrow: 3\n  },\n  container: {\n    zIndex: 1,\n    height: '100%',\n    width: '100%',\n    flexDirection: 'column',\n    position: 'absolute',\n    backgroundColor: 'yellow'\n    // alignItems: 'center',\n  }, \n  avatar: {\n    \n    width: 100, \n    height: 100,\n    borderRadius: 100\n  },\n  loading: {\n    position: 'absolute',\n    top: 245,\n    zIndex: 2\n  },\n  button: {\n    marginHorizontal: 50\n  },\n  button2: {\n    marginTop: 20\n  },\n});\n\n\n\nconst renderScene = SceneMap({\n  first: MyReviews,\n  second: MyCollection,\n  third: MyWishList\n});\n\n\n\n\nconst Userpage = () => {\n\n  const history = useHistory();\n  const [img, setImg] = useState();\n  const [loaded, setLoaded] = useState(false);\n\n\n  const layout = useWindowDimensions();\n\n  const [index, setIndex] = useState(0);\n  const [routes] = useState([\n    { key: 'first', title: 'My Reviews' },\n    { key: 'second', title: 'My Collection' },\n    { key: 'third', title: 'My Wish List' }\n  ]);\n\n\n\n  useEffect(() => {\n\n    firebase.firestore()\n    .collection(\"images\")\n    .doc(firebase.auth().currentUser.uid)\n    .collection(\"userImages\")\n    .doc(\"profilePicture\")\n    .get().then((snapshot) => {\n      setImg(snapshot.data().downloadURL);\n    });\n  \n  },[]);\n\n  return (\n    <View style={styles.container}>\n\n    \n      <View style={styles.topContainer}>\n      \n      {/* <View style={styles.loading}>\n        <ActivityIndicator size='small' animating={!loaded} color={theme.colors.primary} />\n      </View> */}\n      <Image source={{ uri: img }} style={styles.avatar} onLoadEnd={() => setLoaded(true)} defaultSource={''} />\n      </View>\n      \n      <View style={styles.bottomContainer}>\n\n        <TabView\n          navigationState={{ index, routes }}\n          renderScene={renderScene}\n          onIndexChange={setIndex}\n          initialLayout={{ width: layout.width }}\n        />\n      </View>\n\n          \n\n      {/* </View> */}\n      </View>\n\n  );\n};\n\nexport default Userpage;"]},"metadata":{},"sourceType":"module"}