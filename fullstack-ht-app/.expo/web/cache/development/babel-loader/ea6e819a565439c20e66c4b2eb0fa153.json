{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyReviews.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Button, Snackbar } from 'react-native-paper';\nimport { Link } from 'react-router-native';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport ReviewItem from \"./ReviewItem\";\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    zIndex: 1,\n    height: '100%',\n    width: '100%',\n    paddingBottom: 60\n  },\n  reviewItemWrapper: {\n    padding: 15,\n    backgroundColor: '#FFD700'\n  },\n  separator: {\n    height: 10\n  },\n  actionsContainer: {\n    marginTop: 15,\n    borderWidth: 3,\n    flexDirection: 'row'\n  },\n  actionButton: {\n    marginTop: 5\n  },\n  lastActionButton: {}\n});\n\nvar DeleteReviewButton = function DeleteReviewButton(_ref) {\n  var _onPress = _ref.onPress;\n  var alertButtons = [{\n    text: 'Cancel',\n    style: 'cancel'\n  }, {\n    text: 'Delete',\n    onPress: function onPress() {\n      return _onPress();\n    }\n  }];\n\n  var deleteWithConfirmation = function deleteWithConfirmation() {\n    Alert.alert('Delete review', 'Are you sure you want to delete this review?', alertButtons, {\n      cancelable: false\n    });\n  };\n\n  return React.createElement(Button, {\n    onPress: deleteWithConfirmation\n  }, \"Delete review\");\n};\n\nvar ReviewItemWithActions = function ReviewItemWithActions(_ref2) {\n  var review = _ref2.review,\n      onDelete = _ref2.onDelete;\n  console.log('review: ', review.id);\n  return React.createElement(View, {\n    style: styles.reviewItemWrapper\n  }, React.createElement(ReviewItem, {\n    review: review\n  }), React.createElement(Link, {\n    component: Button,\n    to: \"/whiskies/\" + review.id,\n    style: styles.actionButton\n  }, \"View whisky\"), React.createElement(DeleteReviewButton, {\n    onPress: onDelete,\n    style: [styles.actionButton, styles.lastActionButton]\n  }));\n};\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator\n  });\n};\n\nvar MyReviews = function MyReviews() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      reviews = _useState2[0],\n      setReviews = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  useEffect(function () {\n    var messagesListener = firebase.firestore().collection('reviews').doc(firebase.auth().currentUser.uid).collection('userReviews').onSnapshot(function (querySnapshot) {\n      var reviews = querySnapshot.docs.map(function (doc) {\n        var firebaseData = doc.data();\n        console.log('firebaseData: ', firebaseData);\n\n        var data = _objectSpread({\n          _id: doc.id\n        }, firebaseData);\n\n        return data;\n      });\n      setReviews(reviews);\n    });\n    return function () {\n      return messagesListener();\n    };\n  }, []);\n\n  var _onDelete = function onDelete(id) {\n    var batch, reviewRef1, reviewRef2, rewDocRef;\n    return _regeneratorRuntime.async(function onDelete$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('pressed delete');\n            batch = firebase.firestore().batch();\n            reviewRef1 = firebase.firestore().collection('reviews').doc(firebase.auth().currentUser.uid).collection('userReviews').doc(id);\n            batch.delete(reviewRef1);\n            reviewRef2 = firebase.firestore().collection('whiskies').doc(id).collection('reviews').doc(firebase.auth().currentUser.uid);\n            batch.delete(reviewRef2);\n            batch.commit().then(function () {\n              setVisible(true);\n            }).catch(function (error) {\n              console.log(error);\n            });\n            rewDocRef = firebase.firestore().collection('whiskies').doc(id);\n            firebase.firestore().runTransaction(function (transaction) {\n              console.log('transaction');\n              return transaction.get(rewDocRef).then(function (rewDoc) {\n                if (!rewDoc.exists) {\n                  throw \"Document does not exist!\";\n                }\n\n                var newReviewCount = rewDoc.data().reviewCount - 1;\n                var myRating = rewDoc.data().reviews.firebase.auth().currentUser.uid.rating;\n                var newRating = (rewDoc.data().rating - myRating) / newReviewCount;\n                transaction.update(rewDocRef, {\n                  reviewCount: newReviewCount,\n                  rating: newRating\n                });\n              });\n            }).then(function () {\n              console.log(\"Transaction successfully committed!\");\n            }).catch(function (error) {\n              console.log(\"Transaction failed: \", error);\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  console.log('my reviews: ', reviews);\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Snackbar, {\n    visible: visible\n  }, \"Review deleted\"), React.createElement(FlatList, {\n    data: reviews,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(ReviewItemWithActions, {\n        review: item,\n        onDelete: function onDelete() {\n          return _onDelete(item.id);\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(_ref4) {\n      var id = _ref4.id;\n      return id;\n    },\n    ItemSeparatorComponent: ItemSeparator\n  })));\n};\n\nexport default MyReviews;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyReviews.jsx"],"names":["React","useState","useEffect","Button","Snackbar","Link","firebase","ReviewItem","styles","StyleSheet","create","container","flexDirection","zIndex","height","width","paddingBottom","reviewItemWrapper","padding","backgroundColor","separator","actionsContainer","marginTop","borderWidth","actionButton","lastActionButton","DeleteReviewButton","onPress","alertButtons","text","style","deleteWithConfirmation","Alert","alert","cancelable","ReviewItemWithActions","review","onDelete","console","log","id","ItemSeparator","MyReviews","reviews","setReviews","visible","setVisible","messagesListener","firestore","collection","doc","auth","currentUser","uid","onSnapshot","querySnapshot","docs","map","firebaseData","data","_id","batch","reviewRef1","delete","reviewRef2","commit","then","catch","error","rewDocRef","runTransaction","transaction","get","rewDoc","exists","newReviewCount","reviewCount","myRating","rating","newRating","update","item"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from 'react';\nimport { FlatList, View, StyleSheet, Alert } from 'react-native';\nimport { Button, Snackbar } from 'react-native-paper';\nimport { Link } from 'react-router-native';\n// import * as firebase from 'firebase';\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport ReviewItem from './ReviewItem';\n\n\nconst styles = StyleSheet.create({\ncontainer: {\n    flexDirection: 'column',\n    zIndex: 1,\n    // position: 'absolute',\n    height: '100%',\n    width: '100%',\n    // paddingTop: 80,\n    paddingBottom: 60\n},\n  reviewItemWrapper: {\n    padding: 15,\n    backgroundColor: '#FFD700',\n  },\n  separator: {\n    height: 10,\n  },\n  actionsContainer: {\n    marginTop: 15,\n    borderWidth: 3,\n    flexDirection: 'row',\n  },\n  actionButton: {\n    marginTop: 5\n\n  },\n  lastActionButton: {\n\n  },\n});\n\nconst DeleteReviewButton = ({ onPress }) => {\n    const alertButtons = [\n      {\n        text: 'Cancel',\n        style: 'cancel',\n      },\n      {\n        text: 'Delete',\n        onPress: () => onPress(),\n      },\n    ];\n  \n    const deleteWithConfirmation = () => {\n      Alert.alert(\n        'Delete review',\n        'Are you sure you want to delete this review?',\n        alertButtons,\n        { cancelable: false },\n      );\n    };\n  \n    return (\n      <Button onPress={deleteWithConfirmation}>\n        Delete review\n      </Button>\n    );\n  };\n\n\n\nconst ReviewItemWithActions = ({ review, onDelete }) => {\n\n  console.log('review: ', review.id);\n\n  return (\n    <View style={styles.reviewItemWrapper}>\n        <ReviewItem review={review}/> \n        <Link\n          component={Button}\n          to={`/whiskies/${review.id}`}\n          style={styles.actionButton}\n        >\n          View whisky\n        </Link>\n        <DeleteReviewButton\n          onPress={onDelete}\n          style={[styles.actionButton, styles.lastActionButton]}\n        /> \n    </View>\n  );\n};\n\nconst ItemSeparator = () => <View style={styles.separator} />;\n\nconst MyReviews = () => {\n\n    const [reviews, setReviews] = useState([]);\n    const [visible, setVisible] = useState(false);\n  \n    useEffect(() => {\n\n      const messagesListener = firebase.firestore()\n      .collection('reviews')\n      .doc(firebase.auth().currentUser.uid)\n      .collection('userReviews')\n      .onSnapshot(querySnapshot => {\n          const reviews = querySnapshot.docs.map(doc => {\n              const firebaseData = doc.data();\n              console.log('firebaseData: ', firebaseData);\n\n              const data = {\n                  _id: doc.id,\n                  ...firebaseData\n              };\n\n              // if (!firebaseData.system) {\n              //     data.user = {\n              //         ...firebaseData.user,\n              //         name: firebaseData.user.email\n              //     };\n              // }\n\n              return data;\n          });\n\n          setReviews(reviews);\n      });\n\n\n  return () => messagesListener();\n\n        // {firebase.auth().currentUser&&firebase.firestore()\n        //     .collection('reviews').doc(firebase.auth().currentUser.uid).collection('userReviews')\n        //     .get()\n        //     .then((querySnapshot) => {\n        //         let posts = querySnapshot.docs.map(doc => {\n        //             const data = doc.data();\n        //             const id = doc.id;\n        //             return { id, ...data };\n        //         });\n        //         setReviews(posts);\n        //     })\n        //     .catch((error) => {\n        //         console.log(\"Error getting documents: \", error);\n        //     });\n}, []);\n // use transaction instead\n  const onDelete = async (id) => {\n\n    console.log('pressed delete');\n\n    let batch = firebase.firestore().batch();\n\n    let reviewRef1 = firebase.firestore().collection('reviews').doc(firebase.auth().currentUser.uid).collection('userReviews')\n      .doc(id);\n    batch.delete(reviewRef1);\n\n    let reviewRef2 = firebase.firestore().collection('whiskies').doc(id)\n      .collection('reviews').doc(firebase.auth().currentUser.uid);\n    batch.delete(reviewRef2);\n\n    batch.commit().then(() => { setVisible(true); }).catch((error) => { console.log(error); });\n\n    let rewDocRef = firebase.firestore().collection('whiskies').doc(id);\n\n    firebase.firestore().runTransaction((transaction) => {\n\n      console.log('transaction');\n      // This code may get re-run multiple times if there are conflicts.\n      return transaction.get(rewDocRef).then((rewDoc) => {\n        if (!rewDoc.exists) {\n          throw \"Document does not exist!\";\n        }\n        let newReviewCount = rewDoc.data().reviewCount - 1;\n        let myRating = rewDoc.data().reviews.firebase.auth().currentUser.uid.rating;\n        \n        let newRating = (rewDoc.data().rating - myRating) / (newReviewCount);\n        transaction.update(rewDocRef, { reviewCount: newReviewCount, rating: newRating });\n      });\n    }).then(() => {\n      console.log(\"Transaction successfully committed!\");\n    }).catch((error) => {\n      console.log(\"Transaction failed: \", error);\n    });\n\n  };\n\n  console.log('my reviews: ', reviews);\n\n  return (\n      <>\n      <View style={styles.container}>\n      <Snackbar visible={visible}>\n            Review deleted\n        </Snackbar>\n          <FlatList\n              data={reviews}\n              renderItem={({ item }) => (\n                  <ReviewItemWithActions\n                      review={item}\n                      onDelete={() => onDelete(item.id)}\n                  />\n              )}\n              keyExtractor={({ id }) => id}\n              ItemSeparatorComponent={ItemSeparator}\n          />\n      </View>\n      </>\n  );\n};\n\nexport default MyReviews;"]},"metadata":{},"sourceType":"module"}