{"ast":null,"code":"export function showWeekDay(dayIndex, disableWeekDays) {\n  return !(disableWeekDays && disableWeekDays.some(function (di) {\n    return di === dayIndex;\n  }));\n}\nexport function dateToUnix(d) {\n  return Math.round(d.getTime() / 1000);\n}\nexport function addMonths(date, count) {\n  var n = date.getDate();\n  var n2 = new Date(date.getTime());\n  n2.setDate(1);\n  n2.setMonth(n2.getMonth() + count);\n  n2.setDate(Math.min(n, getDaysInMonth({\n    year: n2.getFullYear(),\n    month: n2.getMonth()\n  })));\n  return n2;\n}\nexport function getDaysInMonth(_ref) {\n  var year = _ref.year,\n      month = _ref.month;\n  return [31, isLeapYear({\n    year: year\n  }) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];\n}\nexport function getFirstDayOfMonth(_ref2) {\n  var year = _ref2.year,\n      month = _ref2.month;\n  return new Date(year, month, 1).getDay();\n}\nexport function areDatesOnSameDay(a, b) {\n  if (!b) {\n    return false;\n  }\n\n  return a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\n}\nexport function isDateBetween(date, _ref3) {\n  var startDate = _ref3.startDate,\n      endDate = _ref3.endDate;\n\n  if (!startDate || !endDate) {\n    return false;\n  }\n\n  return date <= endDate && date >= startDate;\n}\nexport function isLeapYear(_ref4) {\n  var year = _ref4.year;\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport var daySize = 46;\nexport var estimatedMonthHeight = 360;\nexport var startAtIndex = 1200;\nexport var totalMonths = startAtIndex * 2;\nexport var beginOffset = estimatedMonthHeight * startAtIndex;\nexport var gridCounts = new Array(totalMonths);\nexport function getGridCount(index) {\n  var cHeight = gridCounts[index];\n\n  if (cHeight) {\n    return cHeight;\n  }\n\n  var monthDate = addMonths(new Date(), getRealIndex(index));\n  var h = getGridCountForDate(monthDate);\n  gridCounts[index] = h;\n  return h;\n}\nexport function getGridCountForDate(date) {\n  var year = date.getFullYear();\n  var month = date.getMonth();\n  var daysInMonth = getDaysInMonth({\n    year: year,\n    month: month\n  });\n  var dayOfWeek = getFirstDayOfMonth({\n    year: year,\n    month: month\n  });\n  return Math.ceil((daysInMonth + dayOfWeek) / 7);\n}\nexport function getRealIndex(index) {\n  return index - startAtIndex;\n}\nexport function getInitialIndex(date) {\n  if (!date) {\n    return startAtIndex;\n  }\n\n  var today = new Date();\n  var months = differenceInMonths(today, date);\n  return startAtIndex + months;\n}\nexport function differenceInMonths(firstDate, secondDate) {\n  var diffMonths = (secondDate.getFullYear() - firstDate.getFullYear()) * 12;\n  diffMonths -= firstDate.getMonth();\n  diffMonths += secondDate.getMonth();\n  return diffMonths;\n}","map":{"version":3,"sources":["dateUtils.tsx"],"names":["disableWeekDays","di","Math","d","n","date","n2","getDaysInMonth","year","month","a","b","endDate","daySize","estimatedMonthHeight","startAtIndex","totalMonths","beginOffset","gridCounts","cHeight","monthDate","addMonths","getRealIndex","h","getGridCountForDate","daysInMonth","dayOfWeek","getFirstDayOfMonth","index","today","months","differenceInMonths","diffMonths","secondDate","firstDate"],"mappings":"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","sourcesContent":["export type DisableWeekDaysType = number[]\n\nexport function showWeekDay(\n  dayIndex: number,\n  disableWeekDays?: DisableWeekDaysType\n): boolean {\n  return !(disableWeekDays && disableWeekDays.some((di) => di === dayIndex))\n}\n\nexport function dateToUnix(d: Date): number {\n  return Math.round(d.getTime() / 1000)\n}\n\nexport function addMonths(date: Date, count: number) {\n  let n = date.getDate()\n  let n2 = new Date(date.getTime())\n  n2.setDate(1)\n  n2.setMonth(n2.getMonth() + count)\n  n2.setDate(\n    Math.min(\n      n,\n      getDaysInMonth({ year: n2.getFullYear(), month: n2.getMonth() })\n    )\n  )\n\n  return n2\n}\n\n// https://stackoverflow.com/a/1185068/2508481\n// pass in any date as parameter anyDateInMonth based on dayjs\nexport function getDaysInMonth({\n  year,\n  month,\n}: {\n  year: number\n  month: number\n}): number {\n  return [\n    31,\n    isLeapYear({ year }) ? 29 : 28,\n    31,\n    30,\n    31,\n    30,\n    31,\n    31,\n    30,\n    31,\n    30,\n    31,\n  ][month]\n}\n\nexport function getFirstDayOfMonth({\n  year,\n  month,\n}: {\n  year: number\n  month: number\n}): number {\n  return new Date(year, month, 1).getDay()\n}\n\n// export function getLastDayOfMonth({\n//   year,\n//   month,\n// }: {\n//   year: number\n//   month: number\n// }): number {\n//   return new Date(year, month, getDaysInMonth({ year, month })).getDay()\n// }\n\nexport function areDatesOnSameDay(a: Date, b?: Date | null | undefined) {\n  if (!b) {\n    return false\n  }\n\n  return (\n    a.getFullYear() === b.getFullYear() &&\n    a.getMonth() === b.getMonth() &&\n    a.getDate() === b.getDate()\n  )\n}\n\nexport function isDateBetween(\n  date: Date,\n  {\n    startDate,\n    endDate,\n  }: {\n    startDate?: Date | null | undefined\n    endDate?: Date | null | undefined\n  }\n): boolean {\n  if (!startDate || !endDate) {\n    return false\n  }\n  return date <= endDate && date >= startDate\n}\n\nexport function isLeapYear({ year }: { year: number }) {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0\n}\n\nexport const daySize = 46\nexport const estimatedMonthHeight = 360\nexport const startAtIndex = 1200\nexport const totalMonths = startAtIndex * 2\nexport const beginOffset = estimatedMonthHeight * startAtIndex\nexport const gridCounts = new Array<number | undefined>(totalMonths)\n\nexport function getGridCount(index: number) {\n  const cHeight = gridCounts[index]\n  if (cHeight) {\n    return cHeight\n  }\n  const monthDate = addMonths(new Date(), getRealIndex(index))\n  const h = getGridCountForDate(monthDate)\n  gridCounts[index] = h\n  return h\n}\n\nexport function getGridCountForDate(date: Date) {\n  const year = date.getFullYear()\n  const month = date.getMonth()\n  const daysInMonth = getDaysInMonth({ year, month })\n  const dayOfWeek = getFirstDayOfMonth({ year, month })\n  return Math.ceil((daysInMonth + dayOfWeek) / 7)\n}\n\nexport function getRealIndex(index: number) {\n  return index - startAtIndex\n}\n\nexport function getInitialIndex(date: Date) {\n  if (!date) {\n    return startAtIndex\n  }\n\n  const today = new Date()\n  const months = differenceInMonths(today, date)\n\n  return startAtIndex + months\n}\n\nexport function differenceInMonths(firstDate: Date, secondDate: Date) {\n  let diffMonths = (secondDate.getFullYear() - firstDate.getFullYear()) * 12\n  diffMonths -= firstDate.getMonth()\n  diffMonths += secondDate.getMonth()\n  return diffMonths\n}\n"]},"metadata":{},"sourceType":"module"}