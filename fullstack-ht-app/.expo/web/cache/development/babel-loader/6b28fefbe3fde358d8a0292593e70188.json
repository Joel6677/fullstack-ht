{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Userpage.jsx\";\nimport React, { useState, useContext, useRef, useEffect } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Avatar, Divider } from 'react-native-paper';\nimport { useHistory } from 'react-router-native';\nimport firebase from \"firebase/app\";\nimport \"firebase/firebase-storage\";\nimport uuid from 'uuid';\nimport { StateContext } from \"../state\";\nimport Text from \"./Text\";\nvar styles = StyleSheet.create({\n  topContainer: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1\n  },\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  bottomContainer: {},\n  avatar: {\n    marginBottom: 50\n  },\n  button: {\n    marginHorizontal: 50\n  },\n  button2: {\n    marginTop: 20\n  }\n});\n\nvar Userpage = function Userpage() {\n  var history, ref, url;\n  return _regeneratorRuntime.async(function Userpage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          history = useHistory();\n          ref = firebase.storage().ref().child(\"images/\" + firebase.auth().currentUser.uid + \"/\" + uuid.v4());\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(ref.getDownloadURL());\n\n        case 4:\n          url = _context.sent;\n          return _context.abrupt(\"return\", React.createElement(View, {\n            style: styles.topContainer\n          }, React.createElement(Avatar.Image, {\n            size: 150,\n            style: styles.avatar,\n            source: url\n          }), React.createElement(View, {\n            style: styles.container\n          }, React.createElement(Button, {\n            icon: \"settings-outline\",\n            mode: \"outlined\",\n            compact: \"true\",\n            style: styles.button\n          }, \"Settings\"), React.createElement(Button, {\n            icon: \"lead-pencil\",\n            mode: \"outlined\",\n            compact: \"true\",\n            style: styles.button,\n            onPress: function onPress() {\n              return history.push('/my-info');\n            }\n          }, \"My info\")), React.createElement(View, {\n            style: styles.bottomContainer\n          }, React.createElement(Button, {\n            icon: \"camera\",\n            mode: \"outlined\",\n            compact: \"true\",\n            style: styles.button2,\n            onPress: function onPress() {\n              return history.push(\"/upload-media\");\n            }\n          }, \"Upload media\"))));\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Userpage;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Userpage.jsx"],"names":["React","useState","useContext","useRef","useEffect","Button","Avatar","Divider","useHistory","firebase","uuid","StateContext","Text","styles","StyleSheet","create","topContainer","flexDirection","justifyContent","alignItems","height","width","position","zIndex","container","bottomContainer","avatar","marginBottom","button","marginHorizontal","button2","marginTop","Userpage","history","ref","storage","child","auth","currentUser","uid","v4","getDownloadURL","url","push"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useRef, useEffect } from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport { Button, Avatar, Divider } from 'react-native-paper';\nimport { useHistory } from 'react-router-native';\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firebase-storage\";\nimport uuid from 'uuid';\n\nimport { StateContext } from '../state';\nimport Text from './Text';\n\nconst styles = StyleSheet.create({\n  topContainer: {\n    // backgroundColor: 'blue',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1\n  },\n  container: {\n    // backgroundColor: 'red',\n    flexDirection: 'row',\n    alignItems: 'center',\n  }, \n  bottomContainer: {\n    \n    // backgroundColor: 'green'\n  },\n  avatar: {\n    marginBottom: 50,\n  },\n  button: {\n    marginHorizontal: 50\n  },\n  button2: {\n    marginTop: 20\n  }\n});\n\n\nconst Userpage = async () => {\n\n  const history = useHistory();\n  const ref = firebase.storage().ref().child(`images/${firebase.auth().currentUser.uid}/${uuid.v4()}`);\n\n  const url = await ref.getDownloadURL();\n\n  return (\n      <View style={styles.topContainer}>\n      <Avatar.Image size={150} style={styles.avatar} source={url} />\n        <View style={styles.container}>\n          <Button icon=\"settings-outline\" mode=\"outlined\" compact=\"true\" style={styles.button}>\n            Settings\n          </Button>\n\n          <Button icon=\"lead-pencil\" mode=\"outlined\" compact=\"true\" style={styles.button} onPress={() => history.push('/my-info')}>\n            My info\n          </Button>\n\n        </View>\n        <View style={styles.bottomContainer}>\n          <Button icon=\"camera\" mode=\"outlined\" compact=\"true\" style={styles.button2} onPress={() => history.push(\"/upload-media\")}>\n            Upload media\n        </Button>\n        </View>\n      </View>\n  );\n};\n\nexport default Userpage;"]},"metadata":{},"sourceType":"module"}