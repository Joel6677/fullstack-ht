{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UploadWhisky.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageEditor from \"react-native-web/dist/exports/ImageEditor\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-native';\nimport uuid from 'uuid';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Button } from 'react-native-paper';\nimport Text from \"./Text\";\nimport FormikTextInput from \"./FormikTextInput\";\nimport * as firebase from 'firebase';\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1\n  },\n  fieldContainer: {\n    margin: 5\n  },\n  heading: {\n    alignItems: 'center',\n    marginBottom: 30\n  },\n  buttoncontainer: {}\n});\nvar initialValues = {\n  name: '',\n  description: '',\n  distillery: '',\n  country: '',\n  type: '',\n  distillationDate: '',\n  bottlingDate: '',\n  age: '',\n  abv: '',\n  bottleSize: '',\n  bottler: '',\n  maturing: ''\n};\nvar validationSchema = yup.object().shape({\n  distillery: yup.string().required('Distillery is required'),\n  name: yup.string().required('Name is required'),\n  description: yup.string().required('Description is required'),\n  country: yup.string().required('Country is required'),\n  region: yup.string(),\n  type: yup.string().required('Type is required'),\n  age: yup.number().required('Age is required'),\n  abv: yup.number().required('Abv is required'),\n  bottleSize: yup.number().required('Bottlesize is required')\n});\n\nvar UploadWhiskyForm = function UploadWhiskyForm(_ref) {\n  var onSubmit = _ref.onSubmit,\n      pickProfilePicFromLibrary = _ref.pickProfilePicFromLibrary;\n  return React.createElement(View, null, React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"name\",\n    placeholder: \"Name\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"description\",\n    placeholder: \"Description\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"distillery\",\n    placeholder: \"Distillery\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"country\",\n    placeholder: \"Country\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"region\",\n    placeholder: \"Region\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"type\",\n    placeholder: \"Type\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"age\",\n    keyboardType: \"numeric\",\n    placeholder: \"Age\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"abv\",\n    keyboardType: \"numeric\",\n    placeholder: \"Abv\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"bottleSize\",\n    keyboardType: \"numeric\",\n    placeholder: \"Bottlesize\"\n  })), React.createElement(Button, {\n    icon: \"camera\",\n    mode: \"outlined\",\n    onPress: pickProfilePicFromLibrary,\n    style: styles.buttoncontainer\n  }, \"Upload image\"), React.createElement(Button, {\n    icon: 'bottle-wine',\n    style: styles.fieldContainer,\n    mode: \"outlined\",\n    onPress: onSubmit\n  }, \"Submit whisky\"));\n};\n\nvar UploadWhisky = function UploadWhisky() {\n  var history = useHistory();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var onToggleSnackBar = function onToggleSnackBar() {\n    return setVisible(!visible);\n  };\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nWhiskyID = _useState6[0],\n      setNWhiskyID = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      downloadURL = _useState8[0],\n      setDownloadURL = _useState8[1];\n\n  var addImageToFirestore = function addImageToFirestore(downloadURL, whiskyID) {\n    return _regeneratorRuntime.async(function addImageToFirestore$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setDownloadURL(downloadURL);\n            firebase.firestore().collection('whiskyImages').doc(whiskyID).set({\n              downloadURL: downloadURL\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickProfilePicFromLibrary = function pickProfilePicFromLibrary() {\n    var result, whiskyID;\n    return _regeneratorRuntime.async(function pickProfilePicFromLibrary$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            whiskyID = uuid.v4();\n            setNWhiskyID(whiskyID);\n\n            if (!result.cancelled) {\n              uploadImage(result.uri, whiskyID);\n              setImage(result.uri);\n              onToggleSnackBar();\n            }\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadImage = function uploadImage(uri, whiskyID) {\n    var response, blob, ref, uploadTask;\n    return _regeneratorRuntime.async(function uploadImage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 2:\n            response = _context3.sent;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 5:\n            blob = _context3.sent;\n            ref = firebase.storage().ref().child(\"images/whiskies/\" + whiskyID);\n            uploadTask = ref.put(blob);\n            uploadTask.on('state_changed', function (snapshot) {\n              var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n              console.log('Upload is ' + progress + '% done');\n\n              switch (snapshot.state) {\n                case firebase.storage.TaskState.PAUSED:\n                  console.log('Upload is paused');\n                  break;\n\n                case firebase.storage.TaskState.RUNNING:\n                  console.log('Upload is running');\n                  break;\n              }\n            }, function (error) {\n              switch (error.code) {\n                case 'storage/unauthorized':\n                  console.log(error.code);\n                  break;\n\n                case 'storage/canceled':\n                  console.log(error.code);\n                  break;\n\n                case 'storage/unknown':\n                  console.log(error.code);\n                  break;\n              }\n            }, function () {\n              uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                console.log('File available at', downloadURL);\n                addImageToFirestore(downloadURL, whiskyID);\n              });\n            });\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onSubmit = function onSubmit(values) {\n    var name, description, distillery, country, type, age, abv, bottlesize;\n    return _regeneratorRuntime.async(function onSubmit$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            name = values.name, description = values.description, distillery = values.distillery, country = values.country, type = values.type, age = values.age, abv = values.abv, bottlesize = values.bottlesize;\n            firebase.firestore().collection('whiskies').doc(nWhiskyID).set({\n              name: name,\n              description: description,\n              distillery: distillery,\n              country: country,\n              type: type,\n              age: age,\n              abv: abv,\n              bottlesize: bottlesize,\n              downloadURL: downloadURL\n            });\n            history.push('/');\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(ScrollView, null, React.createElement(View, {\n    style: styles.heading\n  }, React.createElement(Text, {\n    color: 'primary',\n    fontSize: 'heading',\n    fontWeight: 'bold'\n  }, \"Upload Whisky\")), React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validationSchema: validationSchema\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit;\n    return React.createElement(UploadWhiskyForm, {\n      onSubmit: handleSubmit,\n      pickProfilePicFromLibrary: pickProfilePicFromLibrary\n    });\n  }), image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 100,\n      height: 100\n    }\n  })));\n};\n\nexport default UploadWhisky;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UploadWhisky.jsx"],"names":["React","useState","useEffect","Formik","yup","useHistory","uuid","ImagePicker","Button","Text","FormikTextInput","firebase","styles","StyleSheet","create","container","flexDirection","justifyContent","height","width","position","zIndex","fieldContainer","margin","heading","alignItems","marginBottom","buttoncontainer","initialValues","name","description","distillery","country","type","distillationDate","bottlingDate","age","abv","bottleSize","bottler","maturing","validationSchema","object","shape","string","required","region","number","UploadWhiskyForm","onSubmit","pickProfilePicFromLibrary","UploadWhisky","history","image","setImage","visible","setVisible","onToggleSnackBar","nWhiskyID","setNWhiskyID","downloadURL","setDownloadURL","addImageToFirestore","whiskyID","firestore","collection","doc","set","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","v4","cancelled","uploadImage","uri","fetch","response","blob","ref","storage","child","uploadTask","put","on","snapshot","progress","bytesTransferred","totalBytes","console","log","state","TaskState","PAUSED","RUNNING","error","code","getDownloadURL","then","values","bottlesize","push","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, ScrollView, Image, ImageEditor } from 'react-native';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-native';\nimport uuid from 'uuid';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Button} from 'react-native-paper';\nimport Text from './Text';\nimport FormikTextInput from './FormikTextInput';\n\nimport * as firebase from 'firebase';\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1\n  },\n  fieldContainer: {\n    margin: 5,\n  },\n  heading: {\n    alignItems: 'center',\n    marginBottom: 30\n  },\n  buttoncontainer: {\n\n  }\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n  distillery: '',\n  country: '',\n  type: '',\n  distillationDate: '',\n  bottlingDate: '',\n  age: '',\n  abv: '',\n  bottleSize: '',\n  bottler: '',\n  maturing: '',\n\n};\n\nconst validationSchema = yup.object().shape({\n  distillery: yup\n    .string()\n    .required('Distillery is required'),\n  name: yup\n    .string()\n    .required('Name is required'),\n  description: yup\n    .string()\n    .required('Description is required'),\n  country: yup\n    .string()\n    .required('Country is required'),\n  region: yup\n    .string(),\n  type: yup\n    .string()\n    .required('Type is required'),\n  age: yup \n    .number()\n    .required('Age is required'),\n  abv: yup\n    .number()\n    .required('Abv is required'),\n  bottleSize: yup\n    .number()\n    .required('Bottlesize is required')\n});\n\n\n\nconst UploadWhiskyForm = ({ onSubmit, pickProfilePicFromLibrary }) => {\n  return (\n    <View>\n      <View style={styles.fieldContainer}>\n        <FormikTextInput \n        name=\"name\" \n        placeholder=\"Name\" />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"description\"\n          placeholder=\"Description\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"distillery\"\n          placeholder=\"Distillery\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"country\"\n          placeholder=\"Country\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"region\"\n          placeholder=\"Region\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"type\"\n          placeholder=\"Type\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"age\"\n          keyboardType=\"numeric\"\n          placeholder=\"Age\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"abv\"\n          keyboardType=\"numeric\"\n          placeholder=\"Abv\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"bottleSize\"\n          keyboardType=\"numeric\"\n          placeholder=\"Bottlesize\"\n        />\n      </View>\n\n      <Button icon='camera' mode='outlined' onPress={pickProfilePicFromLibrary} style={styles.buttoncontainer}>Upload image</Button>\n\n      <Button icon={'bottle-wine'} style={styles.fieldContainer} mode='outlined' onPress={onSubmit}>\n          Submit whisky\n      </Button>\n    </View>\n  );\n};\n\n\n\nconst UploadWhisky = () => {\n  const history = useHistory();\n  const [image, setImage] = useState();\n  const [visible, setVisible] = useState(false);\n  const onToggleSnackBar = () => setVisible(!visible);\n  const [nWhiskyID, setNWhiskyID] = useState('');\n  const [downloadURL, setDownloadURL] = useState('');\n\n\n  const addImageToFirestore = async (downloadURL, whiskyID) => { \n    setDownloadURL(downloadURL);\n\n    firebase.firestore()\n    .collection('whiskyImages')\n    .doc(whiskyID)\n    .set({\n      downloadURL\n    });\n  };\n  \n  const pickProfilePicFromLibrary = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    const whiskyID = uuid.v4();\n    setNWhiskyID(whiskyID);\n  \n    if (!result.cancelled) {\n      uploadImage(result.uri, whiskyID);\n      setImage(result.uri);\n      onToggleSnackBar();\n    }\n  };\n\n  const uploadImage = async(uri, whiskyID) => {\n\n    const response = await fetch(uri);\n    const blob = await response.blob();\n\n    const ref = firebase.storage().ref().child(`images/whiskies/${whiskyID}`);\n\n    const uploadTask = ref.put(blob);\n\n    uploadTask.on('state_changed', \n  (snapshot) => {\n    // Observe state change events such as progress, pause, and resume\n    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n    console.log('Upload is ' + progress + '% done');\n    switch (snapshot.state) {\n      case firebase.storage.TaskState.PAUSED: // or 'paused'\n        console.log('Upload is paused');\n        break;\n      case firebase.storage.TaskState.RUNNING: // or 'running'\n        console.log('Upload is running');\n        break;\n    }\n  }, \n  (error) => {\n    // Handle unsuccessful uploads\n    switch (error.code) {\n      case 'storage/unauthorized':\n        // User doesn't have permission to access the object\n        console.log(error.code);\n        break;\n      case 'storage/canceled':\n        // User canceled the upload\n        console.log(error.code);\n        break;\n      case 'storage/unknown':\n        // Unknown error occurred, inspect error.serverResponse\n        console.log(error.code);\n        break;\n    }\n  },\n  () => {\n    // Handle successful uploads on complete\n    // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n    uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n      console.log('File available at', downloadURL);\n      addImageToFirestore(downloadURL, whiskyID);\n    });\n  });\n\n  };\n\n\n  const onSubmit = async (values) => {\n    const {name, description, distillery, country, type, age ,abv, bottlesize} = values;\n\n    firebase.firestore().collection('whiskies').doc(nWhiskyID).set({\n      name: name,\n      description: description,\n      distillery: distillery,\n      country: country,\n      type: type,\n      age: age,\n      abv: abv,\n      bottlesize: bottlesize,\n      downloadURL: downloadURL\n    });\n    history.push('/');\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView>\n      <View style={styles.heading}>\n        <Text color={'primary'} fontSize={'heading'} fontWeight={'bold'}>\n          Upload Whisky\n        </Text>\n      </View>\n      \n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {({ handleSubmit }) => <UploadWhiskyForm onSubmit={handleSubmit} pickProfilePicFromLibrary={pickProfilePicFromLibrary} />}\n      </Formik>\n      {image && <Image source={{ uri: image }} style={{ width: 100, height: 100 }} />}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default UploadWhisky;"]},"metadata":{},"sourceType":"module"}