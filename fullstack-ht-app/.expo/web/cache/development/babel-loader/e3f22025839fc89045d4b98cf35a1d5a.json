{"ast":null,"code":"var _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UploadUserInfo.jsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button } from 'react-native-paper';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport FormikTextInput from \"./FormikTextInput\";\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1\n  },\n  fieldContainer: {\n    marginBottom: 15\n  }\n});\nvar initialValues = {};\nvar validationSchema = yup.object().shape({\n  firstName: yup.string().min(1, 'First name must be at least 1 charaters long').required('First name is required'),\n  lastName: yup.string().min(1, 'Last name must be at least 1 characters long'),\n  birthdate: yup.date().min(8, 'Birthdate must be atleast 8 characters').max(8, 'Birthdate must be at most 8 characters long').required('Birtdate is required'),\n  country: yup.string().required('Country is required'),\n  bio: yup.string().max(150, 'Bio can be at most 150 characters long')\n});\n\nvar UserinfoForm = function UserinfoForm(_ref) {\n  var onSubmit = _ref.onSubmit;\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"firstName\",\n    placeholder: \"First name\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"lastName\",\n    placeholder: \"Last name\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"birthdate\",\n    placeholder: \"Birthdate\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"country\",\n    placeholder: \"Country\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"bio\",\n    placeholder: \"Bio\"\n  })), React.createElement(Button, {\n    onPress: onSubmit\n  }));\n};\n\nvar UploadUserInfo = function UploadUserInfo() {\n  return React.createElement(Formik, {\n    style: styles.container,\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validationSchema: validationSchema\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit;\n    return React.createElement(UserinfoForm, {\n      onSubmit: handleSubmit\n    });\n  });\n};\n\nexport default UploadUserInfo;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UploadUserInfo.jsx"],"names":["React","useState","Button","Formik","yup","FormikTextInput","styles","StyleSheet","create","container","flexDirection","justifyContent","height","width","position","zIndex","fieldContainer","marginBottom","initialValues","validationSchema","object","shape","firstName","string","min","required","lastName","birthdate","date","max","country","bio","UserinfoForm","onSubmit","UploadUserInfo","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport FormikTextInput from './FormikTextInput';\n\nconst styles = StyleSheet.create({\n    container: {\n      flexDirection: 'column',\n      justifyContent: 'center',\n      height: '100%',\n      width: '100%',\n      position: 'absolute',\n      zIndex: 1\n    },\n    fieldContainer: {\n      marginBottom: 15,\n    },\n  });\n\nconst initialValues = {\n\n};\n\nconst validationSchema = yup.object().shape({\n    firstName: yup\n        .string()\n        .min(1, 'First name must be at least 1 charaters long')\n        .required('First name is required'),\n    lastName: yup\n        .string()\n        .min(1, 'Last name must be at least 1 characters long'),\n    birthdate: yup\n        .date()\n        .min(8, 'Birthdate must be atleast 8 characters')\n        .max(8, 'Birthdate must be at most 8 characters long')\n        .required('Birtdate is required'),\n    country: yup\n        .string()\n        .required('Country is required'),\n    bio: yup\n        .string()\n        .max(150, 'Bio can be at most 150 characters long'),\n});\n\nconst UserinfoForm = ({ onSubmit }) => {\n    return (\n        <View style={styles.container}>\n\n            <View style={styles.fieldContainer}>\n                <FormikTextInput\n                    name=\"firstName\"\n                    placeholder=\"First name\" />\n            </View>\n\n            <View style={styles.fieldContainer}>\n                <FormikTextInput\n                    name=\"lastName\"\n                    placeholder=\"Last name\" />\n            </View>\n\n            <View style={styles.fieldContainer}>\n                <FormikTextInput\n                    name=\"birthdate\"\n                    placeholder=\"Birthdate\"\n                />\n            </View>\n\n            <View style={styles.fieldContainer}>\n                <FormikTextInput\n                    name=\"country\"\n                    placeholder=\"Country\"\n                />\n            </View>\n\n            <View style={styles.fieldContainer}>\n                <FormikTextInput\n                    name=\"bio\"\n                    placeholder=\"Bio\"\n                />\n            </View>\n\n        <Button onPress={onSubmit}>\n\n        </Button>\n\n        </View>\n    );\n};\n\nconst UploadUserInfo = () => {\n\n\n    return (\n\n            <Formik\n                style={styles.container}\n                initialValues={initialValues}\n                onSubmit={onSubmit}\n                validationSchema={validationSchema}\n            >\n                {({ handleSubmit }) => <UserinfoForm onSubmit={handleSubmit} />}\n            </Formik>\n    );\n};\n\nexport default UploadUserInfo;"]},"metadata":{},"sourceType":"module"}