{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/AppBar.jsx\";\nimport React, { useContext, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Constants from 'expo-constants';\nimport { Link } from 'react-router-native';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-native';\nimport useResizeAware from 'react-resize-aware';\nimport theme from \"../theme\";\nimport Text from \"./Text\";\nimport AuthStorageContext from \"../contexts/AuthStorageContext\";\nimport useAuthorizedUser from \"../hooks/useAuthorizedUser\";\nimport { StateContext } from \"../state\";\nimport { IconButton } from 'react-native-paper';\nimport { Appbar } from 'react-native-paper';\nvar styles = StyleSheet.create({\n  appbar: {\n    backgroundColor: theme.colors.primary,\n    zIndex: 99\n  },\n  container: {\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: theme.colors.appBarBackground,\n    width: '100%',\n    zIndex: 99\n  },\n  scrollView: {\n    flexDirection: 'row'\n  },\n  tabTouchable: {\n    flexGrow: 0\n  },\n  tabContainer: {\n    paddingHorizontal: 15,\n    paddingVertical: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  tabText: {\n    color: 'white'\n  }\n});\n\nvar AppBarTab = function AppBarTab(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return React.createElement(TouchableWithoutFeedback, _extends({\n    style: styles.tabTouchable\n  }, props), React.createElement(View, {\n    style: styles.tabContainer\n  }, React.createElement(Text, {\n    fontWeight: \"bold\",\n    style: styles.tabText\n  }, children)));\n};\n\nvar AppBar = function AppBar() {\n  var apolloClient = useApolloClient();\n  var authStorage = useContext(AuthStorageContext);\n  var history = useHistory();\n\n  var _useResizeAware = useResizeAware(),\n      _useResizeAware2 = _slicedToArray(_useResizeAware, 2),\n      resizeListener = _useResizeAware2[0],\n      sizes = _useResizeAware2[1];\n\n  var newWidth = (sizes.width - 200) / sizes.width * 100 + \"%\";\n\n  var _useAuthorizedUser = useAuthorizedUser(),\n      authorizedUser = _useAuthorizedUser.authorizedUser;\n\n  var _useContext = useContext(StateContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var resizeAnim = useRef(new Animated.Value(0)).current;\n\n  var onSignOut = function onSignOut() {\n    return _regeneratorRuntime.async(function onSignOut$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(authStorage.removeAccessToken());\n\n          case 2:\n            apolloClient.resetStore();\n            history.push('/');\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var moveAppbar = function moveAppbar() {\n    Animated.spring(resizeAnim, {\n      toValue: state.open ? 600 : 0\n    }).start();\n  };\n\n  useEffect(function () {\n    moveAppbar();\n  });\n  return React.createElement(Appbar, {\n    style: styles.appbar\n  }, React.createElement(Appbar.Action, {\n    icon: \"menu\",\n    onPress: function onPress() {\n      return dispatch({\n        type: \"SET_OPEN\",\n        payload: !state.open\n      });\n    }\n  }), React.createElement(Appbar.Action, {\n    icon: \"mail\",\n    onPress: function onPress() {\n      return history.push(\"/sign-up\");\n    }\n  }), React.createElement(Appbar.Action, {\n    icon: \"home\",\n    onPress: function onPress() {\n      return history.push(\"/\");\n    }\n  }), React.createElement(Appbar.Action, {\n    icon: \"magnify\",\n    onPress: function onPress() {\n      return history.push('/choose-pic');\n    }\n  }), React.createElement(Appbar.Action, {\n    icon: \"account\",\n    onPress: function onPress() {\n      return history.push(\"/userpage\");\n    }\n  }));\n};\n\nexport default AppBar;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/AppBar.jsx"],"names":["React","useContext","useRef","useEffect","Constants","Link","useApolloClient","useHistory","useResizeAware","theme","Text","AuthStorageContext","useAuthorizedUser","StateContext","IconButton","Appbar","styles","StyleSheet","create","appbar","backgroundColor","colors","primary","zIndex","container","paddingTop","statusBarHeight","appBarBackground","width","scrollView","flexDirection","tabTouchable","flexGrow","tabContainer","paddingHorizontal","paddingVertical","alignItems","justifyContent","tabText","color","AppBarTab","children","props","AppBar","apolloClient","authStorage","history","resizeListener","sizes","newWidth","authorizedUser","state","dispatch","resizeAnim","Animated","Value","current","onSignOut","removeAccessToken","resetStore","push","moveAppbar","spring","toValue","open","start","type","payload"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react';\n\nimport {\n  View,\n  ScrollView,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  Animated,\n} from 'react-native';\n\nimport Constants from 'expo-constants';\nimport { Link } from 'react-router-native';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-native';\nimport useResizeAware from 'react-resize-aware';\n\nimport theme from '../theme';\nimport Text from './Text';\nimport AuthStorageContext from '../contexts/AuthStorageContext';\nimport useAuthorizedUser from '../hooks/useAuthorizedUser';\n\nimport { StateContext } from '../state';\nimport { IconButton } from 'react-native-paper';\n\nimport { Appbar } from 'react-native-paper';\n\nconst styles = StyleSheet.create({\n  appbar: {\n    backgroundColor: theme.colors.primary,\n    zIndex: 99\n    \n  },\n  container: {\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: theme.colors.appBarBackground,\n    width: '100%',\n    zIndex: 99\n  },\n  scrollView: {\n    flexDirection: 'row',\n  },\n  tabTouchable: {\n    flexGrow: 0,\n  },\n  tabContainer: {\n    paddingHorizontal: 15,\n    paddingVertical: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  tabText: {\n    color: 'white',\n  }\n});\n\nconst AppBarTab = ({ children, ...props }) => { \n  return (\n    <TouchableWithoutFeedback style={styles.tabTouchable} {...props}>\n      <View style={styles.tabContainer}>\n        <Text fontWeight=\"bold\" style={styles.tabText}>\n          {children}\n        </Text>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nconst AppBar = () => {\n  const apolloClient = useApolloClient();\n  const authStorage = useContext(AuthStorageContext);\n  const history = useHistory();\n  const [resizeListener, sizes] = useResizeAware();\n  const newWidth = `${((sizes.width - 200) / sizes.width) * 100}%`;\n\n  const { authorizedUser } = useAuthorizedUser();\n\n  const { state, dispatch } = useContext(StateContext);\n  const resizeAnim = useRef(new Animated.Value(0)).current; \n\n  const onSignOut = async () => {\n    await authStorage.removeAccessToken();\n    apolloClient.resetStore();\n    history.push('/');\n  };\n\n  \n\n  const moveAppbar = () => {\n\n    Animated.spring(\n      resizeAnim,\n      {\n        toValue: state.open ? 600 : 0\n      }\n    ).start();\n  \n  };\n\n  useEffect(() => {\n    moveAppbar();\n  });\n\n\n  return (\n  //   <>\n\n  //   <View>\n  //     {resizeListener}\n  //   </View>\n  //   <Animated.View style={[styles.appbar, {\n  //     transform: [{\n  //       translateX: resizeAnim\n  //     }]\n  //   }]}>\n      <Appbar style={styles.appbar}>\n      <Appbar.Action\n        icon=\"menu\"\n        onPress={() => dispatch({type: \"SET_OPEN\", payload: !state.open})}\n      />\n      <Appbar.Action icon=\"mail\" onPress={() => history.push(\"/sign-up\")} />\n      <Appbar.Action icon=\"home\" onPress={() => history.push(\"/\")} />\n      <Appbar.Action\n        icon=\"magnify\"\n        onPress={() => history.push('/choose-pic')}\n      />\n        <Appbar.Action\n        icon=\"account\"\n        onPress={() => history.push(\"/userpage\")}\n      />\n    </Appbar>\n  //   </Animated.View>\n\n\n  //  </>\n    \n      // <View style={styles.container}>\n      // <View>\n\n      //   <Animated.View style={[styles.container, {\n      //     transform: [{\n      //       translateX: resizeAnim\n      //     }]\n      //   }]}>\n      //     {resizeListener}\n      //  <ScrollView style={styles.scrollView} horizontal> \n      //  <IconButton icon=\"menu\" color={theme.colors.primary} size={40} onPress={() => dispatch({type: \"SET_OPEN\", payload: !state.open})} \n      //   ></IconButton>\n      //   {authorizedUser ? (\n      //     <>\n      //       <AppBarTab onPress={onSignOut}>Sign out</AppBarTab>\n      //     </>\n      //   ) : (\n      //     <>\n      //       <Link to=\"/sign-in\" component={AppBarTab}>\n      //         Sign in\n      //       </Link>\n      //       <Link to=\"/sign-up\" component={AppBarTab}>\n      //         Sign up\n      //       </Link>\n      //       <Link to=\"/\" component={AppBarTab}>\n      //         Home\n      //       </Link>\n      //     </>\n      //   )}\n      // </ScrollView>\n      // </Animated.View>\n  ); \n};\n\nexport default AppBar;"]},"metadata":{},"sourceType":"module"}