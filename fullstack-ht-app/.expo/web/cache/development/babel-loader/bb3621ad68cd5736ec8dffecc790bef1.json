{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyMessages.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useHistory } from 'react-router-native';\nimport MessageItem from \"./MessageItem\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nvar styles = StyleSheet.create({\n  container: {\n    padding: 5,\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1,\n    paddingTop: 80,\n    paddingBottom: 60\n  },\n  separator: {\n    marginVertical: 5\n  },\n  headerContainer: {\n    padding: 10\n  },\n  searchContainer: {\n    marginBottom: 15\n  }\n});\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator\n  });\n};\n\nvar getMessages = function getMessages() {\n  var currentUser, chatIDs, messages;\n  return _regeneratorRuntime.async(function getMessages$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          currentUser = firebase.auth().currentUser;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection('users').where('email', '!=', currentUser.email).get().then(function (querySnapshot) {\n            var ids = querySnapshot.docs.map(function (doc) {\n              var id = doc.id;\n              var chatIDpre = [];\n              chatIDpre.push(currentUser.uid);\n              chatIDpre.push(id);\n              chatIDpre.sort();\n              return chatIDpre.join('_');\n            });\n            return ids;\n          }).catch(function (error) {\n            console.log(\"Error getting documents: \", error);\n          }));\n\n        case 3:\n          chatIDs = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection('messages').where('chatID', 'in', chatIDs).get().then(function (querySnapshot) {\n            var posts = querySnapshot.docs.map(function (doc) {\n              var data = doc.data();\n              var userIDs = doc.id.split('_');\n              console.log('userIDs: ', userIDs);\n              var id;\n\n              for (var i = 0; i < 2; i++) {\n                if (userIDs[i] !== currentUser.uid) {\n                  id = userIDs[i];\n                }\n              }\n\n              return _objectSpread({\n                id: id\n              }, data);\n            });\n            return posts;\n          }).catch(function (error) {\n            console.log(\"Error getting documents: \", error);\n          }));\n\n        case 6:\n          messages = _context.sent;\n          console.log('chatIDs: ', chatIDs);\n          console.log('messages: ', messages);\n          return _context.abrupt(\"return\", messages);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar MyMessages = function MyMessages() {\n  var history = useHistory();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  useEffect(function () {\n    getMessages().then(function (messages) {\n      setMessages(messages);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(FlatList, {\n    data: messages,\n    keyExtractor: function keyExtractor(_ref) {\n      var id = _ref.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        key: item,\n        onPress: function onPress() {\n          return history.push(\"/messenger/\" + item.id);\n        }\n      }, React.createElement(MessageItem, {\n        message: item\n      }));\n    },\n    ItemSeparatorComponent: ItemSeparator\n  }));\n};\n\nexport default MyMessages;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyMessages.jsx"],"names":["React","useState","useEffect","useHistory","MessageItem","firebase","styles","StyleSheet","create","container","padding","height","width","position","zIndex","paddingTop","paddingBottom","separator","marginVertical","headerContainer","searchContainer","marginBottom","ItemSeparator","getMessages","currentUser","auth","firestore","collection","where","email","get","then","querySnapshot","ids","docs","map","doc","id","chatIDpre","push","uid","sort","join","catch","error","console","log","chatIDs","posts","data","userIDs","split","i","messages","MyMessages","history","setMessages","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FlatList, View, StyleSheet, TouchableOpacity } from 'react-native';\nimport { useHistory } from 'react-router-native';\nimport MessageItem from './MessageItem';\n// import * as firebase from 'firebase';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n\nconst styles = StyleSheet.create({\n    container: {\n        padding: 5,\n        height: '100%',\n        width: '100%',\n        position: 'absolute',\n        zIndex: 1,\n        paddingTop: 80,\n        paddingBottom: 60\n    },\n    separator: {\n        marginVertical: 5\n    },\n    headerContainer: {\n        padding: 10,\n    },\n    searchContainer: {\n        marginBottom: 15,\n    },\n});\n\nconst ItemSeparator = () => {\n\n\n    return(<View style={styles.separator}>\n\n    </View>);\n\n};\n\nconst getMessages = async () => {\n\n    const currentUser = firebase.auth().currentUser;\n\n    const chatIDs = await firebase.firestore().\n    collection('users')\n        .where('email', '!=', currentUser.email )\n        .get()\n        .then((querySnapshot) => {\n            let ids = querySnapshot.docs.map(doc => {\n                const id = doc.id;\n                const chatIDpre = [];\n                chatIDpre.push(currentUser.uid);\n                chatIDpre.push(id);\n                chatIDpre.sort();\n                return chatIDpre.join('_');\n            });\n            return ids;\n        })\n        .catch((error) => {\n            console.log(\"Error getting documents: \", error);\n        });\n\n    const messages = await firebase.firestore().\n    collection('messages').where('chatID', 'in', chatIDs)\n        .get()\n        .then((querySnapshot) => {\n            let posts = querySnapshot.docs.map(doc => {\n                const data = doc.data();\n                const userIDs = doc.id.split('_');\n                console.log('userIDs: ', userIDs);\n                let id;\n                for (let i = 0; i < 2; i++) {\n                    if (userIDs[i] !== currentUser.uid) {\n                       id = userIDs[i];\n                    }\n                }\n                return { id, ...data };\n            });\n            return posts;\n        })\n        .catch((error) => {\n            console.log(\"Error getting documents: \", error);\n        });\n\n        console.log('chatIDs: ', chatIDs);\n        console.log('messages: ', messages);\n\n        return messages;\n\n};\n\n\nconst MyMessages = () => {\n    const history = useHistory();\n    const [messages, setMessages] = useState([]);\n    // const [chatIDs, setChatIDs] = useState([]);\n    \n\n\n\n    useEffect( () => {   \n        \n        getMessages().then((messages) => {setMessages(messages);});\n       \n    }, []);\n\n\n    return (\n        <View style={styles.container}>\n            <FlatList\n                data={messages}\n                keyExtractor={({ id }) => id}\n                renderItem={({ item }) => (\n                    <TouchableOpacity\n                        key={item}\n                        onPress={() => history.push(`/messenger/${item.id}`)}\n                    >\n                        <MessageItem message={item} />\n                    </TouchableOpacity>\n                )}\n                ItemSeparatorComponent={ItemSeparator}\n            />\n        </View>\n    );\n};\n\nexport default MyMessages;"]},"metadata":{},"sourceType":"module"}