{"ast":null,"code":"var _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyReviews.jsx\";\nimport ReviewItem from \"./ReviewItem\";\n\nvar ReviewItemWithActions = function ReviewItemWithActions(_ref) {\n  var review = _ref.review,\n      onDelete = _ref.onDelete;\n  return React.createElement(View, {\n    style: styles.reviewItemWrapper\n  }, React.createElement(ReviewItem, {\n    review: review,\n    title: review.repository.fullName\n  }), React.createElement(View, {\n    style: styles.actionsContainer\n  }, React.createElement(Link, {\n    component: Button,\n    to: \"/repositories/\" + review.repository.id,\n    style: styles.actionButton\n  }, \"View repository\")));\n};","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyReviews.jsx"],"names":["ReviewItem","ReviewItemWithActions","review","onDelete","styles","reviewItemWrapper","repository","fullName","actionsContainer","Button","id","actionButton"],"mappings":";AAKA,OAAOA,UAAP;;AA4BA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,OAA0B;AAAA,MAAvBC,MAAuB,QAAvBA,MAAuB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACtD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEH,MAApB;AAA4B,IAAA,KAAK,EAAEA,MAAM,CAACI,UAAP,CAAkBC;AAArD,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI;AAApB,KACE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAEC,MADb;AAEE,IAAA,EAAE,qBAAmBP,MAAM,CAACI,UAAP,CAAkBI,EAFzC;AAGE,IAAA,KAAK,EAAEN,MAAM,CAACO;AAHhB,uBADF,CAFF,CADF;AAgBD,CAjBD","sourcesContent":["// import React from 'react';\n// import { FlatList, View, StyleSheet, Alert } from 'react-native';\n// import { Link } from 'react-router-native';\n// import { useMutation } from '@apollo/react-hooks';\n\nimport ReviewItem from './ReviewItem';\n// import Button from './Button';\n// import useAuthorizedUser from '../hooks/useAuthorizedUser';\n// import { DELETE_REVIEW } from '../graphql/mutations';\n\n// const styles = StyleSheet.create({\n//   reviewItemWrapper: {\n//     padding: 15,\n//     backgroundColor: 'white',\n//   },\n//   separator: {\n//     height: 10,\n//   },\n//   actionsContainer: {\n//     marginTop: 15,\n//     flexDirection: 'row',\n//   },\n//   actionButton: {\n//     flexGrow: 1,\n//     marginRight: 15,\n//   },\n//   lastActionButton: {\n//     marginRight: 0,\n//   },\n// });\n\n\n\nconst ReviewItemWithActions = ({ review, onDelete }) => {\n  return (\n    <View style={styles.reviewItemWrapper}>\n      <ReviewItem review={review} title={review.repository.fullName} />\n      <View style={styles.actionsContainer}>\n        <Link\n          component={Button}\n          to={`/repositories/${review.repository.id}`}\n          style={styles.actionButton}\n        >\n          View repository\n        </Link>\n\n\n      </View>\n    </View>\n  );\n};\n\n// const ItemSeparator = () => <View style={styles.separator} />;\n\n// const MyReviews = () => {\n//   const { authorizedUser, refetch } = useAuthorizedUser({\n//     includeReviews: true,\n//   });\n\n//   const [deleteReview] = useMutation(DELETE_REVIEW);\n//   const reviewEdges = authorizedUser ? authorizedUser.reviews.edges : [];\n//   const reviewNodes = reviewEdges.map(({ node }) => node);\n\n//   const onDelete = async (id) => {\n//     await deleteReview({ variables: { id } });\n//     refetch();\n//   };\n\n//   return (\n//     <FlatList\n//       data={reviewNodes}\n//       renderItem={({ item }) => (\n//         <ReviewItemWithActions\n//           review={item}\n//           onDelete={() => onDelete(item.id)}\n//         />\n//       )}\n//       keyExtractor={({ id }) => id}\n//       ItemSeparatorComponent={ItemSeparator}\n//     />\n//   );\n// };\n\n// export default MyReviews;"]},"metadata":{},"sourceType":"module"}