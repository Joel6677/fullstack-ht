{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Home.jsx\";\nimport React, { useContext, useRef, useEffect, useState } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useQuery } from '@apollo/client';\nimport { StateContext } from \"../state\";\nimport Text from \"./Text\";\nimport fileService from \"../services/files\";\nvar styles = StyleSheet.create({\n  home: {\n    backgroundColor: \"white\",\n    height: '100%',\n    width: '100%',\n    position: 'fixed',\n    zIndex: 49,\n    top: 60\n  },\n  photo: {\n    width: 50,\n    height: 50\n  }\n});\n\nvar Home = function Home() {\n  var homeAnim = useRef(new Animated.Value(0)).current;\n\n  var _useContext = useContext(StateContext),\n      state = _useContext.state;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      files = _useState2[0],\n      setFiles = _useState2[1];\n\n  var moveMenu = function moveMenu() {\n    Animated.spring(homeAnim, {\n      toValue: state.open ? 600 : 0\n    }).start();\n  };\n\n  useEffect(function () {\n    moveMenu();\n    fileService.getAll().then(function (files) {\n      return setFiles(files);\n    });\n  }, []);\n\n  var getImage = function getImage(filename) {\n    return _regeneratorRuntime.async(function getImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fileService.getImage(filename));\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, files.map(function (file) {\n    return React.createElement(React.Fragment, {\n      key: file._id\n    }, React.createElement(View, null, React.createElement(Image, {\n      style: styles.photo,\n      source: {\n        uri: \"http://localhost:3001/image/\" + file.filename\n      }\n    })));\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Home.jsx"],"names":["React","useContext","useRef","useEffect","useState","useQuery","StateContext","Text","fileService","styles","StyleSheet","create","home","backgroundColor","height","width","position","zIndex","top","photo","Home","homeAnim","Animated","Value","current","state","files","setFiles","moveMenu","spring","toValue","open","start","getAll","then","getImage","filename","map","file","_id","uri"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D;;;;;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,SAASC,YAAT;AACA,OAAOC,IAAP;AACA,OAAOC,WAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAE,OADb;AAEJC,IAAAA,MAAM,EAAE,MAFJ;AAGJC,IAAAA,KAAK,EAAE,MAHH;AAIJC,IAAAA,QAAQ,EAAE,OAJN;AAKJC,IAAAA,MAAM,EAAE,EALJ;AAMJC,IAAAA,GAAG,EAAE;AAND,GADyB;AAU/BC,EAAAA,KAAK,EAAE;AACLJ,IAAAA,KAAK,EAAE,EADF;AAELD,IAAAA,MAAM,EAAE;AAFH;AAVwB,CAAlB,CAAf;;AAiBA,IAAMM,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMC,QAAQ,GAAGnB,MAAM,CAAC,IAAIoB,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAA/C;;AADiB,oBAECvB,UAAU,CAACK,YAAD,CAFX;AAAA,MAETmB,KAFS,eAETA,KAFS;;AAAA,kBAGSrB,QAAQ,CAAC,EAAD,CAHjB;AAAA;AAAA,MAGVsB,KAHU;AAAA,MAGHC,QAHG;;AAKjB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAErBN,IAAAA,QAAQ,CAACO,MAAT,CACER,QADF,EAEE;AACES,MAAAA,OAAO,EAAEL,KAAK,CAACM,IAAN,GAAa,GAAb,GAAmB;AAD9B,KAFF,EAKEC,KALF;AAOD,GATD;;AAWA7B,EAAAA,SAAS,CAAC,YAAM;AACdyB,IAAAA,QAAQ;AACRpB,IAAAA,WAAW,CAACyB,MAAZ,GAAqBC,IAArB,CAA0B,UAAAR,KAAK;AAAA,aAC7BC,QAAQ,CAACD,KAAD,CADqB;AAAA,KAA/B;AAED,GAJQ,EAIP,EAJO,CAAT;;AAMA,MAAMS,QAAQ,GAAG,SAAXA,QAAW,CAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACF5B,WAAW,CAAC2B,QAAZ,CAAqBC,QAArB,CADE;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAIA,SACG,oBAAC,KAAD,CAAO,QAAP,QAYIV,KAAK,CAACW,GAAN,CAAU,UAACC,IAAD;AAAA,WACX,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEA,IAAI,CAACC;AAA1B,OACE,oBAAC,IAAD,QACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE9B,MAAM,CAACU,KADhB;AAEE,MAAA,MAAM,EAAE;AACNqB,QAAAA,GAAG,mCAAiCF,IAAI,CAACF;AADnC;AAFV,MADF,CADF,CADW;AAAA,GAAV,CAZJ,CADH;AA4BD,CAtDD;;AAwDA,eAAehB,IAAf","sourcesContent":["import React, { useContext, useRef, useEffect, useState } from 'react';\nimport { Animated, StyleSheet, View, Image } from 'react-native';\nimport { useQuery } from '@apollo/client'; \n\nimport { StateContext } from '../state';\nimport Text from './Text';\nimport fileService from '../services/files';\n\nconst styles = StyleSheet.create({\n  home: {\n    backgroundColor: \"white\",\n    height: '100%',\n    width: '100%',\n    position: 'fixed',\n    zIndex: 49,\n    top: 60\n    \n  },\n  photo: {\n    width: 50,\n    height: 50,\n  },\n});\n\n\nconst Home = () => {\n  const homeAnim = useRef(new Animated.Value(0)).current; \n  const { state } = useContext(StateContext);\n  const [files, setFiles] = useState([]);\n\n  const moveMenu = () => {\n\n    Animated.spring(\n      homeAnim,\n      {\n        toValue: state.open ? 600 : 0\n      }\n    ).start();\n  \n  };\n\n  useEffect(() => {\n    moveMenu();\n    fileService.getAll().then(files =>\n      setFiles(files));\n  },[]);\n\n  const getImage = async (filename) => {\n    return await fileService.getImage(filename);\n  };\n\n  return (\n     <React.Fragment>\n      {/* <Animated.View style={[styles.home, {\n        transform: [{\n          translateX: homeAnim\n        }]\n      }]}>\n        <View>\n          <Text>Homepage</Text>\n        </View>\n      </Animated.View>  */}\n      \n      \n       { files.map((file) => \n        <React.Fragment key={file._id}>\n          <View>\n            <Image\n              style={styles.photo}\n              source={{\n                uri: `http://localhost:3001/image/${file.filename}`\n              }} />\n          </View>\n        </React.Fragment>\n        )}\n      \n     </React.Fragment>\n\n  );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}