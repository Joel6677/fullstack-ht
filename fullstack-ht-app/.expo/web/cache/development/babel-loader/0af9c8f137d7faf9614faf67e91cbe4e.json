{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/CreateReview.jsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button } from 'react-native-paper';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory, useParams } from 'react-router-native';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport Moment from 'moment';\nimport FormikTextInput from \"./FormikTextInput\";\nimport Text from \"./Text\";\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    zIndex: 1\n  },\n  fieldContainer: {\n    marginBottom: 15\n  },\n  headingContainer: {\n    alignItems: 'center',\n    marginBottom: 30\n  }\n});\nvar initialValues = {\n  nosing: '',\n  taste: '',\n  finish: '',\n  rating: '',\n  comment: ''\n};\nvar validationSchema = yup.object().shape({\n  nosing: yup.string().required('Nosing is required'),\n  taste: yup.string().required('Taste is required'),\n  finish: yup.string().required('Finish is required'),\n  rating: yup.number('Rating must be a number').min(0, 'Rating must be greater or equal to 0').max(100, 'Rating must be less or equal to 100').required('Rating is required'),\n  comment: yup.string()\n});\n\nvar CreateReviewForm = function CreateReviewForm(_ref) {\n  var onSubmit = _ref.onSubmit;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.fieldContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(FormikTextInput, {\n    placeholder: \"Nosing\",\n    name: \"nosing\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  })), React.createElement(View, {\n    style: styles.fieldContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(FormikTextInput, {\n    placeholder: \"Taste\",\n    name: \"taste\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  })), React.createElement(View, {\n    style: styles.fieldContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(FormikTextInput, {\n    placeholder: \"Finish\",\n    name: \"finish\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  })), React.createElement(View, {\n    style: styles.fieldContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, React.createElement(FormikTextInput, {\n    placeholder: \"Rating between 0 and 100\",\n    keyboardType: \"numeric\",\n    name: \"rating\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  })), React.createElement(View, {\n    style: styles.fieldContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, React.createElement(FormikTextInput, {\n    placeholder: \"Comment\",\n    name: \"comment\",\n    multiline: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  })), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, \"Create a review\"));\n};\n\nvar CreateReview = function CreateReview() {\n  var history = useHistory();\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imgURL = _useState4[0],\n      setImgURL = _useState4[1];\n\n  useEffect(function () {\n    firebase.firestore().collection('images').doc(firebase.auth().currentUser.uid).collection('userImages').doc('profilePicture').get().then(function (doc) {\n      setImgURL(doc.data().downloadURL);\n    });\n    firebase.firestore().collection('userinfo').doc(firebase.auth().currentUser.uid).get().then(function (doc) {\n      setName(doc.data().name);\n    });\n  }, []);\n\n  var onSubmit = function onSubmit(values) {\n    var nosing, taste, finish, rating, comment;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            nosing = values.nosing, taste = values.taste, finish = values.finish, rating = values.rating, comment = values.comment;\n            firebase.auth().currentUser && firebase.firestore().collection('whiskies').doc(id).collection('reviews').doc(firebase.auth().currentUser.uid).set({\n              name: name,\n              imgURL: imgURL,\n              nosing: nosing,\n              taste: taste,\n              finish: finish,\n              rating: rating,\n              comment: comment,\n              time: Moment(new Date()).calendar()\n            }).catch(function (error) {\n              console.log('Error: ', error);\n            });\n            firebase.auth().currentUser && firebase.firestore().collection('reviews').doc(firebase.auth().currentUser.uid).collection('userReviews').doc(id).set({\n              name: name,\n              imgURL: imgURL,\n              nosing: nosing,\n              taste: taste,\n              finish: finish,\n              rating: rating,\n              comment: comment,\n              time: Moment(new Date()).calendar()\n            }).catch(function (error) {\n              console.log('Error: ', error);\n            });\n            firebase.firestore().collection('whiskies').doc(id).get().then(function (doc) {\n              console.log('rating', doc.data().rating);\n              console.log('rating got: ', rating);\n              console.log('reviewCount: ', doc.data().reviewCount);\n              console.log('average rating: ', (parseInt(doc.data().rating, 10) + parseInt(rating, 10)) / parseInt(doc.data().reviewCount + 1, 10));\n              firebase.firestore().collection('whiskies').doc(id).update({\n                reviewCount: doc.data().reviewCount + 1,\n                rating: (parseInt(doc.data().rating, 10) + parseInt(rating, 10)) / parseInt(doc.data().reviewCount + 1, 10)\n              });\n            }).catch(function (error) {\n              console.log('Error: ', error);\n            });\n            history.push('/');\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.headingContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    color: \"primary\",\n    fontSize: \"heading\",\n    fontWeight: \"bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, \"Create review\")), React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validationSchema: validationSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit;\n    return React.createElement(CreateReviewForm, {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 32\n      }\n    });\n  }));\n};\n\nexport default CreateReview;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/CreateReview.jsx"],"names":["React","useEffect","useState","Button","Formik","yup","useHistory","useParams","firebase","Moment","FormikTextInput","Text","styles","StyleSheet","create","container","justifyContent","width","height","position","zIndex","fieldContainer","marginBottom","headingContainer","alignItems","initialValues","nosing","taste","finish","rating","comment","validationSchema","object","shape","string","required","number","min","max","CreateReviewForm","onSubmit","CreateReview","history","id","name","setName","imgURL","setImgURL","firestore","collection","doc","auth","currentUser","uid","get","then","data","downloadURL","values","set","time","Date","calendar","catch","error","console","log","reviewCount","parseInt","update","push","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory, useParams } from 'react-router-native';\n// import * as firebase from 'firebase';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport Moment from 'moment';\nimport FormikTextInput from './FormikTextInput';\n\nimport Text from './Text';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    zIndex: 1,\n  },\n  fieldContainer: {\n    marginBottom: 15,\n  },\n  headingContainer: {\n    alignItems: 'center',\n    marginBottom: 30,\n  },\n});\n\nconst initialValues = {\n  nosing: '',\n  taste: '',\n  finish: '',\n  rating: '',\n  comment: '',\n};\n\nconst validationSchema = yup.object().shape({\n  nosing: yup.string().required('Nosing is required'),\n  taste: yup.string().required('Taste is required'),\n  finish: yup.string().required('Finish is required'),\n  rating: yup\n    .number('Rating must be a number')\n    .min(0, 'Rating must be greater or equal to 0')\n    .max(100, 'Rating must be less or equal to 100')\n    .required('Rating is required'),\n  comment: yup.string(),\n});\n\nconst CreateReviewForm = ({ onSubmit }) => (\n  <View>\n    <View style={styles.fieldContainer}>\n      <FormikTextInput placeholder=\"Nosing\" name=\"nosing\" />\n    </View>\n    <View style={styles.fieldContainer}>\n      <FormikTextInput placeholder=\"Taste\" name=\"taste\" />\n    </View>\n    <View style={styles.fieldContainer}>\n      <FormikTextInput placeholder=\"Finish\" name=\"finish\" />\n    </View>\n    <View style={styles.fieldContainer}>\n      <FormikTextInput\n        placeholder=\"Rating between 0 and 100\"\n        keyboardType=\"numeric\"\n        name=\"rating\"\n      />\n    </View>\n    <View style={styles.fieldContainer}>\n      <FormikTextInput placeholder=\"Comment\" name=\"comment\" multiline />\n    </View>\n\n    <Button mode=\"outlined\" onPress={onSubmit}>Create a review</Button>\n  </View>\n);\n\nconst CreateReview = () => {\n  const history = useHistory();\n  const { id } = useParams();\n  const [name, setName] = useState();\n  const [imgURL, setImgURL] = useState();\n\n  useEffect(() => {\n    firebase.firestore().collection('images').doc(firebase.auth().currentUser.uid).collection('userImages')\n      .doc('profilePicture')\n      .get()\n      .then((doc) => { setImgURL(doc.data().downloadURL); });\n\n    firebase.firestore().collection('userinfo').doc(firebase.auth().currentUser.uid)\n      .get()\n      .then((doc) => { setName(doc.data().name); });\n  }, []);\n\n  const onSubmit = async (values) => {\n    const {\n      nosing, taste, finish, rating, comment,\n    } = values;\n\n    { firebase.auth().currentUser && firebase.firestore().collection('whiskies').doc(id).collection('reviews')\n      .doc(firebase.auth().currentUser.uid)\n      .set({\n        name,\n        imgURL,\n        nosing,\n        taste,\n        finish,\n        rating,\n        comment,\n        time: Moment(new Date()).calendar(),\n      })\n      .catch((error) => {\n        console.log('Error: ', error);\n      }); }\n\n    { firebase.auth().currentUser && firebase.firestore().collection('reviews').doc(\n      firebase.auth().currentUser.uid,\n    ).collection('userReviews')\n      .doc(id)\n      .set({\n        name,\n        imgURL,\n        nosing,\n        taste,\n        finish,\n        rating,\n        comment,\n        time: Moment(new Date()).calendar(),\n      })\n      .catch((error) => {\n        console.log('Error: ', error);\n      }); }\n\n    firebase.firestore().collection('whiskies').doc(id).get()\n      .then((doc) => {\n        console.log('rating', doc.data().rating);\n        console.log('rating got: ', rating);\n        console.log('reviewCount: ', doc.data().reviewCount);\n        console.log('average rating: ', (parseInt(doc.data().rating, 10) + parseInt(rating, 10)) / parseInt(doc.data().reviewCount + 1, 10));\n        firebase.firestore().collection('whiskies').doc(id).update({\n          reviewCount: doc.data().reviewCount + 1,\n          rating: (parseInt(doc.data().rating, 10) + parseInt(rating, 10))\n          / parseInt(doc.data().reviewCount + 1, 10),\n        });\n      })\n      .catch((error) => {\n        console.log('Error: ', error);\n      });\n\n    history.push('/');\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.headingContainer}>\n        <Text color=\"primary\" fontSize=\"heading\" fontWeight=\"bold\">Create review</Text>\n      </View>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {({ handleSubmit }) => <CreateReviewForm onSubmit={handleSubmit} />}\n      </Formik>\n    </View>\n  );\n};\n\nexport default CreateReview;\n"]},"metadata":{},"sourceType":"module"}