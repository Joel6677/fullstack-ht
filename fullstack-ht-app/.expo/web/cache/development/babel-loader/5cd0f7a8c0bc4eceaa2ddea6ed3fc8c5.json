{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport Calendar from \"./Calendar\";\nimport AnimatedCrossView from \"./AnimatedCrossView\";\nimport DatePickerModalHeader from \"./DatePickerModalHeader\";\nimport DatePickerModalContentHeader from \"./DatePickerModalContentHeader\";\nimport CalendarEdit from \"./CalendarEdit\";\nimport DatePickerModalHeaderBackground from \"./DatePickerModalHeaderBackground\";\nexport function DatePickerModalContent(props) {\n  var mode = props.mode,\n      onChange = props.onChange,\n      onConfirm = props.onConfirm,\n      onDismiss = props.onDismiss,\n      disableSafeTop = props.disableSafeTop,\n      disableWeekDays = props.disableWeekDays,\n      locale = props.locale;\n  var anyProps = props;\n\n  var _React$useState = React.useState({\n    date: anyProps.date,\n    startDate: anyProps.startDate,\n    endDate: anyProps.endDate,\n    excludedDates: anyProps.excludedDates,\n    dates: anyProps.dates\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  React.useEffect(function () {\n    setState({\n      date: anyProps.date,\n      startDate: anyProps.startDate,\n      endDate: anyProps.endDate,\n      excludedDates: anyProps.excludedDates,\n      dates: anyProps.dates\n    });\n  }, [anyProps.date, anyProps.startDate, anyProps.endDate, anyProps.excludedDates, anyProps.dates]);\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      collapsed = _React$useState4[0],\n      setCollapsed = _React$useState4[1];\n\n  var onInnerChange = React.useCallback(function (params) {\n    onChange && onChange(params);\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), params);\n    });\n  }, [onChange, setState]);\n  var onInnerConfirm = React.useCallback(function () {\n    if (mode === 'single') {\n      ;\n      onConfirm({\n        date: state.date\n      });\n    } else if (mode === 'range') {\n      ;\n      onConfirm({\n        startDate: state.startDate,\n        endDate: state.endDate\n      });\n    } else if (mode === 'excludeInRange') {\n      ;\n      onConfirm({\n        excludedDates: state.excludedDates\n      });\n    } else if (mode === 'multiple') {\n      ;\n      onConfirm({\n        dates: state.dates || []\n      });\n    }\n  }, [state, mode, onConfirm]);\n  var onToggleCollapse = React.useCallback(function () {\n    setCollapsed(function (prev) {\n      return !prev;\n    });\n  }, [setCollapsed]);\n  return React.createElement(React.Fragment, null, React.createElement(DatePickerModalHeaderBackground, null, React.createElement(DatePickerModalHeader, {\n    onSave: onInnerConfirm,\n    onDismiss: onDismiss,\n    saveLabel: props.saveLabel,\n    disableSafeTop: disableSafeTop\n  }), React.createElement(DatePickerModalContentHeader, {\n    state: state,\n    mode: mode,\n    collapsed: collapsed,\n    onToggle: onToggleCollapse,\n    headerSeparator: props.headerSeparator,\n    emptyLabel: props.emptyLabel,\n    label: props.label,\n    moreLabel: props.moreLabel,\n    startLabel: props.startLabel,\n    endLabel: props.endLabel,\n    locale: locale\n  })), React.createElement(AnimatedCrossView, {\n    collapsed: collapsed,\n    calendar: React.createElement(Calendar, {\n      locale: locale,\n      mode: mode,\n      startDate: state.startDate,\n      endDate: state.endDate,\n      date: state.date,\n      excludedDates: state.excludedDates,\n      onChange: onInnerChange,\n      disableWeekDays: disableWeekDays,\n      dates: state.dates\n    }),\n    calendarEdit: React.createElement(CalendarEdit, {\n      mode: mode,\n      state: state,\n      label: props.label,\n      startLabel: props.startLabel,\n      endLabel: props.endLabel,\n      collapsed: collapsed,\n      onChange: onInnerChange\n    })\n  }));\n}\nexport default React.memo(DatePickerModalContent);","map":{"version":3,"sources":["DatePickerModalContent.tsx"],"names":["locale","anyProps","date","startDate","endDate","excludedDates","dates","React","setState","onInnerChange","params","onChange","prev","onInnerConfirm","mode","onConfirm","state","onToggleCollapse","setCollapsed","props","disableSafeTop"],"mappings":"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","sourcesContent":["import * as React from 'react'\n\nimport Calendar, {\n  BaseCalendarProps,\n  CalendarDate,\n  ExcludeInRangeChange,\n  MultiChange,\n  MultiConfirm,\n  RangeChange,\n  SingleChange,\n} from './Calendar'\n\nimport AnimatedCrossView from './AnimatedCrossView'\n\nimport DatePickerModalHeader from './DatePickerModalHeader'\nimport DatePickerModalContentHeader, {\n  HeaderPickProps,\n} from './DatePickerModalContentHeader'\nimport CalendarEdit from './CalendarEdit'\nimport DatePickerModalHeaderBackground from './DatePickerModalHeaderBackground'\n\nexport type LocalState = {\n  startDate: CalendarDate\n  endDate: CalendarDate\n  date: CalendarDate\n  excludedDates: Date[]\n  dates: CalendarDate[]\n}\n\ninterface DatePickerModalContentBaseProps {\n  inputFormat?: string\n  onDismiss: () => any\n  disableSafeTop?: boolean\n}\n\nexport interface DatePickerModalContentRangeProps\n  extends HeaderPickProps,\n    BaseCalendarProps,\n    DatePickerModalContentBaseProps {\n  mode: 'range'\n  startDate: Date | null | undefined\n  endDate: Date | null | undefined\n  onChange?: RangeChange\n  onConfirm: RangeChange\n}\n\nexport interface DatePickerModalContentSingleProps\n  extends HeaderPickProps,\n    BaseCalendarProps,\n    DatePickerModalContentBaseProps {\n  mode: 'single'\n  date?: Date | null | undefined\n  onChange?: SingleChange\n  onConfirm: SingleChange\n}\n\nexport interface DatePickerModalContentMultiProps\n  extends HeaderPickProps,\n    BaseCalendarProps,\n    DatePickerModalContentBaseProps {\n  mode: 'multiple'\n  dates?: Date[] | null | undefined\n  onChange?: MultiChange\n  onConfirm: MultiConfirm\n}\n\nexport interface DatePickerModalContentExcludeInRangeProps\n  extends HeaderPickProps,\n    BaseCalendarProps,\n    DatePickerModalContentBaseProps {\n  mode: 'excludeInRange'\n  startDate: Date\n  endDate: Date\n  excludedDates: Date[] | undefined\n  onChange?: ExcludeInRangeChange\n  onConfirm: ExcludeInRangeChange\n}\n\nexport function DatePickerModalContent(\n  props:\n    | DatePickerModalContentRangeProps\n    | DatePickerModalContentSingleProps\n    | DatePickerModalContentExcludeInRangeProps\n    | DatePickerModalContentMultiProps\n) {\n  const {\n    mode,\n    onChange,\n    onConfirm,\n    onDismiss,\n    disableSafeTop,\n    disableWeekDays,\n    locale,\n  } = props\n\n  const anyProps = props as any\n\n  // use local state to add only onConfirm state changes\n  const [state, setState] = React.useState<LocalState>({\n    date: anyProps.date,\n    startDate: anyProps.startDate,\n    endDate: anyProps.endDate,\n    excludedDates: anyProps.excludedDates,\n    dates: anyProps.dates,\n  })\n\n  // update local state if changed from outside or if modal is opened\n  React.useEffect(() => {\n    setState({\n      date: anyProps.date,\n      startDate: anyProps.startDate,\n      endDate: anyProps.endDate,\n      excludedDates: anyProps.excludedDates,\n      dates: anyProps.dates,\n    })\n  }, [\n    anyProps.date,\n    anyProps.startDate,\n    anyProps.endDate,\n    anyProps.excludedDates,\n    anyProps.dates,\n  ])\n\n  const [collapsed, setCollapsed] = React.useState<boolean>(true)\n\n  const onInnerChange = React.useCallback(\n    (params) => {\n      onChange && onChange(params)\n      setState((prev) => ({ ...prev, ...params }))\n    },\n    [onChange, setState]\n  )\n\n  const onInnerConfirm = React.useCallback(() => {\n    if (mode === 'single') {\n      ;(onConfirm as DatePickerModalContentSingleProps['onConfirm'])({\n        date: state.date,\n      })\n    } else if (mode === 'range') {\n      ;(onConfirm as DatePickerModalContentRangeProps['onConfirm'])({\n        startDate: state.startDate,\n        endDate: state.endDate,\n      })\n    } else if (mode === 'excludeInRange') {\n      ;(onConfirm as DatePickerModalContentExcludeInRangeProps['onConfirm'])({\n        excludedDates: state.excludedDates,\n      })\n    } else if (mode === 'multiple') {\n      ;(onConfirm as DatePickerModalContentMultiProps['onConfirm'])({\n        dates: state.dates || [],\n      })\n    }\n  }, [state, mode, onConfirm])\n\n  const onToggleCollapse = React.useCallback(() => {\n    setCollapsed((prev) => !prev)\n  }, [setCollapsed])\n\n  return (\n    <>\n      <DatePickerModalHeaderBackground>\n        <DatePickerModalHeader\n          onSave={onInnerConfirm}\n          onDismiss={onDismiss}\n          saveLabel={props.saveLabel}\n          disableSafeTop={disableSafeTop}\n        />\n        <DatePickerModalContentHeader\n          state={state}\n          mode={mode}\n          collapsed={collapsed}\n          onToggle={onToggleCollapse}\n          headerSeparator={props.headerSeparator}\n          emptyLabel={props.emptyLabel}\n          label={props.label}\n          moreLabel={props.moreLabel}\n          startLabel={props.startLabel}\n          endLabel={props.endLabel}\n          locale={locale}\n        />\n      </DatePickerModalHeaderBackground>\n\n      <AnimatedCrossView\n        collapsed={collapsed}\n        calendar={\n          <Calendar\n            locale={locale}\n            mode={mode}\n            startDate={state.startDate}\n            endDate={state.endDate}\n            date={state.date}\n            excludedDates={state.excludedDates}\n            onChange={onInnerChange}\n            disableWeekDays={disableWeekDays}\n            dates={state.dates}\n          />\n        }\n        calendarEdit={\n          <CalendarEdit\n            mode={mode}\n            state={state}\n            label={props.label}\n            startLabel={props.startLabel}\n            endLabel={props.endLabel}\n            collapsed={collapsed}\n            onChange={onInnerChange}\n          />\n        }\n      />\n    </>\n  )\n}\n\nexport default React.memo(DatePickerModalContent)\n"]},"metadata":{},"sourceType":"module"}