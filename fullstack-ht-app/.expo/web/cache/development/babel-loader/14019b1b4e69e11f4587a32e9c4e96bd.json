{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SideMenu.jsx\";\nimport React, { useContext, useEffect, useRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport useResizeAware from 'react-resize-aware';\nimport { StateContext } from \"../state\";\nimport Button from \"./Button\";\nimport theme from \"../theme\";\nvar styles = StyleSheet.create({\n  sidebar: {\n    width: 600,\n    height: '100%',\n    backgroundColor: theme.colors.primary,\n    zIndex: 4,\n    position: 'absolute'\n  },\n  button: {\n    padding: 10\n  },\n  closeMenu: {\n    backgroundColor: 'grey',\n    width: '100%',\n    height: '100%'\n  }\n});\n\nvar SideMenu = function SideMenu() {\n  var _useResizeAware = useResizeAware(),\n      _useResizeAware2 = _slicedToArray(_useResizeAware, 2),\n      resizeListener = _useResizeAware2[0],\n      sizes = _useResizeAware2[1];\n\n  var toggleAnim = useRef(new Animated.Value(-600)).current;\n  var fadeAnim = useRef(new Animated.Value(0)).current;\n\n  var _useContext = useContext(StateContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  console.log(sizes);\n\n  var moveMenu = function moveMenu() {\n    Animated.timing(toggleAnim, {\n      toValue: state.open ? 0 : -600,\n      duration: 300\n    }).start();\n  };\n\n  var fade = function fade() {\n    Animated.timing(fadeAnim, {\n      toValue: state.open ? 0.25 : 0,\n      duration: 300\n    }).start();\n  };\n\n  useEffect(function () {\n    moveMenu();\n    fade();\n  }, [state.open]);\n  return React.createElement(React.Fragment, null, resizeListener, React.createElement(Animated.View, {\n    style: [styles.sidebar, {\n      transform: [{\n        translateX: toggleAnim\n      }]\n    }]\n  }, React.createElement(View, {\n    style: styles.button\n  }, React.createElement(Text, null, \"User name\"), React.createElement(Text, null, \" Create new program \"), React.createElement(Text, null, \" Search for programs \"))), React.createElement(Animated.View, {\n    style: [styles.closeMenu, {\n      opacity: fadeAnim,\n      zIndex: state.open ? 3 : 0\n    }]\n  }, state.open && React.createElement(Button, {\n    style: {\n      height: \"100%\"\n    },\n    onPress: function onPress() {\n      return dispatch({\n        type: \"SET_OPEN\",\n        payload: !state.open\n      });\n    }\n  })));\n};\n\nexport default SideMenu;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SideMenu.jsx"],"names":["React","useContext","useEffect","useRef","useResizeAware","StateContext","Button","theme","styles","StyleSheet","create","sidebar","width","height","backgroundColor","colors","primary","zIndex","position","button","padding","closeMenu","SideMenu","resizeListener","sizes","toggleAnim","Animated","Value","current","fadeAnim","state","dispatch","console","log","moveMenu","timing","toValue","open","duration","start","fade","transform","translateX","opacity","type","payload"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef } from 'react';\nimport { Animated, StyleSheet, View, Text } from 'react-native';\nimport useResizeAware from 'react-resize-aware';\n\nimport { StateContext } from '../state';\nimport Button from './Button';\nimport theme from '../theme';\n\nconst styles = StyleSheet.create({ \n  sidebar: {\n    // width: '80%',\n    width: 600,\n    height: '100%', \n    backgroundColor: theme.colors.primary,\n    zIndex: 4,\n    position: 'absolute'\n  },\n  button: {\n    padding: 10,\n  },\n  closeMenu: {\n    backgroundColor: 'grey',\n    width: '100%',\n    height: '100%',\n  }\n});\n\nconst SideMenu = () => {\n  \n  const [resizeListener, sizes] = useResizeAware();\n  const toggleAnim = useRef(new Animated.Value(-600)).current; \n  const fadeAnim = useRef(new Animated.Value(0)).current ;\n  const { state, dispatch } = useContext(StateContext);\n\n  console.log(sizes);\n\n  \n\n  const moveMenu = () => {\n\n    Animated.timing(\n      toggleAnim,\n      {\n        // toValue: state.open ? 0 : -(sizes.width),\n        toValue: state.open ? 0 : -600,\n        duration: 300\n      }\n    ).start();\n  \n  };\n  \n  const fade = () => {\n    Animated.timing(\n      fadeAnim,\n      {\n        toValue: state.open ? 0.25 : 0,\n        duration: 300,\n      }\n    ).start();\n  };\n\n  useEffect(() => {\n    moveMenu();\n    fade();\n  },[state.open]);\n\n  return (\n    <>\n      {resizeListener}\n      <Animated.View style={[styles.sidebar, {\n        transform: [{\n          translateX: toggleAnim\n        }]\n      }]}>\n        <View style={styles.button}>\n          <Text>User name</Text>\n          <Text> Create new program </Text>\n          <Text> Search for programs </Text>\n        </View>\n      </Animated.View>\n      <Animated.View\n        style={[styles.closeMenu, {opacity: fadeAnim, zIndex: state.open ? 3 : 0} ]}\n      >\n          {state.open &&\n          <Button style={{height: \"100%\"}} onPress={() => dispatch({type: \"SET_OPEN\", payload: !state.open})} ></Button> }\n     \n      </Animated.View>\n    </>\n  );\n};\n\nexport default SideMenu;"]},"metadata":{},"sourceType":"module"}