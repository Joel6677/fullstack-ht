{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SingleWhisky.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-native';\nimport { useHistory } from 'react-router-native';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Divider } from 'react-native-paper';\nimport WhiskyItemInfo from \"./WhiskyItemInfo\";\nimport ReviewItem from \"./ReviewItem\";\nimport * as firebase from 'firebase';\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    width: '100%',\n    paddingTop: 80,\n    paddingBottom: 63,\n    position: 'absolute',\n    zIndex: 1\n  },\n  separator: {\n    height: 5\n  }\n});\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator\n  });\n};\n\nvar WhiskyInfo = function WhiskyInfo(_ref) {\n  var whisky = _ref.whisky,\n      id = _ref.id;\n  return React.createElement(React.Fragment, null, React.createElement(WhiskyItemInfo, {\n    whisky: whisky,\n    id: id\n  }), React.createElement(ItemSeparator, null));\n};\n\nvar SingleWhisky = function SingleWhisky() {\n  var history = useHistory();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      reviews = _useState2[0],\n      setReviews = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      whisky = _useState4[0],\n      setWhisky = _useState4[1];\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  useEffect(function () {\n    firebase.firestore().collection('whiskies').doc(id).collection('reviews').get().then(function (querySnapshot) {\n      var posts = querySnapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setReviews(posts);\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n    firebase.firestore().collection('whiskies').doc(id).get().then(function (doc) {\n      setWhisky(doc.data());\n    }).catch(function (error) {\n      console.log(\"Error getting document: \", error);\n    });\n  }, [history]);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(FlatList, {\n    data: reviews,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(ReviewItem, {\n        review: item\n      });\n    },\n    keyExtractor: function keyExtractor(_ref3) {\n      var id = _ref3.id;\n      return id;\n    },\n    ListHeaderComponent: function ListHeaderComponent() {\n      return React.createElement(WhiskyInfo, {\n        whisky: whisky,\n        id: id\n      });\n    },\n    ItemSeparatorComponent: ItemSeparator\n  }));\n};\n\nexport default SingleWhisky;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SingleWhisky.jsx"],"names":["React","useState","useEffect","useParams","useHistory","Divider","WhiskyItemInfo","ReviewItem","firebase","styles","StyleSheet","create","container","height","width","paddingTop","paddingBottom","position","zIndex","separator","ItemSeparator","WhiskyInfo","whisky","id","SingleWhisky","history","reviews","setReviews","setWhisky","firestore","collection","doc","get","then","querySnapshot","posts","docs","map","data","catch","error","console","log","item"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useParams } from 'react-router-native';\nimport { useHistory } from 'react-router-native';\nimport { FlatList, StyleSheet, View } from 'react-native';\nimport { Divider } from 'react-native-paper';\n\nimport WhiskyItemInfo from './WhiskyItemInfo';\nimport ReviewItem from './ReviewItem';\nimport * as firebase from 'firebase';\n\nconst styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    width: '100%',\n    paddingTop: 80,\n    paddingBottom: 63,\n    position: 'absolute',\n    zIndex: 1,\n  },  \n  separator: {\n    height: 5,\n  },\n});\n\nconst ItemSeparator = () => <View style={styles.separator} />;\n\nconst WhiskyInfo = ({ whisky, id }) => {\n  return (\n    <>\n      <WhiskyItemInfo whisky={whisky} id={id}/>\n      <ItemSeparator />\n    </>\n  );\n};\n\nconst SingleWhisky = () => {\n\n  const history = useHistory();\n  const [reviews, setReviews] = useState('');\n  const [whisky, setWhisky] = useState('');\n\n  const { id } = useParams();\n\n  useEffect(() => {\n\n    firebase.firestore()\n      .collection('whiskies')\n      .doc(id)\n      .collection('reviews')\n      .get()\n      .then((querySnapshot) => {\n        let posts = querySnapshot.docs.map(doc => {\n          const data = doc.data();\n          const id = doc.id;\n          return { id, ...data };\n        });\n        setReviews(posts);\n      })\n      .catch((error) => {\n        console.log(\"Error getting documents: \", error);\n      });\n\n    firebase.firestore()\n      .collection('whiskies')\n      .doc(id)\n      .get()\n      .then((doc) => {\n        setWhisky(doc.data());\n      })\n      .catch((error) => {\n        console.log(\"Error getting document: \", error);\n      });\n}, [history]);\n\n\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={reviews}\n        renderItem={({ item }) => (\n            <ReviewItem review={item} />    \n        )}\n        keyExtractor={({ id }) => id}\n        ListHeaderComponent={() =>\n          <WhiskyInfo whisky={whisky} id={id} />\n        }\n        ItemSeparatorComponent={ItemSeparator}\n      />\n    </View>\n  );\n};\n\nexport default SingleWhisky;\n"]},"metadata":{},"sourceType":"module"}