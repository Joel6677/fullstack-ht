{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UploadWhisky.jsx\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-native';\nimport uuid from 'uuid';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Button } from 'react-native-paper';\nimport Text from \"./Text\";\nimport FormikTextInput from \"./FormikTextInput\";\nimport * as firebase from 'firebase';\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1\n  },\n  fieldContainer: {\n    margin: 5\n  },\n  heading: {\n    alignItems: 'center',\n    marginBottom: 30\n  },\n  buttoncontainer: {}\n});\nvar initialValues = {\n  name: '',\n  distillery: '',\n  country: '',\n  type: '',\n  age: '',\n  abv: '',\n  bottlesize: ''\n};\nvar validationSchema = yup.object().shape({\n  name: yup.string().required('Name is required'),\n  distillery: yup.string().required('Distillery is required'),\n  country: yup.string().required('Country is required'),\n  type: yup.string().required('Type is required'),\n  age: yup.number().required('Age is required'),\n  abv: yup.number().required('Abv is required'),\n  bottlesize: yup.number().required('Bottlesize is required')\n});\n\nvar UploadWhisky = function UploadWhisky() {\n  var history = useHistory();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var onToggleSnackBar = function onToggleSnackBar() {\n    return setVisible(!visible);\n  };\n\n  var addImageToFirestore = function addImageToFirestore(downloadURL, whiskyID) {\n    return _regeneratorRuntime.async(function addImageToFirestore$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('whiskyID: ', whiskyID);\n            firebase.firestore().collection('whiskyImages').doc(whiskyID).set({\n              downloadURL: downloadURL\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickProfilePicFromLibrary = function pickProfilePicFromLibrary() {\n    var result, whiskyID;\n    return _regeneratorRuntime.async(function pickProfilePicFromLibrary$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            whiskyID = uuid.v4();\n\n            if (!result.cancelled) {\n              uploadImage(result.uri, whiskyID);\n              setImage(result.uri);\n              onToggleSnackBar();\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadImage = function uploadImage(uri, whiskyID) {\n    var response, blob, ref, uploadTask;\n    return _regeneratorRuntime.async(function uploadImage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log('whiskyId upload image: ', whiskyID);\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 3:\n            response = _context3.sent;\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 6:\n            blob = _context3.sent;\n            ref = firebase.storage().ref().child(\"images/whiskies/\" + whiskyID);\n            uploadTask = ref.put(blob);\n            uploadTask.on('state_changed', function (snapshot) {\n              var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n              console.log('Upload is ' + progress + '% done');\n\n              switch (snapshot.state) {\n                case firebase.storage.TaskState.PAUSED:\n                  console.log('Upload is paused');\n                  break;\n\n                case firebase.storage.TaskState.RUNNING:\n                  console.log('Upload is running');\n                  break;\n              }\n            }, function (error) {\n              switch (error.code) {\n                case 'storage/unauthorized':\n                  console.log(error.code);\n                  break;\n\n                case 'storage/canceled':\n                  console.log(error.code);\n                  break;\n\n                case 'storage/unknown':\n                  console.log(error.code);\n                  break;\n              }\n            }, function () {\n              uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                console.log('File available at', downloadURL);\n                addImageToFirestore(downloadURL, whiskyID);\n              });\n            });\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var UploadWhiskyForm = function UploadWhiskyForm(_ref) {\n    var onSubmit = _ref.onSubmit;\n    return React.createElement(View, null, React.createElement(View, {\n      style: styles.fieldContainer\n    }, React.createElement(FormikTextInput, {\n      name: \"name\",\n      placeholder: \"Name\"\n    })), React.createElement(View, {\n      style: styles.fieldContainer\n    }, React.createElement(FormikTextInput, {\n      name: \"distillery\",\n      placeholder: \"Distillery\"\n    })), React.createElement(View, {\n      style: styles.fieldContainer\n    }, React.createElement(FormikTextInput, {\n      name: \"country\",\n      placeholder: \"Country\"\n    })), React.createElement(View, {\n      style: styles.fieldContainer\n    }, React.createElement(FormikTextInput, {\n      name: \"type\",\n      placeholder: \"Type\"\n    })), React.createElement(View, {\n      style: styles.fieldContainer\n    }, React.createElement(FormikTextInput, {\n      name: \"age\",\n      keyboardType: \"numeric\",\n      placeholder: \"Age\"\n    })), React.createElement(View, {\n      style: styles.fieldContainer\n    }, React.createElement(FormikTextInput, {\n      name: \"abv\",\n      keyboardType: \"numeric\",\n      placeholder: \"Abv\"\n    })), React.createElement(View, {\n      style: styles.fieldContainer\n    }, React.createElement(FormikTextInput, {\n      name: \"bottlesize\",\n      keyboardType: \"numeric\",\n      placeholder: \"Bottlesize\"\n    })), React.createElement(Button, {\n      icon: \"camera\",\n      mode: \"outlined\",\n      onPress: pickProfilePicFromLibrary,\n      style: styles.buttoncontainer\n    }, \"Upload image\"), React.createElement(Button, {\n      icon: 'bottle-wine',\n      style: styles.fieldContainer,\n      mode: \"outlined\",\n      onPress: onSubmit\n    }, \"Upload whisky\"));\n  };\n\n  var onSubmit = function onSubmit(values) {\n    var name, distillery, country, type, age, abv, bottlesize;\n    return _regeneratorRuntime.async(function onSubmit$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            name = values.name, distillery = values.distillery, country = values.country, type = values.type, age = values.age, abv = values.abv, bottlesize = values.bottlesize;\n            firebase.firestore().collection('whiskies').add({\n              name: name,\n              distillery: distillery,\n              country: country,\n              type: type,\n              age: age,\n              abv: abv,\n              bottlesize: bottlesize\n            });\n            history.push('/');\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(ScrollView, null, React.createElement(View, {\n    style: styles.heading\n  }, React.createElement(Text, {\n    color: 'primary',\n    fontSize: 'heading',\n    fontWeight: 'bold'\n  }, \"Upload Whisky\")), React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validationSchema: validationSchema\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit;\n    return React.createElement(UploadWhiskyForm, {\n      onSubmit: handleSubmit\n    });\n  }), image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 100,\n      height: 100\n    }\n  })));\n};\n\nexport default UploadWhisky;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UploadWhisky.jsx"],"names":["React","useState","Formik","yup","useHistory","uuid","ImagePicker","Button","Text","FormikTextInput","firebase","styles","StyleSheet","create","container","flexDirection","justifyContent","height","width","position","zIndex","fieldContainer","margin","heading","alignItems","marginBottom","buttoncontainer","initialValues","name","distillery","country","type","age","abv","bottlesize","validationSchema","object","shape","string","required","number","UploadWhisky","history","image","setImage","visible","setVisible","onToggleSnackBar","addImageToFirestore","downloadURL","whiskyID","console","log","firestore","collection","doc","set","pickProfilePicFromLibrary","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","v4","cancelled","uploadImage","uri","fetch","response","blob","ref","storage","child","uploadTask","put","on","snapshot","progress","bytesTransferred","totalBytes","state","TaskState","PAUSED","RUNNING","error","code","getDownloadURL","then","UploadWhiskyForm","onSubmit","values","add","push","handleSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,SAASC,MAAT,QAAsB,oBAAtB;AACA,OAAOC,IAAP;AACA,OAAOC,eAAP;AAEA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,aAAa,EAAE,QADN;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,MAAM,EAAE,MAHC;AAITC,IAAAA,KAAK,EAAE,MAJE;AAKTC,IAAAA,QAAQ,EAAE,UALD;AAMTC,IAAAA,MAAM,EAAE;AANC,GADoB;AAS/BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,MAAM,EAAE;AADM,GATe;AAY/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE,QADL;AAEPC,IAAAA,YAAY,EAAE;AAFP,GAZsB;AAgB/BC,EAAAA,eAAe,EAAE;AAhBc,CAAlB,CAAf;AAqBA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,UAAU,EAAE,EAFQ;AAGpBC,EAAAA,OAAO,EAAE,EAHW;AAIpBC,EAAAA,IAAI,EAAE,EAJc;AAKpBC,EAAAA,GAAG,EAAE,EALe;AAMpBC,EAAAA,GAAG,EAAE,EANe;AAOpBC,EAAAA,UAAU,EAAE;AAPQ,CAAtB;AAWA,IAAMC,gBAAgB,GAAGhC,GAAG,CAACiC,MAAJ,GAAaC,KAAb,CAAmB;AAC1CT,EAAAA,IAAI,EAAEzB,GAAG,CACNmC,MADG,GAEHC,QAFG,CAEM,kBAFN,CADoC;AAI1CV,EAAAA,UAAU,EAAE1B,GAAG,CACZmC,MADS,GAETC,QAFS,CAEA,wBAFA,CAJ8B;AAO1CT,EAAAA,OAAO,EAAE3B,GAAG,CACTmC,MADM,GAENC,QAFM,CAEG,qBAFH,CAPiC;AAU1CR,EAAAA,IAAI,EAAE5B,GAAG,CACNmC,MADG,GAEHC,QAFG,CAEM,kBAFN,CAVoC;AAa1CP,EAAAA,GAAG,EAAE7B,GAAG,CACLqC,MADE,GAEFD,QAFE,CAEO,iBAFP,CAbqC;AAgB1CN,EAAAA,GAAG,EAAE9B,GAAG,CACLqC,MADE,GAEFD,QAFE,CAEO,iBAFP,CAhBqC;AAmB1CL,EAAAA,UAAU,EAAE/B,GAAG,CACZqC,MADS,GAETD,QAFS,CAEA,wBAFA;AAnB8B,CAAnB,CAAzB;;AAyBA,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,MAAMC,OAAO,GAAGtC,UAAU,EAA1B;;AADyB,kBAECH,QAAQ,EAFT;AAAA;AAAA,MAElB0C,KAFkB;AAAA,MAEXC,QAFW;;AAAA,mBAGK3C,QAAQ,CAAC,KAAD,CAHb;AAAA;AAAA,MAGlB4C,OAHkB;AAAA,MAGTC,UAHS;;AAIzB,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,WAAMD,UAAU,CAAC,CAACD,OAAF,CAAhB;AAAA,GAAzB;;AAGA,MAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAOC,WAAP,EAAoBC,QAApB;AAAA;AAAA;AAAA;AAAA;AAC1BC,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,QAA1B;AACAxC,YAAAA,QAAQ,CAAC2C,SAAT,GACCC,UADD,CACY,cADZ,EAECC,GAFD,CAEKL,QAFL,EAGCM,GAHD,CAGK;AACHP,cAAAA,WAAW,EAAXA;AADG,aAHL;;AAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAUA,MAAMQ,yBAAyB,GAAG,SAA5BA,yBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACbnD,WAAW,CAACoD,uBAAZ,CAAoC;AACrDC,cAAAA,UAAU,EAAErD,WAAW,CAACsD,gBAAZ,CAA6BC,GADY;AAErDC,cAAAA,aAAa,EAAE,IAFsC;AAGrDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH6C;AAIrDC,cAAAA,OAAO,EAAE;AAJ4C,aAApC,CADa;;AAAA;AAC5BC,YAAAA,MAD4B;AAQ1Bf,YAAAA,QAR0B,GAQf7C,IAAI,CAAC6D,EAAL,EARe;;AAUhC,gBAAI,CAACD,MAAM,CAACE,SAAZ,EAAuB;AACrBC,cAAAA,WAAW,CAACH,MAAM,CAACI,GAAR,EAAanB,QAAb,CAAX;AACAN,cAAAA,QAAQ,CAACqB,MAAM,CAACI,GAAR,CAAR;AACAtB,cAAAA,gBAAgB;AACjB;;AAd+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlC;;AAiBA,MAAMqB,WAAW,GAAG,SAAdA,WAAc,CAAMC,GAAN,EAAWnB,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAElBC,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,QAAvC;AAFkB;AAAA,6CAIKoB,KAAK,CAACD,GAAD,CAJV;;AAAA;AAIZE,YAAAA,QAJY;AAAA;AAAA,6CAKCA,QAAQ,CAACC,IAAT,EALD;;AAAA;AAKZA,YAAAA,IALY;AAOZC,YAAAA,GAPY,GAON/D,QAAQ,CAACgE,OAAT,GAAmBD,GAAnB,GAAyBE,KAAzB,sBAAkDzB,QAAlD,CAPM;AASZ0B,YAAAA,UATY,GASCH,GAAG,CAACI,GAAJ,CAAQL,IAAR,CATD;AAWlBI,YAAAA,UAAU,CAACE,EAAX,CAAc,eAAd,EACF,UAACC,QAAD,EAAc;AAGZ,kBAAMC,QAAQ,GAAID,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GAArE;AACA/B,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAe4B,QAAf,GAA0B,QAAtC;;AACA,sBAAQD,QAAQ,CAACI,KAAjB;AACE,qBAAKzE,QAAQ,CAACgE,OAAT,CAAiBU,SAAjB,CAA2BC,MAAhC;AACElC,kBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA;;AACF,qBAAK1C,QAAQ,CAACgE,OAAT,CAAiBU,SAAjB,CAA2BE,OAAhC;AACEnC,kBAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA;AANJ;AAQD,aAdC,EAeF,UAACmC,KAAD,EAAW;AAET,sBAAQA,KAAK,CAACC,IAAd;AACE,qBAAK,sBAAL;AAEErC,kBAAAA,OAAO,CAACC,GAAR,CAAYmC,KAAK,CAACC,IAAlB;AACA;;AACF,qBAAK,kBAAL;AAEErC,kBAAAA,OAAO,CAACC,GAAR,CAAYmC,KAAK,CAACC,IAAlB;AACA;;AACF,qBAAK,iBAAL;AAEErC,kBAAAA,OAAO,CAACC,GAAR,CAAYmC,KAAK,CAACC,IAAlB;AACA;AAZJ;AAcD,aA/BC,EAgCF,YAAM;AAGJZ,cAAAA,UAAU,CAACG,QAAX,CAAoBN,GAApB,CAAwBgB,cAAxB,GAAyCC,IAAzC,CAA8C,UAACzC,WAAD,EAAiB;AAC7DE,gBAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,WAAjC;AACAD,gBAAAA,mBAAmB,CAACC,WAAD,EAAcC,QAAd,CAAnB;AACD,eAHD;AAID,aAvCC;;AAXkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAsDA,MAAMyC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAkB;AAAA,QAAfC,QAAe,QAAfA,QAAe;AACzC,WACE,oBAAC,IAAD,QACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEjF,MAAM,CAACU;AAApB,OACE,oBAAC,eAAD;AACA,MAAA,IAAI,EAAC,MADL;AAEA,MAAA,WAAW,EAAC;AAFZ,MADF,CADF,EAOE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,MAAM,CAACU;AAApB,OACE,oBAAC,eAAD;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,WAAW,EAAC;AAFd,MADF,CAPF,EAcE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,MAAM,CAACU;AAApB,OACE,oBAAC,eAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,WAAW,EAAC;AAFd,MADF,CAdF,EAqBE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,MAAM,CAACU;AAApB,OACE,oBAAC,eAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC;AAFd,MADF,CArBF,EA4BE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,MAAM,CAACU;AAApB,OACE,oBAAC,eAAD;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,YAAY,EAAC,SAFf;AAGE,MAAA,WAAW,EAAC;AAHd,MADF,CA5BF,EAoCE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,MAAM,CAACU;AAApB,OACE,oBAAC,eAAD;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,YAAY,EAAC,SAFf;AAGE,MAAA,WAAW,EAAC;AAHd,MADF,CApCF,EA4CE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEV,MAAM,CAACU;AAApB,OACE,oBAAC,eAAD;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,YAAY,EAAC,SAFf;AAGE,MAAA,WAAW,EAAC;AAHd,MADF,CA5CF,EAoDE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,IAAI,EAAC,UAA3B;AAAsC,MAAA,OAAO,EAAEoC,yBAA/C;AAA0E,MAAA,KAAK,EAAE9C,MAAM,CAACe;AAAxF,sBApDF,EAsDE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,aAAd;AAA6B,MAAA,KAAK,EAAEf,MAAM,CAACU,cAA3C;AAA2D,MAAA,IAAI,EAAC,UAAhE;AAA2E,MAAA,OAAO,EAAEuE;AAApF,uBAtDF,CADF;AA4DD,GA7DD;;AAgEA,MAAMA,QAAQ,GAAG,SAAXA,QAAW,CAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACRjE,YAAAA,IADQ,GACiDiE,MADjD,CACRjE,IADQ,EACFC,UADE,GACiDgE,MADjD,CACFhE,UADE,EACUC,OADV,GACiD+D,MADjD,CACU/D,OADV,EACmBC,IADnB,GACiD8D,MADjD,CACmB9D,IADnB,EACyBC,GADzB,GACiD6D,MADjD,CACyB7D,GADzB,EAC8BC,GAD9B,GACiD4D,MADjD,CAC8B5D,GAD9B,EACmCC,UADnC,GACiD2D,MADjD,CACmC3D,UADnC;AAGfxB,YAAAA,QAAQ,CAAC2C,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,EAA4CwC,GAA5C,CAAgD;AAC9ClE,cAAAA,IAAI,EAAEA,IADwC;AAE9CC,cAAAA,UAAU,EAAEA,UAFkC;AAG9CC,cAAAA,OAAO,EAAEA,OAHqC;AAI9CC,cAAAA,IAAI,EAAEA,IAJwC;AAK9CC,cAAAA,GAAG,EAAEA,GALyC;AAM9CC,cAAAA,GAAG,EAAEA,GANyC;AAO9CC,cAAAA,UAAU,EAAEA;AAPkC,aAAhD;AASAQ,YAAAA,OAAO,CAACqD,IAAR,CAAa,GAAb;;AAZe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAeA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpF,MAAM,CAACG;AAApB,KACE,oBAAC,UAAD,QACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACY;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,SAAb;AAAwB,IAAA,QAAQ,EAAE,SAAlC;AAA6C,IAAA,UAAU,EAAE;AAAzD,qBADF,CADA,EAOA,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEI,aADjB;AAEE,IAAA,QAAQ,EAAEiE,QAFZ;AAGE,IAAA,gBAAgB,EAAEzD;AAHpB,KAKG;AAAA,QAAG6D,YAAH,SAAGA,YAAH;AAAA,WAAsB,oBAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAEA;AAA5B,MAAtB;AAAA,GALH,CAPA,EAcCrD,KAAK,IAAI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAE0B,MAAAA,GAAG,EAAE1B;AAAP,KAAf;AAA+B,IAAA,KAAK,EAAE;AAAEzB,MAAAA,KAAK,EAAE,GAAT;AAAcD,MAAAA,MAAM,EAAE;AAAtB;AAAtC,IAdV,CADF,CADF;AAsBD,CA7LD;;AA+LA,eAAewB,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, ScrollView, Image } from 'react-native';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-native';\nimport uuid from 'uuid';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Button} from 'react-native-paper';\nimport Text from './Text';\nimport FormikTextInput from './FormikTextInput';\n\nimport * as firebase from 'firebase';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1\n  },\n  fieldContainer: {\n    margin: 5,\n  },\n  heading: {\n    alignItems: 'center',\n    marginBottom: 30\n  },\n  buttoncontainer: {\n\n  }\n});\n\nconst initialValues = {\n  name: '',\n  distillery: '',\n  country: '',\n  type: '',\n  age: '',\n  abv: '',\n  bottlesize: ''\n\n};\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .required('Name is required'),\n  distillery: yup\n    .string()\n    .required('Distillery is required'),\n  country: yup\n    .string()\n    .required('Country is required'),\n  type: yup\n    .string()\n    .required('Type is required'),\n  age: yup \n    .number()\n    .required('Age is required'),\n  abv: yup\n    .number()\n    .required('Abv is required'),\n  bottlesize: yup\n    .number()\n    .required('Bottlesize is required')\n});\n\n\nconst UploadWhisky = () => {\n  const history = useHistory();\n  const [image, setImage] = useState();\n  const [visible, setVisible] = useState(false);\n  const onToggleSnackBar = () => setVisible(!visible);\n\n\n  const addImageToFirestore = async (downloadURL, whiskyID) => { \n    console.log('whiskyID: ', whiskyID);\n    firebase.firestore()\n    .collection('whiskyImages')\n    .doc(whiskyID)\n    .set({\n      downloadURL\n    });\n  };\n  \n  const pickProfilePicFromLibrary = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    const whiskyID = uuid.v4();\n  \n    if (!result.cancelled) {\n      uploadImage(result.uri, whiskyID);\n      setImage(result.uri);\n      onToggleSnackBar();\n    }\n  };\n\n  const uploadImage = async(uri, whiskyID) => {\n\n    console.log('whiskyId upload image: ', whiskyID);\n\n    const response = await fetch(uri);\n    const blob = await response.blob();\n\n    const ref = firebase.storage().ref().child(`images/whiskies/${whiskyID}`);\n\n    const uploadTask = ref.put(blob);\n\n    uploadTask.on('state_changed', \n  (snapshot) => {\n    // Observe state change events such as progress, pause, and resume\n    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n    console.log('Upload is ' + progress + '% done');\n    switch (snapshot.state) {\n      case firebase.storage.TaskState.PAUSED: // or 'paused'\n        console.log('Upload is paused');\n        break;\n      case firebase.storage.TaskState.RUNNING: // or 'running'\n        console.log('Upload is running');\n        break;\n    }\n  }, \n  (error) => {\n    // Handle unsuccessful uploads\n    switch (error.code) {\n      case 'storage/unauthorized':\n        // User doesn't have permission to access the object\n        console.log(error.code);\n        break;\n      case 'storage/canceled':\n        // User canceled the upload\n        console.log(error.code);\n        break;\n      case 'storage/unknown':\n        // Unknown error occurred, inspect error.serverResponse\n        console.log(error.code);\n        break;\n    }\n  },\n  () => {\n    // Handle successful uploads on complete\n    // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n    uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n      console.log('File available at', downloadURL);\n      addImageToFirestore(downloadURL, whiskyID);\n    });\n  });\n\n  };\n\n  const UploadWhiskyForm = ({ onSubmit }) => {\n    return (\n      <View>\n        <View style={styles.fieldContainer}>\n          <FormikTextInput \n          name=\"name\" \n          placeholder=\"Name\" />\n        </View>\n  \n        <View style={styles.fieldContainer}>\n          <FormikTextInput\n            name=\"distillery\"\n            placeholder=\"Distillery\"\n          />\n        </View>\n  \n        <View style={styles.fieldContainer}>\n          <FormikTextInput\n            name=\"country\"\n            placeholder=\"Country\"\n          />\n        </View>\n  \n        <View style={styles.fieldContainer}>\n          <FormikTextInput\n            name=\"type\"\n            placeholder=\"Type\"\n          />\n        </View>\n  \n        <View style={styles.fieldContainer}>\n          <FormikTextInput\n            name=\"age\"\n            keyboardType=\"numeric\"\n            placeholder=\"Age\"\n          />\n        </View>\n  \n        <View style={styles.fieldContainer}>\n          <FormikTextInput\n            name=\"abv\"\n            keyboardType=\"numeric\"\n            placeholder=\"Abv\"\n          />\n        </View>\n  \n        <View style={styles.fieldContainer}>\n          <FormikTextInput\n            name=\"bottlesize\"\n            keyboardType=\"numeric\"\n            placeholder=\"Bottlesize\"\n          />\n        </View>\n  \n        <Button icon='camera' mode='outlined' onPress={pickProfilePicFromLibrary} style={styles.buttoncontainer}>Upload image</Button>\n  \n        <Button icon={'bottle-wine'} style={styles.fieldContainer} mode='outlined' onPress={onSubmit}>\n            Upload whisky\n        </Button>\n      </View>\n    );\n  };\n\n\n  const onSubmit = async (values) => {\n    const {name, distillery, country, type, age ,abv, bottlesize} = values;\n\n    firebase.firestore().collection('whiskies').add({\n      name: name,\n      distillery: distillery,\n      country: country,\n      type: type,\n      age: age,\n      abv: abv,\n      bottlesize: bottlesize,\n    });\n    history.push('/');\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView>\n      <View style={styles.heading}>\n        <Text color={'primary'} fontSize={'heading'} fontWeight={'bold'}>\n          Upload Whisky\n        </Text>\n      </View>\n      \n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {({ handleSubmit }) => <UploadWhiskyForm onSubmit={handleSubmit} />}\n      </Formik>\n      {image && <Image source={{ uri: image }} style={{ width: 100, height: 100 }} />}\n      </ScrollView>\n  \n\n    </View>\n  );\n};\n\nexport default UploadWhisky;"]},"metadata":{},"sourceType":"module"}