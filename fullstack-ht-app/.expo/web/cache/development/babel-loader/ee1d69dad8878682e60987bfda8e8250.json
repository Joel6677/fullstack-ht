{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UserList.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useHistory } from 'react-router-native';\nimport { Searchbar, Divider } from 'react-native-paper';\nimport UserItem from \"./UserItem\";\nimport * as firebase from 'firebase';\nvar styles = StyleSheet.create({\n  container: {\n    padding: 5,\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1,\n    paddingTop: 80,\n    paddingBottom: 60\n  },\n  separator: {\n    marginVertical: 5\n  },\n  headerContainer: {\n    padding: 10\n  },\n  searchContainer: {\n    marginBottom: 15\n  }\n});\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator\n  });\n};\n\nvar UserListContainer = function UserListContainer(_ref) {\n  var users = _ref.users,\n      onUserPress = _ref.onUserPress;\n  return React.createElement(FlatList, {\n    data: users,\n    keyExtractor: function keyExtractor(_ref2) {\n      var id = _ref2.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(UserItem, {\n        user: item\n      });\n    },\n    ItemSeparatorComponent: ItemSeparator\n  });\n};\n\nvar UserList = function UserList() {\n  var history = useHistory();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  useEffect(function () {\n    firebase.firestore().collection('users').get().then(function (querySnapshot) {\n      var posts = querySnapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setUsers(posts);\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n  }, [history]);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(UserListContainer, {\n    users: users\n  }));\n};\n\nexport default UserList;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UserList.jsx"],"names":["React","useState","useEffect","useHistory","Searchbar","Divider","UserItem","firebase","styles","StyleSheet","create","container","padding","height","width","position","zIndex","paddingTop","paddingBottom","separator","marginVertical","headerContainer","searchContainer","marginBottom","ItemSeparator","UserListContainer","users","onUserPress","id","item","UserList","history","setUsers","firestore","collection","get","then","querySnapshot","posts","docs","map","doc","data","catch","error","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,oBAAnC;AACA,OAAOC,QAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,OAAO,EAAE,CADF;AAEPC,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,KAAK,EAAE,MAHA;AAIPC,IAAAA,QAAQ,EAAE,UAJH;AAKPC,IAAAA,MAAM,EAAE,CALD;AAMPC,IAAAA,UAAU,EAAE,EANL;AAOPC,IAAAA,aAAa,EAAE;AAPR,GADkB;AAU7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,cAAc,EAAE;AADT,GAVkB;AAa7BC,EAAAA,eAAe,EAAE;AACbT,IAAAA,OAAO,EAAE;AADI,GAbY;AAgB7BU,EAAAA,eAAe,EAAE;AACbC,IAAAA,YAAY,EAAE;AADD;AAhBY,CAAlB,CAAf;;AAqBA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAGxB,SAAO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACW;AAApB,IAAP;AAMH,CATD;;AAYA,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,OAA0B;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,WAAiB,QAAjBA,WAAiB;AAE5C,SACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAED,KADV;AAEI,IAAA,YAAY,EAAE;AAAA,UAAGE,EAAH,SAAGA,EAAH;AAAA,aAAYA,EAAZ;AAAA,KAFlB;AAGI,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aAKJ,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB,QALI;AAAA,KAHhB;AAWI,IAAA,sBAAsB,EAAEL;AAX5B,IADJ;AAeH,CAjBL;;AAmBA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,MAAMC,OAAO,GAAG5B,UAAU,EAA1B;;AADmB,kBAEOF,QAAQ,CAAC,EAAD,CAFf;AAAA;AAAA,MAEZyB,KAFY;AAAA,MAELM,QAFK;;AAInB9B,EAAAA,SAAS,CAAC,YAAM;AACZK,IAAAA,QAAQ,CAAC0B,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,GAFL,GAGKC,IAHL,CAGU,UAACC,aAAD,EAAmB;AACrB,UAAIC,KAAK,GAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuB,UAAAC,GAAG,EAAI;AACtC,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;AACA,YAAMd,EAAE,GAAGa,GAAG,CAACb,EAAf;AACA;AAASA,UAAAA,EAAE,EAAFA;AAAT,WAAgBc,IAAhB;AACH,OAJW,CAAZ;AAKAV,MAAAA,QAAQ,CAACM,KAAD,CAAR;AACH,KAVL,EAWKK,KAXL,CAWW,UAACC,KAAD,EAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,KAAzC;AACH,KAbL;AAcH,GAfQ,EAeN,CAACb,OAAD,CAfM,CAAT;AAiBA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACG;AAApB,KACI,oBAAC,iBAAD;AACI,IAAA,KAAK,EAAEe;AADX,IADJ,CADJ;AAUH,CA/BD;;AAiCA,eAAeI,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FlatList, View, StyleSheet, TouchableOpacity } from 'react-native';\nimport { useHistory } from 'react-router-native';\nimport { Searchbar, Divider } from 'react-native-paper';\nimport UserItem from './UserItem';\nimport * as firebase from 'firebase';\n\nconst styles = StyleSheet.create({\n    container: {\n        padding: 5,\n        height: '100%',\n        width: '100%',\n        position: 'absolute',\n        zIndex: 1,\n        paddingTop: 80,\n        paddingBottom: 60\n    },\n    separator: {\n        marginVertical: 5\n    },\n    headerContainer: {\n        padding: 10,\n    },\n    searchContainer: {\n        marginBottom: 15,\n    },\n});\n\nconst ItemSeparator = () => {\n\n\n    return(<View style={styles.separator}>\n\n        {/* <Divider/> */}\n\n    </View>);\n\n};\n\n\nconst UserListContainer = ({users, onUserPress}) => {\n\n        return (\n            <FlatList\n                data={users}\n                keyExtractor={({ id }) => id}\n                renderItem={({ item }) => (\n                    // <TouchableOpacity\n                        // key={item.id}\n                        // onPress={() => onUserPress(item.id)}\n                    // >\n                        <UserItem user={item} />\n                    // </TouchableOpacity>\n                )}\n                ItemSeparatorComponent={ItemSeparator}\n            />\n        );\n    };\n\nconst UserList = () => {\n    const history = useHistory();\n    const [users, setUsers] = useState('');\n\n    useEffect(() => {\n        firebase.firestore()\n            .collection('users')\n            .get()\n            .then((querySnapshot) => {\n                let posts = querySnapshot.docs.map(doc => {\n                    const data = doc.data();\n                    const id = doc.id;\n                    return { id, ...data };\n                });\n                setUsers(posts);\n            })\n            .catch((error) => {\n                console.log(\"Error getting documents: \", error);\n            });\n    }, [history]);\n\n    return (\n        <View style={styles.container}>\n            <UserListContainer\n                users={users}\n                // onUserPress={(id) => {\n                //     history.push(`/users/${id}`);\n                // }}\n            />\n        </View>\n    );\n};\n\nexport default UserList;"]},"metadata":{},"sourceType":"module"}