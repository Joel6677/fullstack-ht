{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/CreateReview.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button } from 'react-native-paper';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-native';\nimport * as firebase from 'firebase';\nimport FormikTextInput from \"./FormikTextInput\";\nimport { useParams } from 'react-router-native';\nimport Text from \"./Text\";\nimport Moment from 'moment';\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    zIndex: 1\n  },\n  fieldContainer: {\n    marginBottom: 15\n  },\n  headingContainer: {\n    alignItems: 'center',\n    marginBottom: 30\n  }\n});\nvar initialValues = {\n  nosing: '',\n  taste: '',\n  finish: '',\n  rating: '',\n  comment: ''\n};\nvar validationSchema = yup.object().shape({\n  nosing: yup.string().required('Nosing is required'),\n  taste: yup.string().required('Taste is required'),\n  finish: yup.string().required('Finish is required'),\n  rating: yup.number('Rating must be a number').min(0, 'Rating must be greater or equal to 0').max(100, 'Rating must be less or equal to 100').required('Rating is required'),\n  comment: yup.string()\n});\n\nvar CreateReviewForm = function CreateReviewForm(_ref) {\n  var onSubmit = _ref.onSubmit;\n  return React.createElement(View, null, React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    placeholder: \"Nosing\",\n    name: \"nosing\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    placeholder: \"Taste\",\n    name: \"taste\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    placeholder: \"Finish\",\n    name: \"finish\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    placeholder: \"Rating between 0 and 100\",\n    keyboardType: \"numeric\",\n    name: \"rating\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    placeholder: \"Comment\",\n    name: \"comment\",\n    multiline: true\n  })), React.createElement(Button, {\n    mode: 'outlined',\n    onPress: onSubmit\n  }, \"Create a review\"));\n};\n\nvar CreateReview = function CreateReview() {\n  var history = useHistory();\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imgURL = _useState4[0],\n      setImgURL = _useState4[1];\n\n  useEffect(function () {\n    firebase.firestore().collection('images').doc(firebase.auth().currentUser.uid).collection('userImages').doc('profilePicture').get().then(function (doc) {\n      setImgURL(doc.data().downloadURL);\n    });\n    firebase.firestore().collection('userinfo').doc(firebase.auth().currentUser.uid).get().then(function (doc) {\n      setName(doc.data().name);\n    });\n  }, [id]);\n\n  var onSubmit = function onSubmit(values) {\n    var nosing, taste, finish, rating, comment;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            nosing = values.nosing, taste = values.taste, finish = values.finish, rating = values.rating, comment = values.comment;\n            firebase.auth().currentUser && firebase.firestore().collection('whiskies').doc(id).collection('reviews').doc(firebase.auth().currentUser.uid).set({\n              name: name,\n              imgURL: imgURL,\n              nosing: nosing,\n              taste: taste,\n              finish: finish,\n              rating: rating,\n              comment: comment,\n              time: Moment(new Date()).calendar()\n            }).catch(function (error) {\n              console.log('Error: ', error);\n            });\n            firebase.firestore().collection('whiskies').doc(id).get().then(function (doc) {\n              console.log('rating', doc.data().rating);\n              console.log('rating got: ', rating);\n              console.log('reviewCount: ', doc.data().reviewCount);\n              console.log('average rating: ', (parseInt(doc.data().rating) + parseInt(rating)) / parseInt(doc.data().reviewCount + 1));\n              firebase.firestore().collection('whiskies').doc(id).update({\n                \"reviewCount\": doc.data().reviewCount + 1,\n                \"rating\": (parseInt(doc.data().rating) + parseInt(rating)) / parseInt(doc.data().reviewCount + 1)\n              });\n            }).catch(function (error) {\n              console.log(\"Error: \", error);\n            });\n            history.push('/');\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.headingContainer\n  }, React.createElement(Text, {\n    color: 'primary',\n    fontSize: 'heading',\n    fontWeight: 'bold'\n  }, \"Create review\")), React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validationSchema: validationSchema\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit;\n    return React.createElement(CreateReviewForm, {\n      onSubmit: handleSubmit\n    });\n  }));\n};\n\nexport default CreateReview;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/CreateReview.jsx"],"names":["React","useEffect","useState","Button","Formik","yup","useHistory","firebase","FormikTextInput","useParams","Text","Moment","styles","StyleSheet","create","container","justifyContent","width","height","position","zIndex","fieldContainer","marginBottom","headingContainer","alignItems","initialValues","nosing","taste","finish","rating","comment","validationSchema","object","shape","string","required","number","min","max","CreateReviewForm","onSubmit","CreateReview","history","id","name","setName","imgURL","setImgURL","firestore","collection","doc","auth","currentUser","uid","get","then","data","downloadURL","values","set","time","Date","calendar","catch","error","console","log","reviewCount","parseInt","update","push","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button} from 'react-native-paper';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-native';\nimport * as firebase from 'firebase';\nimport FormikTextInput from './FormikTextInput';\nimport { useParams } from 'react-router-native';\nimport Text from './Text';\nimport Moment from 'moment';\n\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    zIndex: 1,\n  },\n  fieldContainer: {\n    marginBottom: 15,\n  },\n  headingContainer: {\n    alignItems: 'center',\n    marginBottom: 30\n  }\n});\n\nconst initialValues = {\n  nosing: '',\n  taste: '',\n  finish: '',\n  rating: '',\n  comment: ''\n};\n\nconst validationSchema = yup.object().shape({\n  nosing: yup.string().required('Nosing is required'),\n  taste: yup.string().required('Taste is required'),\n  finish: yup.string().required('Finish is required'), \n  rating: yup\n  .number('Rating must be a number')\n  .min(0, 'Rating must be greater or equal to 0')\n  .max(100, 'Rating must be less or equal to 100')\n  .required('Rating is required'),\n  comment: yup.string(),\n});\n\nconst CreateReviewForm = ({ onSubmit }) => {\n  return (\n    <View >\n      <View style={styles.fieldContainer}>\n        <FormikTextInput placeholder=\"Nosing\" name=\"nosing\" />\n      </View>\n      <View style={styles.fieldContainer}>\n        <FormikTextInput placeholder=\"Taste\" name=\"taste\" />\n      </View>\n      <View style={styles.fieldContainer}>\n        <FormikTextInput placeholder=\"Finish\" name=\"finish\" />\n      </View>\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          placeholder=\"Rating between 0 and 100\"\n          keyboardType=\"numeric\"\n          name=\"rating\"\n        />\n      </View>\n      <View style={styles.fieldContainer}>\n        <FormikTextInput placeholder=\"Comment\" name=\"comment\" multiline />\n      </View>\n\n      <Button mode={'outlined'} onPress={onSubmit}>Create a review</Button>\n    </View>\n  );\n};\n\nconst CreateReview = () => {\n\n  const history = useHistory();\n  const { id } = useParams();\n  const [name, setName] = useState();\n  const [imgURL, setImgURL] = useState();\n\n  useEffect(() => {\n    firebase.firestore().collection('images').doc(firebase.auth().currentUser.uid).collection('userImages').doc('profilePicture')\n    .get().then((doc) => {setImgURL(doc.data().downloadURL);});\n\n    firebase.firestore().collection('userinfo').doc(firebase.auth().currentUser.uid)\n    .get().then((doc) => {setName(doc.data().name);});\n  }, [id]);\n\n  const onSubmit = async (values) => {\n\n    const { nosing, taste, finish, rating, comment } = values;\n\n\n    {firebase.auth().currentUser&&firebase.firestore().collection('whiskies').doc(id).collection('reviews').doc(firebase.auth().currentUser.uid)\n      .set({\n        name: name,\n        imgURL: imgURL,\n        nosing: nosing,\n        taste: taste,\n        finish: finish,\n        rating: rating,\n        comment: comment,\n        time: Moment(new Date()).calendar()\n      }).catch((error) => {\n        console.log('Error: ', error);\n      });}\n\n    firebase.firestore().collection('whiskies').doc(id).get().\n      then((doc) => {\n        console.log('rating', doc.data().rating);\n        console.log('rating got: ', rating);\n        console.log('reviewCount: ', doc.data().reviewCount);\n        console.log('average rating: ', (parseInt(doc.data().rating) + parseInt(rating)) / parseInt(doc.data().reviewCount + 1));\n        firebase.firestore().collection('whiskies').doc(id).update({\n          \"reviewCount\": doc.data().reviewCount + 1,\n          \"rating\": (parseInt(doc.data().rating) + parseInt(rating)) / parseInt(doc.data().reviewCount + 1)\n        });\n      }).catch((error) => {\n        console.log(\"Error: \", error);\n      });\n\n\n    history.push('/');\n\n  };\n\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.headingContainer}>\n      <Text color={'primary'} fontSize={'heading'} fontWeight={'bold'}>Create review</Text>\n      </View>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {({ handleSubmit }) => <CreateReviewForm onSubmit={handleSubmit} />}\n      </Formik>\n    </View>\n  );\n};\n\nexport default CreateReview;"]},"metadata":{},"sourceType":"module"}