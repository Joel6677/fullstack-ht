{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyReviews.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Button, Snackbar } from 'react-native-paper';\nimport { Link } from 'react-router-native';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport ReviewItem from \"./ReviewItem\";\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    zIndex: 1,\n    height: '100%',\n    width: '100%',\n    paddingBottom: 60\n  },\n  reviewItemWrapper: {\n    padding: 15,\n    backgroundColor: '#FFD700'\n  },\n  separator: {\n    height: 10\n  },\n  actionsContainer: {\n    marginTop: 15,\n    borderWidth: 3,\n    flexDirection: 'row'\n  },\n  actionButton: {\n    marginTop: 5\n  },\n  lastActionButton: {}\n});\n\nvar ReviewItemWithActions = function ReviewItemWithActions(_ref) {\n  var review = _ref.review,\n      onDelete = _ref.onDelete;\n  console.log('review: ', review._id);\n  return React.createElement(View, {\n    style: styles.reviewItemWrapper\n  }, React.createElement(ReviewItem, {\n    review: review\n  }), React.createElement(Link, {\n    component: Button,\n    to: \"/whiskies/\" + review._id,\n    style: styles.actionButton\n  }, \"View whisky\"), React.createElement(Button, {\n    onPress: onDelete\n  }, \"Delete review\"));\n};\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator\n  });\n};\n\nvar MyReviews = function MyReviews() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      reviews = _useState2[0],\n      setReviews = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  useEffect(function () {\n    var reviewsListener = firebase.firestore().collection('reviews').doc(firebase.auth().currentUser.uid).collection('userReviews').onSnapshot(function (querySnapshot) {\n      var reviews = querySnapshot.docs.map(function (doc) {\n        var firebaseData = doc.data();\n        console.log('firebaseData: ', firebaseData);\n\n        var data = _objectSpread({\n          _id: doc.id\n        }, firebaseData);\n\n        return data;\n      });\n      setReviews(reviews);\n    });\n    return function () {\n      return reviewsListener();\n    };\n  }, []);\n\n  var _onDelete = function onDelete(id) {\n    var docFromWhiskiesRef = firebase.firestore().collection('whiskies').doc(id);\n    var docFromUserReviewsRef = firebase.firestore().collection('whiskies').doc(id).collection('reviews').doc(firebase.auth().currentUser.uid);\n    firebase.firestore().runTransaction(function (transaction) {\n      return transaction.get(docFromWhiskiesRef).then(function (docFromWhiskies) {\n        if (!docFromWhiskies.exists) {\n          throw \"Document does not exist!\";\n        }\n\n        var newReviewCount = docFromWhiskies.data().reviewCount - 1;\n        var whiskyRating = docFromWhiskies.data().rating;\n        transaction.update(docFromWhiskiesRef, {\n          reviewCount: newReviewCount\n        });\n        return {\n          whiskyRating: whiskyRating,\n          newReviewCount: newReviewCount\n        };\n      });\n    }).then(function (values) {\n      console.log('whiskyRating: ', values.whiskyRating);\n      console.log('newReviewCount: ', values.newReviewCount);\n      firebase.firestore().runTransaction(function (transaction) {\n        return transaction.get(docFromUserReviewsRef).then(function (docFromUserReviews) {\n          var userRating = docFromUserReviews.data().rating;\n          var newRating = values.newReviewCount !== 0 ? (values.whiskyRating - userRating) / values.newReviewCount : 0;\n          console.log('userRating: ', userRating);\n          console.log('newRating: ', newRating);\n          transaction.update(docFromUserReviewsRef, {\n            reviewCount: newRating\n          });\n        });\n      });\n    }).then(function () {\n      console.log(\"Transaction successfully committed!\");\n    }).catch(function (error) {\n      console.log(\"Transaction failed: \", error);\n    });\n  };\n\n  console.log('my reviews: ', reviews);\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Snackbar, {\n    visible: visible\n  }, \"Review deleted\"), React.createElement(FlatList, {\n    data: reviews,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(ReviewItemWithActions, {\n        review: item,\n        onDelete: function onDelete() {\n          return _onDelete(item._id);\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(_ref3) {\n      var id = _ref3.id;\n      return id;\n    },\n    ItemSeparatorComponent: ItemSeparator\n  })));\n};\n\nexport default MyReviews;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyReviews.jsx"],"names":["React","useState","useEffect","Button","Snackbar","Link","firebase","ReviewItem","styles","StyleSheet","create","container","flexDirection","zIndex","height","width","paddingBottom","reviewItemWrapper","padding","backgroundColor","separator","actionsContainer","marginTop","borderWidth","actionButton","lastActionButton","ReviewItemWithActions","review","onDelete","console","log","_id","ItemSeparator","MyReviews","reviews","setReviews","visible","setVisible","reviewsListener","firestore","collection","doc","auth","currentUser","uid","onSnapshot","querySnapshot","docs","map","firebaseData","data","id","docFromWhiskiesRef","docFromUserReviewsRef","runTransaction","transaction","get","then","docFromWhiskies","exists","newReviewCount","reviewCount","whiskyRating","rating","update","values","docFromUserReviews","userRating","newRating","catch","error","item"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from 'react';\nimport { FlatList, View, StyleSheet, Alert } from 'react-native';\nimport { Button, Snackbar } from 'react-native-paper';\nimport { Link } from 'react-router-native';\n// import * as firebase from 'firebase';\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport ReviewItem from './ReviewItem';\n\n\nconst styles = StyleSheet.create({\ncontainer: {\n    flexDirection: 'column',\n    zIndex: 1,\n    // position: 'absolute',\n    height: '100%',\n    width: '100%',\n    // paddingTop: 80,\n    paddingBottom: 60\n},\n  reviewItemWrapper: {\n    padding: 15,\n    backgroundColor: '#FFD700',\n  },\n  separator: {\n    height: 10,\n  },\n  actionsContainer: {\n    marginTop: 15,\n    borderWidth: 3,\n    flexDirection: 'row',\n  },\n  actionButton: {\n    marginTop: 5\n\n  },\n  lastActionButton: {\n\n  },\n});\n\n// const DeleteReviewButton = ({ onPress }) => {\n//     const alertButtons = [\n//       {\n//         text: 'Cancel',\n//         style: 'cancel',\n//       },\n//       {\n//         text: 'Delete',\n//         onPress: () => onPress(),\n//       },\n//     ];\n  \n//     const deleteWithConfirmation = () => {\n//       console.log('delte with confirmation');\n//       // Alert.alert(\n//       //   'Delete review',\n//       //   'Are you sure you want to delete this review?',\n//       //   alertButtons,\n//       //   { cancelable: false },\n//       // );\n//     };\n  \n//     return (\n//       <Button onPress={deleteWithConfirmation}>\n//         Delete review\n//       </Button>\n//     );\n//   };\n\n\n\nconst ReviewItemWithActions = ({ review, onDelete }) => {\n\n  console.log('review: ', review._id);\n\n  return (\n    <View style={styles.reviewItemWrapper}>\n        <ReviewItem review={review}/> \n        <Link\n          component={Button}\n          to={`/whiskies/${review._id}`}\n          style={styles.actionButton}\n        >\n          View whisky\n        </Link>\n        <Button onPress={onDelete}>Delete review</Button>\n        {/* <DeleteReviewButton\n          onPress={onDelete}\n          style={[styles.actionButton, styles.lastActionButton]}\n        />  */}\n    </View>\n  );\n};\n\nconst ItemSeparator = () => <View style={styles.separator} />;\n\nconst MyReviews = () => {\n\n    const [reviews, setReviews] = useState([]);\n    const [visible, setVisible] = useState(false);\n  \n    useEffect(() => {\n\n      const reviewsListener = firebase.firestore()\n      .collection('reviews')\n      .doc(firebase.auth().currentUser.uid)\n      .collection('userReviews')\n      .onSnapshot(querySnapshot => {\n          const reviews = querySnapshot.docs.map(doc => {\n              const firebaseData = doc.data();\n              console.log('firebaseData: ', firebaseData);\n\n              const data = {\n                  _id: doc.id,\n                  ...firebaseData\n              };\n\n              // if (!firebaseData.system) {\n              //     data.user = {\n              //         ...firebaseData.user,\n              //         name: firebaseData.user.email\n              //     };\n              // }\n\n              return data;\n          });\n\n          setReviews(reviews);\n      });\n\n\n  return () => reviewsListener();\n\n        // {firebase.auth().currentUser&&firebase.firestore()\n        //     .collection('reviews').doc(firebase.auth().currentUser.uid).collection('userReviews')\n        //     .get()\n        //     .then((querySnapshot) => {\n        //         let posts = querySnapshot.docs.map(doc => {\n        //             const data = doc.data();\n        //             const id = doc.id;\n        //             return { id, ...data };\n        //         });\n        //         setReviews(posts);\n        //     })\n        //     .catch((error) => {\n        //         console.log(\"Error getting documents: \", error);\n        //     });\n}, []);\n // use transaction instead\n  const onDelete = (id) => {\n\n    let docFromWhiskiesRef = firebase.firestore().collection('whiskies').doc(id);\n    let docFromUserReviewsRef = firebase.firestore().collection('whiskies').doc(id)\n    .collection('reviews').doc(firebase.auth().currentUser.uid);\n\n    firebase.firestore().runTransaction((transaction) => {\n      return transaction.get(docFromWhiskiesRef).then((docFromWhiskies) => {\n        if (!docFromWhiskies.exists) {\n          throw \"Document does not exist!\";\n        }\n        let newReviewCount = docFromWhiskies.data().reviewCount - 1;\n        let whiskyRating = docFromWhiskies.data().rating;\n        transaction.update(docFromWhiskiesRef, { reviewCount: newReviewCount });\n        return {whiskyRating: whiskyRating, newReviewCount: newReviewCount};\n      });\n    })\n    .then((values) => {\n      console.log('whiskyRating: ', values.whiskyRating);\n      console.log('newReviewCount: ', values.newReviewCount);\n\n      firebase.firestore().runTransaction((transaction) => {\n        return transaction.get(docFromUserReviewsRef).then((docFromUserReviews) => {\n          let userRating = docFromUserReviews.data().rating;\n          let newRating = values.newReviewCount !== 0 ? (values.whiskyRating - userRating) / values.newReviewCount : 0;\n          console.log('userRating: ', userRating);\n          console.log('newRating: ', newRating);\n          transaction.update(docFromUserReviewsRef, { reviewCount: newRating });\n      });\n    });\n    })\n    .then(() => {\n      console.log(\"Transaction successfully committed!\");\n    }).catch((error) => {\n      console.log(\"Transaction failed: \", error);\n    });\n\n    // let batch = firebase.firestore().batch();\n\n    // let reviewRef = firebase.firestore().collection('reviews').doc(firebase.auth().currentUser.uid).collection('userReviews')\n    //   .doc(id);\n\n    // batch.delete(reviewRef);\n\n    // let reviewRef2 = firebase.firestore().collection('whiskies').doc(id)\n    //   .collection('reviews').doc(firebase.auth().currentUser.uid);\n    // batch.delete(reviewRef2);\n\n    // batch.commit().then(() => { console.log('review deleted'); }).catch((error) => { console.log(error); });\n\n  };\n\n  console.log('my reviews: ', reviews);\n\n  return (\n      <>\n      <View style={styles.container}>\n      <Snackbar visible={visible}>\n            Review deleted\n        </Snackbar>\n          <FlatList\n              data={reviews}\n              renderItem={({ item }) => (\n                  <ReviewItemWithActions\n                      review={item}\n                      onDelete={() => onDelete(item._id)}\n                  />\n              )}\n              keyExtractor={({ id }) => id}\n              ItemSeparatorComponent={ItemSeparator}\n          />\n      </View>\n      </>\n  );\n};\n\nexport default MyReviews;"]},"metadata":{},"sourceType":"module"}