{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SignInEmail.jsx\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-native';\nimport CustomButton from \"./CustomButton\";\nimport FormikTextInput from \"./FormikTextInput\";\nimport { SignInWithEmail } from \"../firebase/auth\";\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    padding: 15\n  },\n  fieldContainer: {\n    marginBottom: 15\n  },\n  button: {\n    padding: 10\n  }\n});\nvar initialValues = {\n  email: '',\n  password: ''\n};\nvar validationSchema = yup.object().shape({\n  email: yup.string().required('Email is required'),\n  password: yup.string().required('Password is required')\n});\n\nvar SignInForm = function SignInForm(_ref) {\n  var onSubmit = _ref.onSubmit;\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"email\",\n    placeholder: \"Email\",\n    testID: \"emailField\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"password\",\n    placeholder: \"Password\",\n    testID: \"passwordField\",\n    secureTextEntry: true\n  })), React.createElement(CustomButton, {\n    onPress: onSubmit,\n    testID: \"submitButton\"\n  }, \"Sign in\"));\n};\n\nexport var SignInContainer = function SignInContainer(_ref2) {\n  var onSubmit = _ref2.onSubmit;\n  return React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validationSchema: validationSchema\n  }, function (_ref3) {\n    var handleSubmit = _ref3.handleSubmit;\n    return React.createElement(SignInForm, {\n      onSubmit: handleSubmit\n    });\n  });\n};\n\nvar SignInEmail = function SignInEmail() {\n  var history = useHistory();\n\n  var onSubmit = function onSubmit(values) {\n    var email, password;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = values.email, password = values.password;\n            SignInWithEmail(email, password);\n            history.push('/');\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SignInContainer, {\n    onSubmit: onSubmit\n  });\n};\n\nexport default SignInEmail;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SignInEmail.jsx"],"names":["React","Formik","yup","useHistory","CustomButton","FormikTextInput","SignInWithEmail","styles","StyleSheet","create","container","backgroundColor","padding","fieldContainer","marginBottom","button","initialValues","email","password","validationSchema","object","shape","string","required","SignInForm","onSubmit","SignInContainer","handleSubmit","SignInEmail","history","values","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,OAAOC,YAAP;AACA,OAAOC,eAAP;AACA,SAASC,eAAT;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,eAAe,EAAE,OADR;AAETC,IAAAA,OAAO,EAAE;AAFA,GADoB;AAK/BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,YAAY,EAAE;AADA,GALe;AAQ/BC,EAAAA,MAAM,EAAE;AACNH,IAAAA,OAAO,EAAE;AADH;AARuB,CAAlB,CAAf;AAaA,IAAMI,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,QAAQ,EAAE;AAFU,CAAtB;AAKA,IAAMC,gBAAgB,GAAGjB,GAAG,CAACkB,MAAJ,GAAaC,KAAb,CAAmB;AAC1CJ,EAAAA,KAAK,EAAEf,GAAG,CAACoB,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CADmC;AAE1CL,EAAAA,QAAQ,EAAEhB,GAAG,CAACoB,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB;AAFgC,CAAnB,CAAzB;;AAKA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACnC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACG;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACM;AAApB,KACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,OAAtB;AAA8B,IAAA,WAAW,EAAC,OAA1C;AAAkD,IAAA,MAAM,EAAC;AAAzD,IADF,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACM;AAApB,KACE,oBAAC,eAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,MAAM,EAAC,eAHT;AAIE,IAAA,eAAe;AAJjB,IADF,CAJF,EAYE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEY,QAAvB;AAAiC,IAAA,MAAM,EAAC;AAAxC,eAZF,CADF;AAgBD,CAjBD;;AAmBA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,QAAkB;AAAA,MAAfD,QAAe,SAAfA,QAAe;AAC/C,SACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAET,aADjB;AAEE,IAAA,QAAQ,EAAES,QAFZ;AAGE,IAAA,gBAAgB,EAAEN;AAHpB,KAKG;AAAA,QAAGQ,YAAH,SAAGA,YAAH;AAAA,WAAsB,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAEA;AAAtB,MAAtB;AAAA,GALH,CADF;AASD,CAVM;;AAYP,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,MAAMC,OAAO,GAAG1B,UAAU,EAA1B;;AAEA,MAAMsB,QAAQ,GAAG,SAAXA,QAAW,CAAOK,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPb,YAAAA,KADO,GACaa,MADb,CACPb,KADO,EACAC,QADA,GACaY,MADb,CACAZ,QADA;AAGbZ,YAAAA,eAAe,CAACW,KAAD,EAAQC,QAAR,CAAf;AACAW,YAAAA,OAAO,CAACE,IAAR,CAAa,GAAb;;AAJa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAQA,SAAO,oBAAC,eAAD;AAAiB,IAAA,QAAQ,EAAEN;AAA3B,IAAP;AACD,CAZD;;AAcA,eAAeG,WAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-native';\n\nimport CustomButton from './CustomButton';\nimport FormikTextInput from './FormikTextInput';\nimport { SignInWithEmail } from '../firebase/auth';\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    padding: 15,\n  },\n  fieldContainer: {\n    marginBottom: 15,\n  },\n  button: {\n    padding: 10\n  }\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst validationSchema = yup.object().shape({\n  email: yup.string().required('Email is required'),\n  password: yup.string().required('Password is required'),\n});\n\nconst SignInForm = ({ onSubmit }) => {\n  return (\n    <View style={styles.container}>\n      <View style={styles.fieldContainer}>\n        <FormikTextInput name=\"email\" placeholder=\"Email\" testID=\"emailField\" />\n      </View>\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"password\"\n          placeholder=\"Password\"\n          testID=\"passwordField\"\n          secureTextEntry\n        />\n      </View>\n      <CustomButton onPress={onSubmit} testID=\"submitButton\">Sign in</CustomButton>\n    </View>\n  );\n};\n\nexport const SignInContainer = ({ onSubmit }) => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n    >\n      {({ handleSubmit }) => <SignInForm onSubmit={handleSubmit} />}\n    </Formik>\n  );\n};\n\nconst SignInEmail = () => {\n  const history = useHistory();\n\n  const onSubmit = async (values) => {\n    const { email, password } = values;\n\n      SignInWithEmail(email, password);\n      history.push('/');\n\n  };\n\n  return <SignInContainer onSubmit={onSubmit} />;\n};\n\nexport default SignInEmail;"]},"metadata":{},"sourceType":"module"}