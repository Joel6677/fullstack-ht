{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyInfo.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useRef, useEffect } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button, Avatar, Divider, IconButton } from 'react-native-paper';\nimport { useHistory } from 'react-router-native';\nimport * as firebase from 'firebase';\nimport { array } from 'yup';\nimport { GET_USERINFO } from \"../firebase/queries\";\nimport { StateContext } from \"../state\";\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 100\n  },\n  containerGaller: {},\n  containerImage: {\n    padding: 10\n  },\n  image: {\n    width: 50,\n    height: 50\n  }\n});\n\nvar MyInfo = function MyInfo() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      files = _useState2[0],\n      setFiles = _useState2[1];\n\n  var _useContext = useContext(StateContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  GET_USERINFO();\n  useEffect(function () {\n    firebase.firestore().collection(\"images\").doc(firebase.auth().currentUser.uid).collection(\"userImages\").get().then(function (querySnapshot) {\n      var posts = querySnapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setFiles(posts);\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n  }, []);\n  console.log('state: ', state.userinfo);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.containerGallery\n  }, React.createElement(FlatList, {\n    numColumns: 3,\n    horizontal: false,\n    data: files,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.containerImage\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.downloadURL\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(_ref2) {\n      var id = _ref2.id;\n      return id;\n    }\n  })));\n};\n\nexport default MyInfo;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyInfo.jsx"],"names":["React","useState","useContext","useRef","useEffect","Button","Avatar","Divider","IconButton","useHistory","firebase","array","GET_USERINFO","StateContext","styles","StyleSheet","create","container","position","top","containerGaller","containerImage","padding","image","width","height","MyInfo","files","setFiles","state","dispatch","firestore","collection","doc","auth","currentUser","uid","get","then","querySnapshot","posts","docs","map","data","id","catch","error","console","log","userinfo","containerGallery","item","uri","downloadURL"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useRef, useEffect } from 'react';\nimport { Animated, StyleSheet, View, ScrollView, Image, FlatList} from 'react-native';\nimport { Button, Avatar, Divider, IconButton  } from 'react-native-paper';\nimport { useHistory } from 'react-router-native';\nimport * as firebase from 'firebase';\nimport { array } from 'yup';\nimport { GET_USERINFO } from '../firebase/queries';\nimport { StateContext } from '../state';\n\n\nconst styles = StyleSheet.create({\n\n  container: {\n    position: 'absolute',\n    top: 100\n\n  },\n  containerGaller: {\n\n  }, \n  containerImage: {\n    padding: 10\n\n  },\n  image: {\n    width: 50,\n    height: 50\n  }\n  \n\n});\n\n\nconst MyInfo = () => {\n\n  const [files, setFiles] = useState([]);\n  const { state, dispatch } = useContext(StateContext);\n\n  GET_USERINFO();\n\n  useEffect(() => {\n    firebase.firestore()\n    .collection(\"images\")\n    .doc(firebase.auth().currentUser.uid)\n    .collection(\"userImages\")\n    .get()\n      .then((querySnapshot) => {\n        let posts = querySnapshot.docs.map(doc => {\n          const data = doc.data();\n          const id = doc.id;\n          return { id, ...data };\n      });\n      \n        setFiles(posts);\n      })\n      .catch((error) => {\n        console.log(\"Error getting documents: \", error);\n      });\n  \n  },[]);\n\n  console.log('state: ', state.userinfo);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.containerGallery}>\n        <FlatList\n          numColumns={3}\n          horizontal={false}\n          data={files}\n          renderItem={({ item }) => (\n            <View\n              style={styles.containerImage}>\n\n              <Image\n                style={styles.image}\n                source={{ uri: item.downloadURL }}\n              />\n            </View>\n\n          )}\n          keyExtractor={({ id }) => id}\n        />\n      </View>\n\n    </View>\n  );\n};\n\nexport default MyInfo;"]},"metadata":{},"sourceType":"module"}