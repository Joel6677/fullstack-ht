{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/AppBar.jsx\";\nimport React, { useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Constants from 'expo-constants';\nimport { Link } from 'react-router-native';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-native';\nimport theme from \"../theme\";\nimport Text from \"./Text\";\nimport AuthStorageContext from \"../contexts/AuthStorageContext\";\nimport useAuthorizedUser from \"../hooks/useAuthorizedUser\";\nimport { StateContext } from \"../state\";\nimport { IconButton } from 'react-native-paper';\nimport { Appbar } from 'react-native-paper';\nvar styles = StyleSheet.create({\n  appbar: {\n    backgroundColor: 'red'\n  },\n  container: {\n    backgroundColor: theme.colors.appBarBackground,\n    width: '100%',\n    position: 'fixed',\n    zIndex: 5\n  },\n  scrollView: {\n    flexDirection: 'row'\n  },\n  tabTouchable: {\n    flexGrow: 0\n  },\n  tabContainer: {\n    paddingHorizontal: 15,\n    paddingVertical: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  tabText: {\n    color: 'white'\n  }\n});\n\nvar AppBarTab = function AppBarTab(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return React.createElement(TouchableWithoutFeedback, _extends({\n    style: styles.tabTouchable\n  }, props), React.createElement(View, {\n    style: styles.tabContainer\n  }, React.createElement(Text, {\n    fontWeight: \"bold\",\n    style: styles.tabText\n  }, children)));\n};\n\nvar AppBar = function AppBar() {\n  var apolloClient = useApolloClient();\n  var authStorage = useContext(AuthStorageContext);\n  var history = useHistory();\n\n  var _useAuthorizedUser = useAuthorizedUser(),\n      authorizedUser = _useAuthorizedUser.authorizedUser;\n\n  var _useContext = useContext(StateContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var onSignOut = function onSignOut() {\n    return _regeneratorRuntime.async(function onSignOut$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(authStorage.removeAccessToken());\n\n          case 2:\n            apolloClient.resetStore();\n            history.push('/');\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Appbar, {\n    style: styles.appbar\n  }, React.createElement(Appbar.Action, {\n    icon: \"menu\",\n    onPress: function onPress() {\n      return dispatch({\n        type: \"SET_OPEN\",\n        payload: !state.open\n      });\n    }\n  }), React.createElement(Appbar.Action, {\n    icon: \"mail\",\n    onPress: function onPress() {\n      return console.log('Pressed mail');\n    }\n  }), React.createElement(Appbar.Action, {\n    icon: \"label\",\n    onPress: function onPress() {\n      return console.log('Pressed label');\n    }\n  }), React.createElement(Appbar.Action, {\n    icon: \"delete\",\n    onPress: function onPress() {\n      return console.log('Pressed delete');\n    }\n  }));\n};\n\nexport default AppBar;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/AppBar.jsx"],"names":["React","useContext","Constants","Link","useApolloClient","useHistory","theme","Text","AuthStorageContext","useAuthorizedUser","StateContext","IconButton","Appbar","styles","StyleSheet","create","appbar","backgroundColor","container","colors","appBarBackground","width","position","zIndex","scrollView","flexDirection","tabTouchable","flexGrow","tabContainer","paddingHorizontal","paddingVertical","alignItems","justifyContent","tabText","color","AppBarTab","children","props","AppBar","apolloClient","authStorage","history","authorizedUser","state","dispatch","onSignOut","removeAccessToken","resetStore","push","type","payload","open","console","log"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\n\nimport {\n  View,\n  ScrollView,\n  StyleSheet,\n  TouchableWithoutFeedback\n} from 'react-native';\n\nimport Constants from 'expo-constants';\nimport { Link } from 'react-router-native';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-native';\n\nimport theme from '../theme';\nimport Text from './Text';\nimport AuthStorageContext from '../contexts/AuthStorageContext';\nimport useAuthorizedUser from '../hooks/useAuthorizedUser';\n\nimport { StateContext } from '../state';\nimport { IconButton } from 'react-native-paper';\n\nimport { Appbar } from 'react-native-paper';\n\nconst styles = StyleSheet.create({\n  appbar: {\n    backgroundColor: 'red'\n  },\n  container: {\n    // paddingTop: Constants.statusBarHeight,\n    backgroundColor: theme.colors.appBarBackground,\n    width: '100%',\n    position: 'fixed',\n    zIndex: 5\n  },\n  scrollView: {\n    flexDirection: 'row',\n  },\n  tabTouchable: {\n    flexGrow: 0,\n  },\n  tabContainer: {\n    paddingHorizontal: 15,\n    paddingVertical: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  tabText: {\n    color: 'white',\n  }\n});\n\nconst AppBarTab = ({ children, ...props }) => { \n  return (\n    <TouchableWithoutFeedback style={styles.tabTouchable} {...props}>\n      <View style={styles.tabContainer}>\n        <Text fontWeight=\"bold\" style={styles.tabText}>\n          {children}\n        </Text>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nconst AppBar = () => {\n  const apolloClient = useApolloClient();\n  const authStorage = useContext(AuthStorageContext);\n  const history = useHistory();\n\n  const { authorizedUser } = useAuthorizedUser();\n\n  const { state, dispatch } = useContext(StateContext);\n\n  const onSignOut = async () => {\n    await authStorage.removeAccessToken();\n    apolloClient.resetStore();\n    history.push('/');\n  };\n\n\n  return (\n    <Appbar style={styles.appbar}>\n      <Appbar.Action\n        icon=\"menu\"\n        onPress={() => dispatch({type: \"SET_OPEN\", payload: !state.open})}\n      />\n      <Appbar.Action icon=\"mail\" onPress={() => console.log('Pressed mail')} />\n      <Appbar.Action icon=\"label\" onPress={() => console.log('Pressed label')} />\n      <Appbar.Action\n        icon=\"delete\"\n        onPress={() => console.log('Pressed delete')}\n      />\n    </Appbar>\n  );\n    // <View style={styles.container}>\n    //   <ScrollView style={styles.scrollView} horizontal> \n    //   <IconButton icon=\"menu\" color={theme.colors.primary} size={40} onPress={() => dispatch({type: \"SET_OPEN\", payload: !state.open})} \n    //     ></IconButton>\n    //     {authorizedUser ? (\n    //       <>\n    //         <AppBarTab onPress={onSignOut}>Sign out</AppBarTab>\n    //       </>\n    //     ) : (\n    //       <>\n    //         <Link to=\"/sign-in\" component={AppBarTab}>\n    //           Sign in\n    //         </Link>\n    //         <Link to=\"/sign-up\" component={AppBarTab}>\n    //           Sign up\n    //         </Link>\n    //         <Link to=\"/\" component={AppBarTab}>\n    //           Home\n    //         </Link>\n    //       </>\n    //     )}\n    //   </ScrollView>\n    // </View>\n  // );\n};\n\nexport default AppBar;"]},"metadata":{},"sourceType":"module"}