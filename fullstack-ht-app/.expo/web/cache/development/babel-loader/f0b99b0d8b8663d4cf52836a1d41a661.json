{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SingleRepository.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useParams } from 'react-router-native';\nimport { useQuery } from '@apollo/react-hooks';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport RepositoryItem from \"./RepositoryItem\";\nimport { GET_REPOSITORY } from \"../graphql/queries\";\nimport ReviewItem from \"./ReviewItem\";\nvar styles = StyleSheet.create({\n  separator: {\n    height: 10\n  },\n  reviewItem: {\n    padding: 15\n  }\n});\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 29\n    }\n  });\n};\n\nvar RepositoryInfo = function RepositoryInfo(_ref) {\n  var repository = _ref.repository;\n  return React.createElement(React.Fragment, null, React.createElement(RepositoryItem, {\n    repository: repository,\n    showGithubLink: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), React.createElement(ItemSeparator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar updateQuery = function updateQuery(previousResult, _ref2) {\n  var fetchMoreResult = _ref2.fetchMoreResult;\n  var nextResult = {\n    repository: _objectSpread(_objectSpread({}, fetchMoreResult.repository), {}, {\n      reviews: _objectSpread(_objectSpread({}, fetchMoreResult.repository.reviews), {}, {\n        edges: [].concat(_toConsumableArray(previousResult.repository.reviews.edges), _toConsumableArray(fetchMoreResult.repository.reviews.edges))\n      })\n    })\n  };\n  return nextResult;\n};\n\nvar SingleRepository = function SingleRepository() {\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var variables = {\n    id: id,\n    reviewsFirst: 5\n  };\n\n  var _useQuery = useQuery(GET_REPOSITORY, {\n    fetchPolicy: 'cache-and-network',\n    variables: variables\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      fetchMore = _useQuery.fetchMore;\n\n  var repository = data ? data.repository : undefined;\n\n  var handleFetchMore = function handleFetchMore() {\n    var canFetchMore = !loading && repository && repository.reviews.pageInfo.hasNextPage;\n\n    if (!canFetchMore) {\n      return;\n    }\n\n    fetchMore({\n      query: GET_REPOSITORY,\n      variables: _objectSpread(_objectSpread({}, variables), {}, {\n        reviewsAfter: repository.reviews.pageInfo.endCursor\n      }),\n      updateQuery: updateQuery\n    });\n  };\n\n  var reviewNodes = repository ? repository.reviews.edges.map(function (_ref3) {\n    var node = _ref3.node;\n    return node;\n  }) : [];\n  return React.createElement(FlatList, {\n    data: reviewNodes,\n    renderItem: function renderItem(_ref4) {\n      var item = _ref4.item;\n      return React.createElement(ReviewItem, {\n        style: styles.reviewItem,\n        review: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(_ref5) {\n      var id = _ref5.id;\n      return id;\n    },\n    ListHeaderComponent: function ListHeaderComponent() {\n      return repository ? React.createElement(RepositoryInfo, {\n        repository: repository,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 22\n        }\n      }) : null;\n    },\n    ItemSeparatorComponent: ItemSeparator,\n    onEndReached: handleFetchMore,\n    onEndReachedThreshold: 0.5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default SingleRepository;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SingleRepository.jsx"],"names":["React","useParams","useQuery","RepositoryItem","GET_REPOSITORY","ReviewItem","styles","StyleSheet","create","separator","height","reviewItem","padding","ItemSeparator","RepositoryInfo","repository","updateQuery","previousResult","fetchMoreResult","nextResult","reviews","edges","SingleRepository","id","variables","reviewsFirst","fetchPolicy","data","loading","fetchMore","undefined","handleFetchMore","canFetchMore","pageInfo","hasNextPage","query","reviewsAfter","endCursor","reviewNodes","map","node","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-native';\nimport { useQuery } from '@apollo/react-hooks';\nimport { FlatList, StyleSheet, View } from 'react-native';\n\nimport RepositoryItem from './RepositoryItem';\nimport { GET_REPOSITORY } from '../graphql/queries';\nimport ReviewItem from './ReviewItem';\n\nconst styles = StyleSheet.create({\n  separator: {\n    height: 10,\n  },\n  reviewItem: {\n    padding: 15,\n  },\n});\n\nconst ItemSeparator = () => <View style={styles.separator} />;\n\nconst RepositoryInfo = ({ repository }) => {\n  return (\n    <>\n      <RepositoryItem repository={repository} showGithubLink />\n      <ItemSeparator />\n    </>\n  );\n};\n\nconst updateQuery = (previousResult, { fetchMoreResult }) => {\n  const nextResult = {\n    repository: {\n      ...fetchMoreResult.repository,\n      reviews: {\n        ...fetchMoreResult.repository.reviews,\n        edges: [\n          ...previousResult.repository.reviews.edges,\n          ...fetchMoreResult.repository.reviews.edges,\n        ],\n      },\n    },\n  };\n\n  return nextResult;\n};\n\nconst SingleRepository = () => {\n  const { id } = useParams();\n  const variables = { id, reviewsFirst: 5 };\n\n  const { data, loading, fetchMore } = useQuery(GET_REPOSITORY, {\n    fetchPolicy: 'cache-and-network',\n    variables,\n  });\n\n  const repository = data ? data.repository : undefined;\n\n  const handleFetchMore = () => {\n    const canFetchMore =\n      !loading && repository && repository.reviews.pageInfo.hasNextPage;\n\n    if (!canFetchMore) {\n      return;\n    }\n\n    fetchMore({\n      query: GET_REPOSITORY,\n      variables: {\n        ...variables,\n        reviewsAfter: repository.reviews.pageInfo.endCursor,\n      },\n      updateQuery,\n    });\n  };\n\n  const reviewNodes = repository\n    ? repository.reviews.edges.map(({ node }) => node)\n    : [];\n\n  return (\n    <FlatList\n      data={reviewNodes}\n      renderItem={({ item }) => (\n        <ReviewItem style={styles.reviewItem} review={item} />\n      )}\n      keyExtractor={({ id }) => id}\n      ListHeaderComponent={() =>\n        repository ? <RepositoryInfo repository={repository} /> : null\n      }\n      ItemSeparatorComponent={ItemSeparator}\n      onEndReached={handleFetchMore}\n      onEndReachedThreshold={0.5}\n    />\n  );\n};\n\nexport default SingleRepository;\n"]},"metadata":{},"sourceType":"module"}