{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/WhiskyList.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useHistory } from 'react-router-native';\nimport { Searchbar } from 'react-native-paper';\nimport { useDebounce } from 'use-debounce';\nimport WhiskyItem from \"./WhiskyItem\";\nimport { useCollection } from 'react-firebase-hooks/firestore';\nimport Picker from \"./Picker\";\nimport * as firebase from 'firebase';\nvar styles = StyleSheet.create({\n  separator: {\n    height: 10\n  },\n  headerContainer: {\n    padding: 15\n  },\n  searchContainer: {\n    marginBottom: 15\n  }\n});\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator\n  });\n};\n\nvar orderByOptions = [{\n  label: 'Latest repositories',\n  value: 'latest'\n}, {\n  label: 'Highest rated repositories',\n  value: 'highestRating'\n}, {\n  label: 'Lowest rated repositories',\n  value: 'lowestRating'\n}];\nexport var WhiskyListContainer = function (_React$Component) {\n  _inherits(WhiskyListContainer, _React$Component);\n\n  var _super = _createSuper(WhiskyListContainer);\n\n  function WhiskyListContainer() {\n    _classCallCheck(this, WhiskyListContainer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(WhiskyListContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          whiskies = _this$props.whiskies,\n          onEndReach = _this$props.onEndReach,\n          onWhiskyPress = _this$props.onWhiskyPress;\n      return React.createElement(FlatList, {\n        data: whiskies,\n        keyExtractor: function keyExtractor(_ref) {\n          var id = _ref.id;\n          return id;\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return React.createElement(TouchableOpacity, {\n            key: item.id,\n            onPress: function onPress() {\n              return onWhiskyPress(item.id);\n            }\n          }, React.createElement(WhiskyItem, {\n            whisky: item\n          }));\n        },\n        ItemSeparatorComponent: ItemSeparator,\n        onEndReached: onEndReach,\n        onEndReachedThreshold: 0.5,\n        initialNumToRender: 8\n      });\n    }\n  }]);\n\n  return WhiskyListContainer;\n}(React.Component);\n\nvar WhiskyList = function WhiskyList() {\n  var history = useHistory();\n\n  var _useState = useState('latest'),\n      _useState2 = _slicedToArray(_useState, 2),\n      orderBy = _useState2[0],\n      setOrderBy = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchKeyword = _useState4[0],\n      setSearchKeyword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      whiskies = _useState6[0],\n      setWhiskies = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      whiskyImages = _useState8[0],\n      setWhiskyImages = _useState8[1];\n\n  useEffect(function () {\n    var temp = {};\n    firebase.firestore().collection('whiskies').get().then(function (querySnapshot) {\n      var posts = querySnapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      temp.push(posts);\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n    firebase.firestore().collection('whiskyImages').get().then(function (querySnapshot) {\n      var posts = querySnapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      temp.concat(posts);\n      console.log(temp);\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n  }, [history]);\n\n  var onEndReach = function onEndReach() {};\n\n  console.log(whiskyImages);\n  return React.createElement(WhiskyListContainer, {\n    whiskies: whiskies,\n    onEndReach: onEndReach,\n    onWhiskyPress: function onWhiskyPress(id) {\n      history.push(\"/whiskies/\" + id);\n    }\n  });\n};\n\nexport default WhiskyList;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/WhiskyList.jsx"],"names":["React","useState","useEffect","useHistory","Searchbar","useDebounce","WhiskyItem","useCollection","Picker","firebase","styles","StyleSheet","create","separator","height","headerContainer","padding","searchContainer","marginBottom","ItemSeparator","orderByOptions","label","value","WhiskyListContainer","props","whiskies","onEndReach","onWhiskyPress","id","item","Component","WhiskyList","history","orderBy","setOrderBy","searchKeyword","setSearchKeyword","setWhiskies","whiskyImages","setWhiskyImages","temp","firestore","collection","get","then","querySnapshot","posts","docs","map","doc","data","push","catch","error","console","log","concat"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FlatList, View, StyleSheet, TouchableOpacity } from 'react-native';\nimport { useHistory } from 'react-router-native';\nimport { Searchbar } from 'react-native-paper';\nimport { useDebounce } from 'use-debounce';\n\nimport WhiskyItem from './WhiskyItem';\nimport { useCollection } from 'react-firebase-hooks/firestore';\n// import useRepositories from '../hooks/useRepositories';\nimport Picker from './Picker';\nimport * as firebase from 'firebase';\n\nconst styles = StyleSheet.create({\n    separator: {\n        height: 10,\n    },\n    headerContainer: {\n        padding: 15,\n    },\n    searchContainer: {\n        marginBottom: 15,\n    },\n});\n\nconst ItemSeparator = () => <View style={styles.separator} />;\n\nconst orderByOptions = [\n    { label: 'Latest repositories', value: 'latest' },\n    {\n        label: 'Highest rated repositories',\n        value: 'highestRating',\n    },\n    {\n        label: 'Lowest rated repositories',\n        value: 'lowestRating',\n    },\n];\n\n// const WhiskyListHeader = (\n//     {\n//       onOrderByChange,\n//       orderBy,\n//       searchKeyword,\n//       onSearchKeywordChange,\n//     }\n// ) => {\n//     return (\n//         <View style={styles.headerContainer}>\n//             <View style={styles.searchContainer}>\n//                 <Searchbar\n//                   placeholder=\"Search whiskies\"\n//                   value={searchKeyword}\n//                   onChangeText={onSearchKeywordChange}\n//                 />\n//             </View>\n//             <Picker\n//             placeholder={{}}\n//             onValueChange={onOrderByChange}\n//             value={orderBy}\n//             items={orderByOptions}\n//             />\n//         </View>\n//     );\n// };\n\nexport class WhiskyListContainer extends React.Component {\n    // renderHeader = () => {\n    //     const {\n    //         onOrderByChange,\n    //         orderBy,\n    //         searchKeyword,\n    //         onSearchKeywordChange,\n    //     } = this.props;\n\n    //     return (\n    //         <WhiskyListHeader\n    //             onOrderByChange={onOrderByChange}\n    //             orderBy={orderBy}\n    //             searchKeyword={searchKeyword}\n    //             onSearchKeywordChange={onSearchKeywordChange}\n    //         />\n    //     );\n    // };\n\n    render() {\n        const { whiskies, onEndReach, onWhiskyPress } = this.props;\n\n        return (\n            <FlatList\n                data={whiskies}\n                keyExtractor={({ id }) => id}\n                renderItem={({ item }) => (\n                    <TouchableOpacity\n                        key={item.id}\n                        onPress={() => onWhiskyPress(item.id)}\n                    >\n                        <WhiskyItem whisky={item} />\n                    </TouchableOpacity>\n                )}\n                ItemSeparatorComponent={ItemSeparator}\n                // ListHeaderComponent={this.renderHeader}\n                onEndReached={onEndReach}\n                onEndReachedThreshold={0.5}\n                initialNumToRender={8}\n            />\n        );\n    }\n}\n\nconst WhiskyList = () => {\n    const history = useHistory();\n    const [orderBy, setOrderBy] = useState('latest');\n    const [searchKeyword, setSearchKeyword] = useState('');\n    const [whiskies, setWhiskies] = useState('');\n    const [whiskyImages, setWhiskyImages] = useState('');\n\n    useEffect(() => {\n\n        let temp = {};\n\n        firebase.firestore()\n            .collection('whiskies')\n            .get()\n            .then((querySnapshot) => {\n                let posts = querySnapshot.docs.map(doc => {\n                    const data = doc.data();\n                    const id = doc.id;\n                    return { id, ...data };\n                });\n                // setWhiskies(posts);\n                temp.push(posts);\n            })\n            .catch((error) => {\n                console.log(\"Error getting documents: \", error);\n            });\n        firebase.firestore()\n            .collection('whiskyImages')\n            .get()\n            .then((querySnapshot) => {\n                let posts = querySnapshot.docs.map(doc => {\n                    const data = doc.data();\n                    const id = doc.id;\n                    return { id, ...data };\n                });\n                temp.concat(posts);\n                console.log(temp);\n            })\n            .catch((error) => {\n                console.log(\"Error getting documents: \", error);\n            });\n    }, [history]);\n    // const [debouncedSearchKeyword] = useDebounce(searchKeyword, 500);\n\n    // iterate through whiskies (flatlist)\n\n    //\n    //   const { repositories, fetchMore } = useRepositories({\n    // first: 8,\n    // ...variablesByOrderBy[orderBy],\n    //     searchKeyword: debouncedSearchKeyword,\n    //   });\n\n      const onEndReach = () => {\n        //fetch more\n      };\n    //\n\n    console.log(whiskyImages);\n      \n    return (\n        <WhiskyListContainer\n            whiskies={whiskies}\n            // orderBy={orderBy}\n            // onOrderByChange={(newOrderBy) => {\n            //     setOrderBy(newOrderBy);\n            // }}\n              onEndReach={onEndReach}\n            // searchKeyword={searchKeyword}\n            // onSearchKeywordChange={(keyword) => setSearchKeyword(keyword)}\n            onWhiskyPress={(id) => {\n                history.push(`/whiskies/${id}`);\n            }}\n        />\n    );\n};\n\nexport default WhiskyList;"]},"metadata":{},"sourceType":"module"}