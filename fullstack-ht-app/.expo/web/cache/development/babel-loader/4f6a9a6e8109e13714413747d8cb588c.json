{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/RepositoryList.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useHistory } from 'react-router-native';\nimport { Searchbar } from 'react-native-paper';\nimport { useDebounce } from 'use-debounce';\nimport useRepositories from \"../hooks/useRepositories\";\nimport Picker from \"./Picker\";\nvar styles = StyleSheet.create({\n  separator: {\n    height: 10\n  },\n  headerContainer: {\n    padding: 15\n  },\n  searchContainer: {\n    marginBottom: 15\n  }\n});\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 29\n    }\n  });\n};\n\nvar orderByOptions = [{\n  label: 'Latest repositories',\n  value: 'latest'\n}, {\n  label: 'Highest rated repositories',\n  value: 'highestRating'\n}, {\n  label: 'Lowest rated repositories',\n  value: 'lowestRating'\n}];\nvar variablesByOrderBy = {\n  latest: {\n    orderBy: 'CREATED_AT',\n    orderDirection: 'DESC'\n  },\n  highestRating: {\n    orderBy: 'RATING_AVERAGE',\n    orderDirection: 'DESC'\n  },\n  lowestRating: {\n    orderBy: 'RATING_AVERAGE',\n    orderDirection: 'ASC'\n  }\n};\n\nvar RepositoryListHeader = function RepositoryListHeader(_ref) {\n  var onOrderByChange = _ref.onOrderByChange,\n      orderBy = _ref.orderBy,\n      searchKeyword = _ref.searchKeyword,\n      onSearchKeywordChange = _ref.onSearchKeywordChange;\n  return React.createElement(View, {\n    style: styles.headerContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.searchContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(Searchbar, {\n    placeholder: \"Search repositories\",\n    value: searchKeyword,\n    onChangeText: onSearchKeywordChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), React.createElement(Picker, {\n    placeholder: {},\n    onValueChange: onOrderByChange,\n    value: orderBy,\n    items: orderByOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar RepositoryList = function RepositoryList() {\n  var _useRepositories = useRepositories(_objectSpread(_objectSpread({\n    first: 8\n  }, variablesByOrderBy[orderBy]), {}, {\n    searchKeyword: debouncedSearchKeyword\n  })),\n      repositories = _useRepositories.repositories,\n      fetchMore = _useRepositories.fetchMore;\n\n  var onEndReach = function onEndReach() {\n    fetchMore();\n  };\n\n  return React.createElement(RepositoryListContainer, {\n    repositories: repositories,\n    orderBy: orderBy,\n    onOrderByChange: function onOrderByChange(newOrderBy) {\n      setOrderBy(newOrderBy);\n    },\n    onEndReach: onEndReach,\n    searchKeyword: searchKeyword,\n    onSearchKeywordChange: function onSearchKeywordChange(keyword) {\n      return setSearchKeyword(keyword);\n    },\n    onRepositoryPress: function onRepositoryPress(id) {\n      history.push(\"/repositories/\" + id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default RepositoryList;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/RepositoryList.jsx"],"names":["React","useState","useHistory","Searchbar","useDebounce","useRepositories","Picker","styles","StyleSheet","create","separator","height","headerContainer","padding","searchContainer","marginBottom","ItemSeparator","orderByOptions","label","value","variablesByOrderBy","latest","orderBy","orderDirection","highestRating","lowestRating","RepositoryListHeader","onOrderByChange","searchKeyword","onSearchKeywordChange","RepositoryList","first","debouncedSearchKeyword","repositories","fetchMore","onEndReach","newOrderBy","setOrderBy","keyword","setSearchKeyword","id","history","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { FlatList, View, StyleSheet, TouchableOpacity } from 'react-native';\nimport { useHistory } from 'react-router-native';\nimport { Searchbar } from 'react-native-paper';\nimport { useDebounce } from 'use-debounce';\n\nimport useRepositories from '../hooks/useRepositories';\nimport Picker from './Picker';\n\nconst styles = StyleSheet.create({\n  separator: {\n    height: 10,\n  },\n  headerContainer: {\n    padding: 15,\n  },\n  searchContainer: {\n    marginBottom: 15,\n  },\n});\n\nconst ItemSeparator = () => <View style={styles.separator} />;\n\nconst orderByOptions = [\n  { label: 'Latest repositories', value: 'latest' },\n  {\n    label: 'Highest rated repositories',\n    value: 'highestRating',\n  },\n  {\n    label: 'Lowest rated repositories',\n    value: 'lowestRating',\n  },\n];\n\nconst variablesByOrderBy = {\n  latest: {\n    orderBy: 'CREATED_AT',\n    orderDirection: 'DESC',\n  },\n  highestRating: {\n    orderBy: 'RATING_AVERAGE',\n    orderDirection: 'DESC',\n  },\n  lowestRating: {\n    orderBy: 'RATING_AVERAGE',\n    orderDirection: 'ASC',\n  },\n};\n\nconst RepositoryListHeader = ({\n  onOrderByChange,\n  orderBy,\n  searchKeyword,\n  onSearchKeywordChange,\n}) => {\n  return (\n    <View style={styles.headerContainer}>\n      <View style={styles.searchContainer}>\n        <Searchbar\n          placeholder=\"Search repositories\"\n          value={searchKeyword}\n          onChangeText={onSearchKeywordChange}\n        />\n      </View>\n      <Picker\n        placeholder={{}}\n        onValueChange={onOrderByChange}\n        value={orderBy}\n        items={orderByOptions}\n      />\n    </View>\n  );\n};\n\n\nconst RepositoryList = () => {\n  // const history = useHistory();\n  // const [orderBy, setOrderBy] = useState('latest');\n  // const [searchKeyword, setSearchKeyword] = useState('');\n  // const [debouncedSearchKeyword] = useDebounce(searchKeyword, 500);\n\n  const { repositories, fetchMore } = useRepositories({\n    first: 8,\n    ...variablesByOrderBy[orderBy],\n    searchKeyword: debouncedSearchKeyword,\n  });\n\n  const onEndReach = () => {\n    fetchMore();\n  };\n\n  return (\n    <RepositoryListContainer\n      repositories={repositories}\n      orderBy={orderBy}\n      onOrderByChange={(newOrderBy) => {\n        setOrderBy(newOrderBy);\n      }}\n      onEndReach={onEndReach}\n      searchKeyword={searchKeyword}\n      onSearchKeywordChange={(keyword) => setSearchKeyword(keyword)}\n      onRepositoryPress={(id) => {\n        history.push(`/repositories/${id}`);\n      }}\n    />\n  );\n};\n\nexport default RepositoryList;"]},"metadata":{},"sourceType":"module"}