{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/AppBar.jsx\";\nimport React, { useContext, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Constants from 'expo-constants';\nimport { Link } from 'react-router-native';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-native';\nimport useResizeAware from 'react-resize-aware';\nimport theme from \"../theme\";\nimport Text from \"./Text\";\nimport AuthStorageContext from \"../contexts/AuthStorageContext\";\nimport useAuthorizedUser from \"../hooks/useAuthorizedUser\";\nimport { StateContext } from \"../state\";\nimport { IconButton } from 'react-native-paper';\nimport { Appbar } from 'react-native-paper';\nimport { SignOut } from \"../firebase/firebaseFunctions\";\nvar styles = StyleSheet.create({\n  appbar: {\n    backgroundColor: theme.colors.primary,\n    position: 'relative',\n    zIndex: 99\n  },\n  scrollView: {\n    flexDirection: 'row'\n  },\n  tabTouchable: {\n    flexGrow: 0\n  },\n  tabContainer: {\n    paddingHorizontal: 15,\n    paddingVertical: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  tabText: {\n    color: 'white'\n  }\n});\n\nvar AppBar = function AppBar() {\n  var history = useHistory();\n\n  var _useResizeAware = useResizeAware(),\n      _useResizeAware2 = _slicedToArray(_useResizeAware, 2),\n      resizeListener = _useResizeAware2[0],\n      sizes = _useResizeAware2[1];\n\n  var newWidth = (sizes.width - 200) / sizes.width * 100 + \"%\";\n\n  var _useAuthorizedUser = useAuthorizedUser(),\n      authorizedUser = _useAuthorizedUser.authorizedUser;\n\n  var _useContext = useContext(StateContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var resizeAnim = useRef(new Animated.Value(0)).current;\n  return React.createElement(Appbar, {\n    style: styles.appbar\n  }, React.createElement(Appbar.Action, {\n    icon: \"menu\",\n    onPress: function onPress() {\n      return dispatch({\n        type: \"SET_OPEN\",\n        payload: !state.open\n      });\n    }\n  }), React.createElement(Appbar.Action, {\n    icon: \"mail\",\n    onPress: function onPress() {\n      return history.push(\"/sign-up\");\n    }\n  }), React.createElement(Appbar.Action, {\n    icon: \"home\",\n    onPress: function onPress() {\n      return history.push(\"/\");\n    }\n  }), React.createElement(Appbar.Action, {\n    icon: \"magnify\",\n    onPress: function onPress() {\n      return history.push('/choose-pic');\n    }\n  }), React.createElement(Appbar.Action, {\n    icon: \"account\",\n    onPress: function onPress() {\n      return SignOut();\n    }\n  }));\n};\n\nexport default AppBar;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/AppBar.jsx"],"names":["React","useContext","useRef","useEffect","Constants","Link","useApolloClient","useHistory","useResizeAware","theme","Text","AuthStorageContext","useAuthorizedUser","StateContext","IconButton","Appbar","SignOut","styles","StyleSheet","create","appbar","backgroundColor","colors","primary","position","zIndex","scrollView","flexDirection","tabTouchable","flexGrow","tabContainer","paddingHorizontal","paddingVertical","alignItems","justifyContent","tabText","color","AppBar","history","resizeListener","sizes","newWidth","width","authorizedUser","state","dispatch","resizeAnim","Animated","Value","current","type","payload","open","push"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react';\n\nimport {\n  View,\n  ScrollView,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  Animated,\n} from 'react-native';\n\nimport Constants from 'expo-constants';\nimport { Link } from 'react-router-native';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-native';\nimport useResizeAware from 'react-resize-aware';\n\nimport theme from '../theme';\nimport Text from './Text';\nimport AuthStorageContext from '../contexts/AuthStorageContext';\nimport useAuthorizedUser from '../hooks/useAuthorizedUser';\n\nimport { StateContext } from '../state';\nimport { IconButton } from 'react-native-paper';\n\nimport { Appbar } from 'react-native-paper';\nimport {SignOut} from '../firebase/firebaseFunctions';\n\nconst styles = StyleSheet.create({\n  appbar: {\n    backgroundColor: theme.colors.primary,\n    position: 'relative',\n    zIndex: 99\n    \n  },\n  // container: {\n  //   paddingTop: Constants.statusBarHeight,\n  //   backgroundColor: theme.colors.appBarBackground,\n  //   width: '100%',\n  //   zIndex: 99\n  // },\n  scrollView: {\n    flexDirection: 'row',\n  },\n  tabTouchable: {\n    flexGrow: 0,\n  },\n  tabContainer: {\n    paddingHorizontal: 15,\n    paddingVertical: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  tabText: {\n    color: 'white',\n  }\n});\n\n// const AppBarTab = ({ children, ...props }) => { \n//   return (\n//     <TouchableWithoutFeedback style={styles.tabTouchable} {...props}>\n//       <View style={styles.tabContainer}>\n//         <Text fontWeight=\"bold\" style={styles.tabText}>\n//           {children}\n//         </Text>\n//       </View>\n//     </TouchableWithoutFeedback>\n//   );\n// };\n\nconst AppBar = () => {\n  // make sliding appbar\n  const history = useHistory();\n  const [resizeListener, sizes] = useResizeAware();\n  const newWidth = `${((sizes.width - 200) / sizes.width) * 100}%`;\n\n  const { authorizedUser } = useAuthorizedUser();\n\n  const { state, dispatch } = useContext(StateContext);\n  const resizeAnim = useRef(new Animated.Value(0)).current; \n\n  // const onSignOut = async () => {\n  //   await authStorage.removeAccessToken();\n  //   apolloClient.resetStore();\n  //   history.push('/');\n  // };\n\n  \n\n  // const moveAppbar = () => {\n\n  //   Animated.spring(\n  //     resizeAnim,\n  //     {\n  //       // correct width accroding to machine\n  //       toValue: state.open ? 600 : 0\n  //     }\n  //   ).start();\n  \n  // };\n\n  // useEffect(() => {\n  //   moveAppbar();\n  // });\n\n\n  return (\n  //   <>\n\n  //   <View>\n  //     {resizeListener}\n  //   </View>\n  //   <Animated.View style={[styles.appbar, {\n  //     transform: [{\n  //       translateX: resizeAnim\n  //     }]\n  //   }]}>\n      <Appbar style={styles.appbar}>\n      <Appbar.Action\n        icon=\"menu\"\n        onPress={() => dispatch({type: \"SET_OPEN\", payload: !state.open})}\n      />\n      <Appbar.Action icon=\"mail\" onPress={() => history.push(\"/sign-up\")} />\n      <Appbar.Action icon=\"home\" onPress={() => history.push(\"/\")} />\n      <Appbar.Action\n        icon=\"magnify\"\n        onPress={() => history.push('/choose-pic')}\n      />\n        <Appbar.Action\n        icon=\"account\"\n        onPress={() => SignOut()}\n      />\n    </Appbar>\n  //   </Animated.View>\n\n\n  //  </>\n    \n      // <View style={styles.container}>\n      // <View>\n\n      //   <Animated.View style={[styles.container, {\n      //     transform: [{\n      //       translateX: resizeAnim\n      //     }]\n      //   }]}>\n      //     {resizeListener}\n      //  <ScrollView style={styles.scrollView} horizontal> \n      //  <IconButton icon=\"menu\" color={theme.colors.primary} size={40} onPress={() => dispatch({type: \"SET_OPEN\", payload: !state.open})} \n      //   ></IconButton>\n      //   {authorizedUser ? (\n      //     <>\n      //       <AppBarTab onPress={onSignOut}>Sign out</AppBarTab>\n      //     </>\n      //   ) : (\n      //     <>\n      //       <Link to=\"/sign-in\" component={AppBarTab}>\n      //         Sign in\n      //       </Link>\n      //       <Link to=\"/sign-up\" component={AppBarTab}>\n      //         Sign up\n      //       </Link>\n      //       <Link to=\"/\" component={AppBarTab}>\n      //         Home\n      //       </Link>\n      //     </>\n      //   )}\n      // </ScrollView>\n      // </Animated.View>\n  ); \n};\n\nexport default AppBar;"]},"metadata":{},"sourceType":"module"}