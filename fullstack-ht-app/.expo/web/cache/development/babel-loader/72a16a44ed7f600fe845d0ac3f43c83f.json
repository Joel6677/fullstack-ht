{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/ImageList.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useContext, useRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { StateContext } from \"../state\";\nimport Button from \"./Button\";\nvar styles = StyleSheet.create({\n  sidebar: {\n    width: 200,\n    height: '100%',\n    backgroundColor: \"blue\"\n  },\n  button: {\n    height: 30,\n    width: 30\n  }\n});\nexport var SlidingMenu = function (_React$Component) {\n  _inherits(SlidingMenu, _React$Component);\n\n  var _super = _createSuper(SlidingMenu);\n\n  function SlidingMenu() {\n    _classCallCheck(this, SlidingMenu);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SlidingMenu, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          state = _this$props.state,\n          toggleAnim = _this$props.toggleAnim;\n      Animated.spring(toggleAnim, {\n        toValue: state ? 0 : -200\n      }).start();\n      return React.createElement(Animated.View, {\n        style: [styles.sidebar, {\n          transform: [{\n            translateX: toggleAnim\n          }]\n        }]\n      });\n    }\n  }]);\n\n  return SlidingMenu;\n}(React.Component);\n\nvar ImageList = function ImageList() {\n  var _useContext = useContext(StateContext),\n      state = _useContext.state;\n\n  var toggleAnim = useRef(new Animated.Value(0)).current;\n  return React.createElement(React.Fragment, null, React.createElement(SlidingMenu, {\n    state: state.open,\n    toggleAnim: toggleAnim\n  }), React.createElement(View, {\n    style: styles.button\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return console.log('Button pressed');\n    }\n  }, \"Button\")));\n};\n\nexport default ImageList;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/ImageList.jsx"],"names":["React","useContext","useRef","StateContext","Button","styles","StyleSheet","create","sidebar","width","height","backgroundColor","button","SlidingMenu","props","state","toggleAnim","Animated","spring","toValue","start","transform","translateX","Component","ImageList","Value","current","open","console","log"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,QAA0C,OAA1C;;;;AAGA,SAASC,YAAT;AACA,OAAOC,MAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,GADA;AAEPC,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,eAAe,EAAE;AAHV,GADsB;AAM/BC,EAAAA,MAAM,EAAE;AACNF,IAAAA,MAAM,EAAE,EADF;AAEND,IAAAA,KAAK,EAAE;AAFD;AANuB,CAAlB,CAAf;AAaA,WAAaI,WAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAEW;AAAA,wBAGuB,KAAKC,KAH5B;AAAA,UAGCC,KAHD,eAGCA,KAHD;AAAA,UAGQC,UAHR,eAGQA,UAHR;AAKPC,MAAAA,QAAQ,CAACC,MAAT,CACEF,UADF,EAEE;AACEG,QAAAA,OAAO,EAAEJ,KAAK,GAAG,CAAH,GAAO,CAAC;AADxB,OAFF,EAKEK,KALF;AAOA,aACI,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,KAAK,EAAE,CAACf,MAAM,CAACG,OAAR,EAAiB;AACrCa,UAAAA,SAAS,EAAE,CAAC;AACVC,YAAAA,UAAU,EAAEN;AADF,WAAD;AAD0B,SAAjB;AAAtB,QADJ;AAQD;AAtBH;;AAAA;AAAA,EAAiChB,KAAK,CAACuB,SAAvC;;AA0BA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,oBACJvB,UAAU,CAACE,YAAD,CADN;AAAA,MACdY,KADc,eACdA,KADc;;AAEtB,MAAMC,UAAU,GAAGd,MAAM,CAAC,IAAIe,QAAQ,CAACQ,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAAjD;AAGA,SACE,0CACE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAEX,KAAK,CAACY,IADf;AAEE,IAAA,UAAU,EAAEX;AAFd,IADF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACO;AAApB,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMgB,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AAAA;AAAjB,cADF,CALF,CADF;AAYD,CAjBD;;AAmBA,eAAeL,SAAf","sourcesContent":["import React, { useContext, useRef } from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { StateContext } from '../state';\nimport Button from './Button';\n\nconst styles = StyleSheet.create({\n  sidebar: {\n    width: 200,\n    height: '100%', \n    backgroundColor: \"blue\"\n  },\n  button: {\n    height: 30,\n    width: 30,\n  }\n});\n\n\nexport class SlidingMenu extends React.Component {\n\n  render() {\n\n\n    const { state, toggleAnim } = this.props;\n\n    Animated.spring(\n      toggleAnim,\n      {\n        toValue: state ? 0 : -200,\n      }\n    ).start();\n\n    return (\n        <Animated.View style={[styles.sidebar, {\n          transform: [{\n            translateX: toggleAnim\n          }]\n        }]} />\n\n    );\n  }\n}\n\n\nconst ImageList = () => {\n  const { state } = useContext(StateContext);\n  const toggleAnim = useRef(new Animated.Value(0)).current;\n\n\n  return (\n    <>\n      <SlidingMenu\n        state={state.open}\n        toggleAnim={toggleAnim}\n      />\n      <View style={styles.button}>\n        <Button onPress={() => console.log('Button pressed')} >Button</Button>\n      </View>\n    </>\n\n  );\n};\n\nexport default ImageList;"]},"metadata":{},"sourceType":"module"}