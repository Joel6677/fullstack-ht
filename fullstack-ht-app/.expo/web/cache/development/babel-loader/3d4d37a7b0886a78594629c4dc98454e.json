{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { overlay, Surface } from 'react-native-paper';\nimport color from 'color';\nimport * as React from 'react';\nimport { useIndicator, useOffsetScroller } from \"./internal\";\nimport TabsHeaderItem from \"./TabsHeaderItem\";\nexport default function TabsHeader(_ref) {\n  var index = _ref.index,\n      goTo = _ref.goTo,\n      children = _ref.children,\n      position = _ref.position,\n      offset = _ref.offset,\n      theme = _ref.theme,\n      dark = _ref.dark,\n      style = _ref.style,\n      iconPosition = _ref.iconPosition,\n      showTextLabel = _ref.showTextLabel,\n      showLeadingSpace = _ref.showLeadingSpace,\n      uppercase = _ref.uppercase,\n      mode = _ref.mode;\n  var colors = theme.colors,\n      isDarkTheme = theme.dark,\n      themeMode = theme.mode;\n\n  var _ref2 = StyleSheet.flatten(style) || {},\n      customBackground = _ref2.backgroundColor,\n      _ref2$elevation = _ref2.elevation,\n      elevation = _ref2$elevation === void 0 ? 4 : _ref2$elevation,\n      restStyle = _objectWithoutProperties(_ref2, [\"backgroundColor\", \"elevation\"]);\n\n  var isDark;\n  var backgroundColor = customBackground ? customBackground : isDarkTheme && themeMode === 'adaptive' ? overlay(elevation, colors.surface) : colors.primary;\n  var hasPrimaryBackground = colors.primary === backgroundColor;\n\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else {\n    isDark = backgroundColor === 'transparent' ? false : !color(backgroundColor).isLight();\n  }\n\n  var textColor = isDark ? '#fff' : '#000';\n  var activeColor = hasPrimaryBackground ? textColor : theme.colors.primary;\n  var innerScrollSize = React.useRef(null);\n  var scrollX = React.useRef(0);\n  var scrollRef = React.useRef(null);\n  var layouts = React.useRef(null);\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      tabsLayout = _React$useState2[0],\n      setTabsLayout = _React$useState2[1];\n\n  var _useIndicator = useIndicator({\n    tabsLayout: tabsLayout,\n    layouts: layouts,\n    index: index,\n    offset: offset,\n    position: position,\n    childrenCount: children.length\n  }),\n      _useIndicator2 = _slicedToArray(_useIndicator, 3),\n      indicatorRef = _useIndicator2[0],\n      updateIndicator = _useIndicator2[1],\n      indicatorStyle = _useIndicator2[2];\n\n  var onTabsLayout = React.useCallback(function (e) {\n    setTabsLayout(e.nativeEvent.layout);\n  }, [setTabsLayout]);\n  var onTabLayout = React.useCallback(function (tabIndex, event) {\n    layouts.current = _objectSpread(_objectSpread({}, layouts.current), {}, _defineProperty({}, tabIndex, event.nativeEvent.layout));\n    updateIndicator();\n  }, [layouts, updateIndicator]);\n  var updateScroll = React.useCallback(function (scrollType) {\n    if (!layouts.current || mode !== 'scrollable') {\n      return;\n    }\n\n    var cl = layouts.current[index];\n\n    if (!cl || !scrollRef.current || !tabsLayout) {\n      return;\n    }\n\n    var tabsWidth = tabsLayout.width;\n    var scrolledX = scrollX.current;\n\n    if (scrollType === 'next') {\n      var _layouts$current;\n\n      var next = (_layouts$current = layouts.current) === null || _layouts$current === void 0 ? void 0 : _layouts$current[index + 1];\n\n      if (next) {\n        cl = next;\n      }\n    } else if (scrollType === 'prev') {\n      var _layouts$current2;\n\n      var prev = (_layouts$current2 = layouts.current) === null || _layouts$current2 === void 0 ? void 0 : _layouts$current2[index - 1];\n\n      if (prev) {\n        cl = prev;\n      }\n    }\n\n    var relativeX = cl.x - scrolledX;\n    var overflowLeft = relativeX;\n    var overflowRight = -tabsWidth + relativeX + cl.width;\n\n    if (overflowRight > -50) {\n      scrollRef.current.scrollTo({\n        x: scrolledX + overflowRight + 50,\n        y: 0,\n        animated: true\n      });\n    } else if (overflowLeft < 50) {\n      scrollRef.current.scrollTo({\n        x: scrolledX + overflowLeft - 50,\n        y: 0,\n        animated: true\n      });\n    }\n  }, [mode, layouts, index, scrollRef, scrollX, tabsLayout]);\n  useOffsetScroller({\n    updateScroll: updateScroll,\n    index: index,\n    offset: offset,\n    mode: mode\n  });\n  React.useEffect(function () {\n    updateScroll();\n  }, [updateScroll]);\n  React.useEffect(function () {\n    updateIndicator();\n  }, [updateIndicator]);\n  return React.createElement(View, {\n    style: styles.relative\n  }, React.createElement(Surface, {\n    style: [{\n      backgroundColor: backgroundColor,\n      elevation: elevation\n    }, restStyle, styles.tabs, iconPosition === 'top' && styles.tabsTopIcon],\n    onLayout: onTabsLayout\n  }, React.createElement(ScrollView, {\n    ref: scrollRef,\n    contentContainerStyle: mode === 'fixed' ? styles.fixedContentContainerStyle : undefined,\n    onContentSizeChange: function onContentSizeChange(e) {\n      innerScrollSize.current = e;\n    },\n    onScroll: function onScroll(e) {\n      scrollX.current = e.nativeEvent.contentOffset.x;\n    },\n    scrollEventThrottle: 25,\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    alwaysBounceHorizontal: mode === 'scrollable',\n    scrollEnabled: mode === 'scrollable'\n  }, mode === 'scrollable' && showLeadingSpace ? React.createElement(View, {\n    style: styles.scrollablePadding\n  }) : null, React.Children.map(children, function (tab, tabIndex) {\n    return React.createElement(TabsHeaderItem, {\n      theme: theme,\n      tabIndex: tabIndex,\n      tab: tab,\n      active: index === tabIndex,\n      onTabLayout: onTabLayout,\n      goTo: goTo,\n      activeColor: activeColor,\n      textColor: textColor,\n      position: position,\n      offset: offset,\n      childrenCount: children.length,\n      uppercase: uppercase,\n      iconPosition: iconPosition,\n      showTextLabel: showTextLabel,\n      mode: mode\n    });\n  }), React.createElement(Animated.View, {\n    ref: indicatorRef,\n    pointerEvents: \"none\",\n    style: [styles.indicator, {\n      backgroundColor: activeColor\n    }, indicatorStyle]\n  })), React.createElement(Animated.View, {\n    style: [styles.removeTopShadow, {\n      height: elevation,\n      backgroundColor: backgroundColor,\n      top: -elevation\n    }]\n  })));\n}\nvar styles = StyleSheet.create({\n  relative: {\n    position: 'relative'\n  },\n  removeTopShadow: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    zIndex: 2\n  },\n  scrollablePadding: {\n    width: 52\n  },\n  tabs: {\n    height: 48\n  },\n  tabsTopIcon: {\n    height: 72\n  },\n  fixedContentContainerStyle: {\n    flex: 1\n  },\n  indicator: _objectSpread({\n    position: 'absolute',\n    height: 2,\n    width: 1,\n    left: 0,\n    bottom: 0\n  }, Platform.select({\n    web: {\n      backgroundColor: 'transparent',\n      transitionDuration: '150ms',\n      transitionProperty: 'all',\n      transformOrigin: 'left',\n      willChange: 'transform'\n    },\n    default: {}\n  }))\n});","map":{"version":3,"sources":["TabsHeader.tsx"],"names":["mode","dark","themeMode","backgroundColor","elevation","restStyle","StyleSheet","customBackground","isDarkTheme","overlay","colors","hasPrimaryBackground","isDark","color","textColor","activeColor","theme","innerScrollSize","React","scrollX","scrollRef","layouts","useIndicator","tabsLayout","index","offset","position","childrenCount","children","length","onTabsLayout","e","setTabsLayout","onTabLayout","event","layout","updateIndicator","updateScroll","scrollType","cl","tabsWidth","scrolledX","next","prev","relativeX","overflowLeft","overflowRight","x","y","animated","useOffsetScroller","styles","relative","iconPosition","scrollablePadding","height","top","removeTopShadow","left","right","zIndex","width","tabs","tabsTopIcon","fixedContentContainerStyle","flex","indicator","bottom","web","transitionDuration","transitionProperty","transformOrigin","willChange","default"],"mappings":"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","sourcesContent":["import type { SwiperRenderProps } from './utils';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  LayoutRectangle,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  ViewStyle,\n  View,\n} from 'react-native';\nimport { overlay, Surface } from 'react-native-paper';\nimport color from 'color';\nimport * as React from 'react';\nimport { useIndicator, useOffsetScroller } from './internal';\nimport TabsHeaderItem from './TabsHeaderItem';\n\nexport default function TabsHeader({\n  index,\n  goTo,\n  children,\n  position,\n  offset,\n  theme,\n  dark,\n  style,\n  iconPosition,\n  showTextLabel,\n  showLeadingSpace,\n  uppercase,\n  mode,\n}: SwiperRenderProps) {\n  const { colors, dark: isDarkTheme, mode: themeMode } = theme;\n  const {\n    backgroundColor: customBackground,\n    elevation = 4,\n    ...restStyle\n  }: ViewStyle = StyleSheet.flatten(style) || {};\n\n  let isDark: boolean;\n\n  const backgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && themeMode === 'adaptive'\n    ? overlay(elevation, colors.surface)\n    : colors.primary;\n\n  let hasPrimaryBackground = colors.primary === backgroundColor;\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else {\n    isDark =\n      backgroundColor === 'transparent'\n        ? false\n        : // @ts-ignore\n          !color(backgroundColor).isLight();\n  }\n  const textColor = isDark ? '#fff' : '#000';\n  const activeColor = hasPrimaryBackground ? textColor : theme.colors.primary;\n\n  const innerScrollSize = React.useRef<number | null>(null);\n  const scrollX = React.useRef<number>(0);\n  const scrollRef = React.useRef<ScrollView>(null);\n  const layouts = React.useRef<Record<string, LayoutRectangle> | null>(null);\n  const [tabsLayout, setTabsLayout] = React.useState<LayoutRectangle | null>(\n    null\n  );\n  const [indicatorRef, updateIndicator, indicatorStyle] = useIndicator({\n    tabsLayout,\n    layouts,\n    index,\n    offset,\n    position,\n    childrenCount: children.length,\n  });\n\n  const onTabsLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      setTabsLayout(e.nativeEvent.layout);\n    },\n    [setTabsLayout]\n  );\n\n  const onTabLayout = React.useCallback(\n    (tabIndex: number, event: LayoutChangeEvent) => {\n      layouts.current = {\n        ...layouts.current,\n        [tabIndex]: event.nativeEvent.layout,\n      };\n      updateIndicator();\n    },\n    [layouts, updateIndicator]\n  );\n\n  const updateScroll = React.useCallback(\n    (scrollType?: 'next' | 'prev') => {\n      if (!layouts.current || mode !== 'scrollable') {\n        return;\n      }\n      let cl = layouts.current[index];\n\n      if (!cl || !scrollRef.current || !tabsLayout) {\n        return;\n      }\n\n      const tabsWidth = tabsLayout.width;\n      let scrolledX = scrollX.current;\n      // console.log({ scrolledX, scrollType });\n      if (scrollType === 'next') {\n        const next = layouts.current?.[index + 1];\n        if (next) {\n          cl = next;\n        }\n      } else if (scrollType === 'prev') {\n        const prev = layouts.current?.[index - 1];\n        if (prev) {\n          cl = prev;\n        }\n      }\n      const relativeX = cl.x - scrolledX;\n      const overflowLeft = relativeX;\n      const overflowRight = -tabsWidth + relativeX + cl.width;\n\n      if (overflowRight > -50) {\n        scrollRef.current.scrollTo({\n          x: scrolledX + overflowRight + 50,\n          y: 0,\n          animated: true,\n        });\n      } else if (overflowLeft < 50) {\n        scrollRef.current.scrollTo({\n          x: scrolledX + overflowLeft - 50,\n          y: 0,\n          animated: true,\n        });\n      }\n    },\n    [mode, layouts, index, scrollRef, scrollX, tabsLayout]\n  );\n\n  // subscribes to offset on native devices to scroll tab bar faster when scrolling (iOS only since Android bugs)\n  useOffsetScroller({ updateScroll, index, offset, mode });\n\n  // updates scroll when index changes (updateScroll function changes to new reference when index changes)\n  React.useEffect(() => {\n    updateScroll();\n  }, [updateScroll]);\n\n  // update indicator when index changes (updateIndicator function changes to new reference when index changes)\n  React.useEffect(() => {\n    updateIndicator();\n  }, [updateIndicator]);\n\n  return (\n    <View style={styles.relative}>\n      <Surface\n        style={[\n          { backgroundColor, elevation },\n          restStyle,\n          styles.tabs,\n          iconPosition === 'top' && styles.tabsTopIcon,\n        ]}\n        onLayout={onTabsLayout}\n      >\n        <ScrollView\n          ref={scrollRef}\n          contentContainerStyle={\n            mode === 'fixed' ? styles.fixedContentContainerStyle : undefined\n          }\n          onContentSizeChange={(e) => {\n            innerScrollSize.current = e;\n          }}\n          onScroll={(e) => {\n            scrollX.current = e.nativeEvent.contentOffset.x;\n          }}\n          scrollEventThrottle={25}\n          horizontal={true}\n          showsHorizontalScrollIndicator={false}\n          alwaysBounceHorizontal={mode === 'scrollable'}\n          scrollEnabled={mode === 'scrollable'}\n        >\n          {mode === 'scrollable' && showLeadingSpace ? (\n            <View style={styles.scrollablePadding} />\n          ) : null}\n\n          {React.Children.map(children, (tab, tabIndex) => (\n            <TabsHeaderItem\n              theme={theme}\n              tabIndex={tabIndex}\n              tab={tab}\n              active={index === tabIndex}\n              onTabLayout={onTabLayout}\n              goTo={goTo}\n              activeColor={activeColor}\n              textColor={textColor}\n              position={position}\n              offset={offset}\n              childrenCount={children.length}\n              uppercase={uppercase}\n              iconPosition={iconPosition}\n              showTextLabel={showTextLabel}\n              mode={mode}\n            />\n          ))}\n          <Animated.View\n            ref={indicatorRef}\n            pointerEvents=\"none\"\n            style={[\n              styles.indicator,\n              {\n                backgroundColor: activeColor,\n              },\n              indicatorStyle,\n            ]}\n          />\n        </ScrollView>\n        <Animated.View\n          style={[\n            styles.removeTopShadow,\n            {\n              height: elevation,\n              backgroundColor,\n              top: -elevation,\n            },\n          ]}\n        />\n      </Surface>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  relative: { position: 'relative' },\n  removeTopShadow: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    zIndex: 2,\n  },\n  scrollablePadding: {\n    width: 52,\n  },\n  tabs: {\n    height: 48,\n  },\n  tabsTopIcon: {\n    height: 72,\n  },\n  fixedContentContainerStyle: {\n    flex: 1,\n  },\n  indicator: {\n    position: 'absolute',\n    height: 2,\n    width: 1,\n    left: 0,\n    bottom: 0,\n    ...Platform.select({\n      web: {\n        backgroundColor: 'transparent',\n        transitionDuration: '150ms',\n        transitionProperty: 'all',\n        transformOrigin: 'left',\n        willChange: 'transform',\n      },\n      default: {},\n    }),\n  },\n});\n"]},"metadata":{},"sourceType":"module"}