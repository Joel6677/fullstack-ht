{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SignUpPhone.jsx\";\nimport React, { useRef, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { FirebaseRecaptchaVerifierModal, FirebaseRecaptchaBanner } from 'expo-firebase-recaptcha';\nimport * as firebase from 'firebase';\nimport { firebaseConfig } from \"../firebase/Fire\";\nvar styles = StyleSheet.create({\n  container: {},\n  button: {\n    margin: 30\n  },\n  heading: {\n    alignItems: 'center'\n  }\n});\n\nvar SignUpPhone = function SignUpPhone() {\n  var recaptchaVerifier = useRef(null);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      phoneNumber = _useState2[0],\n      setPhoneNumber = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      verificationId = _useState4[0],\n      setVerificationId = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      verificationCode = _useState6[0],\n      setVerificationCode = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      showMessage = _useState8[1];\n\n  var attemptInvisibleVerification = false;\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(FirebaseRecaptchaVerifierModal, {\n    ref: recaptchaVerifier,\n    firebaseConfig: firebaseConfig,\n    attemptInvisibleVerification: attemptInvisibleVerification\n  }));\n};\n\nexport default SignUpPhone;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SignUpPhone.jsx"],"names":["React","useRef","useState","FirebaseRecaptchaVerifierModal","FirebaseRecaptchaBanner","firebase","firebaseConfig","styles","StyleSheet","create","container","button","margin","heading","alignItems","SignUpPhone","recaptchaVerifier","phoneNumber","setPhoneNumber","verificationId","setVerificationId","verificationCode","setVerificationCode","message","showMessage","attemptInvisibleVerification"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;;;;;;;AASA,SAASC,8BAAT,EAAyCC,uBAAzC,QAAwE,yBAAxE;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,SAAQC,cAAR;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE,EADkB;AAG7BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE;AADF,GAHqB;AAM7BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE;AADL;AANoB,CAAlB,CAAf;;AAYA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAEtB,MAAMC,iBAAiB,GAAGf,MAAM,CAAC,IAAD,CAAhC;;AAFsB,kBAGgBC,QAAQ,EAHxB;AAAA;AAAA,MAGfe,WAHe;AAAA,MAGFC,cAHE;;AAAA,mBAIsBhB,QAAQ,EAJ9B;AAAA;AAAA,MAIfiB,cAJe;AAAA,MAICC,iBAJD;;AAAA,mBAK0BlB,QAAQ,EALlC;AAAA;AAAA,MAKfmB,gBALe;AAAA,MAKGC,mBALH;;AAAA,mBAMSpB,QAAQ,EANjB;AAAA;AAAA,MAMfqB,OANe;AAAA,MAMNC,WANM;;AAQtB,MAAMC,4BAA4B,GAAG,KAArC;AAIA,SAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACG;AAApB,KACI,oBAAC,8BAAD;AACI,IAAA,GAAG,EAAEM,iBADT;AAEI,IAAA,cAAc,EAAEV,cAFpB;AAGI,IAAA,4BAA4B,EAAEmB;AAHlC,IADJ,CAFJ;AA0FH,CAtGD;;AAwGA,eAAeV,WAAf","sourcesContent":["import React, {useRef, useState} from 'react';\nimport {\n    Text,\n    View,\n    TextInput,\n    Button,\n    StyleSheet,\n    TouchableOpacity\n} from 'react-native';\nimport { FirebaseRecaptchaVerifierModal, FirebaseRecaptchaBanner } from 'expo-firebase-recaptcha';\nimport * as firebase from 'firebase';\nimport {firebaseConfig} from '../firebase/Fire';\n\n\nconst styles = StyleSheet.create({\n    container: {\n    },\n    button: {\n      margin: 30\n    },\n    heading: {\n      alignItems: 'center'\n    }\n  });\n  \n\nconst SignUpPhone = () => {\n\n    const recaptchaVerifier = useRef(null);\n    const [phoneNumber, setPhoneNumber] = useState();\n    const [verificationId, setVerificationId] = useState();\n    const [verificationCode, setVerificationCode] = useState();\n    const [message, showMessage] = useState();\n\n    const attemptInvisibleVerification = false;\n\n\n\n    return (\n\n        <View style={styles.container}>\n            <FirebaseRecaptchaVerifierModal\n                ref={recaptchaVerifier}\n                firebaseConfig={firebaseConfig}\n                attemptInvisibleVerification={attemptInvisibleVerification}\n            />\n            {/* <Text>Enter phone number</Text>\n            <TextInput\n                style={{ marginVertical: 10, fontSize: 17 }}\n                placeholder=\"+1 999 999 9999\"\n                autoFocus\n                autoCompleteType=\"tel\"\n                keyboardType=\"phone-pad\"\n                textContentType=\"telephoneNumber\"\n                onChangeText={phoneNumber => setPhoneNumber(phoneNumber)}\n            />\n            <Button\n                title=\"Send Verification Code\"\n                disabled={!phoneNumber}\n                onPress={async () => {\n                    // The FirebaseRecaptchaVerifierModal ref implements the\n                    // FirebaseAuthApplicationVerifier interface and can be\n                    // passed directly to `verifyPhoneNumber`.\n                    try {\n                        const phoneProvider = new firebase.auth.PhoneAuthProvider();\n                        const verificationId = await phoneProvider.verifyPhoneNumber(\n                            phoneNumber,\n                            recaptchaVerifier.current\n                        );\n                        setVerificationId(verificationId);\n                        showMessage({\n                            text: 'Verification code has been sent to your phone.',\n                        });\n                    } catch (err) {\n                        showMessage({ text: `Error: ${err.message}`, color: 'red' });\n                    }\n                }}\n            />\n            <Text style={{ marginTop: 20 }}>Enter Verification code</Text>\n            <TextInput\n                style={{ marginVertical: 10, fontSize: 17 }}\n                editable={!!verificationId}\n                placeholder=\"123456\"\n                onChangeText={setVerificationCode}\n            />\n            <Button\n                title=\"Confirm Verification Code\"\n                disabled={!verificationId}\n                onPress={async () => {\n                    try {\n                        const credential = firebase.auth.PhoneAuthProvider.credential(\n                            verificationId,\n                            verificationCode\n                        );\n                        await firebase.auth().signInWithCredential(credential);\n                        showMessage({ text: 'Phone authentication successful 👍' });\n                    } catch (err) {\n                        showMessage({ text: `Error: ${err.message}`, color: 'red' });\n                    }\n                }}\n            />\n            {message ? (\n                <TouchableOpacity\n                    style={[\n                        StyleSheet.absoluteFill,\n                        { backgroundColor: 0xffffffee, justifyContent: 'center' },\n                    ]}\n                    onPress={() => showMessage(undefined)}>\n                    <Text\n                        style={{\n                            color: message.color || 'blue',\n                            fontSize: 17,\n                            textAlign: 'center',\n                            margin: 20,\n                        }}>\n                        {message.text}\n                    </Text>\n                </TouchableOpacity>\n            ) : (\n                    undefined\n                )}\n            {attemptInvisibleVerification && <FirebaseRecaptchaBanner />} */}\n        </View>\n\n    );\n\n\n\n};\n\nexport default SignUpPhone;"]},"metadata":{},"sourceType":"module"}