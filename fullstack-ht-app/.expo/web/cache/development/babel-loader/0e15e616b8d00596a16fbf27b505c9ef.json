{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Messages.jsx\";\nimport React, { useState, useContext, useRef, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button, TextInput } from 'react-native-paper';\nimport * as firebase from 'firebase';\nimport { sendChatMessage } from \"../firebase/chat\";\nimport { GiftedChat } from 'react-native-gifted-chat';\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1\n  },\n  messengerContainer: {},\n  messageContainerSend: {\n    backgroundcolor: 'red'\n  },\n  messageContainerReceived: {\n    backgroundcolor: 'yellow'\n  },\n  sendMessageContainer: {\n    flexDirection: 'row'\n  }\n});\n\nvar Messages = function Messages(_ref) {\n  var otherUser = _ref.otherUser;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var currentUser = firebase.auth().currentUser;\n\n  var chatID = function chatID() {\n    var chatterID = currentUser.uid;\n    var chateeID = otherUser.uid;\n    var chatIDpre = [];\n    chatIDpre.push(chatterID);\n    chatIDpre.push(chateeID);\n    chatIDpre.sort();\n    return chatIDpre.join('_');\n  };\n\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n  }, []);\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(GiftedChat, {\n    messages: messages,\n    onSend: function onSend(messages) {\n      return _onSend(messages);\n    },\n    user: {\n      _id: 1\n    }\n  }), React.createElement(View, {\n    style: styles.sendMessageContainer\n  }, React.createElement(TextInput, {\n    label: \"\",\n    value: text,\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    }\n  }), React.createElement(Button, {\n    icon: \"send\",\n    onPress: function onPress() {\n      sendChatMessage(chatID, text);\n    }\n  })));\n};\n\nexport default Messages;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Messages.jsx"],"names":["React","useState","useContext","useRef","useEffect","useCallback","Button","TextInput","firebase","sendChatMessage","GiftedChat","styles","StyleSheet","create","container","flexDirection","justifyContent","alignItems","height","width","position","zIndex","messengerContainer","messageContainerSend","backgroundcolor","messageContainerReceived","sendMessageContainer","Messages","otherUser","messages","setMessages","text","setText","currentUser","auth","chatID","chatterID","uid","chateeID","chatIDpre","push","sort","join","onSend","previousMessages","append","_id"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useRef, useEffect, useCallback } from 'react';\nimport {View, StyleSheet} from 'react-native';\nimport {Button, TextInput} from 'react-native-paper';\nimport * as firebase from 'firebase';\nimport { sendChatMessage } from '../firebase/chat';\nimport { GiftedChat } from 'react-native-gifted-chat'\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n        position: 'absolute',\n        zIndex: 1\n    },\n    messengerContainer: {\n\n    },\n    messageContainerSend: {\n        backgroundcolor: 'red'\n        \n    },\n    messageContainerReceived: {\n        backgroundcolor: 'yellow'\n    },\n    sendMessageContainer: {\n        flexDirection: 'row'\n    }\n});\n\n\n\nconst Messages = ({otherUser}) => {\n\n    const [messages, setMessages] = useState([]);\n\n    const [text, setText] = useState('');\n    const currentUser = firebase.auth().currentUser;\n\n    const chatID = () => {\n        const chatterID = currentUser.uid;\n        const chateeID = otherUser.uid;\n        const chatIDpre = [];\n        chatIDpre.push(chatterID);\n        chatIDpre.push(chateeID);\n        chatIDpre.sort();\n        return chatIDpre.join('_');\n      };\n    \n\n    // const db = firebase.firestore();\n    //   db.collection('messages')\n    //     .doc(chatID)\n    //     .collection('chats')\n    //     .orderBy('createdAt', 'desc')\n    //     .onSnapshot((doc) => {\n    //         setMessages(doc.docs);\n    //         console.log(doc.docs);         \n    //     });\n\n    const onSend = useCallback((messages = []) => {\n        setMessages(previousMessages => GiftedChat.append(previousMessages, messages));\n    }, []);\n\n    return(\n        <View style={styles.container}>\n\n            <GiftedChat\n                messages={messages}\n                onSend={messages => onSend(messages)}\n                user={{\n                    _id: 1\n                }}\n            />\n\n            <View style={styles.sendMessageContainer}>\n                <TextInput\n                    label=\"\"\n                    value={text}\n                    onChangeText={text => setText(text)}\n                />\n                <Button icon=\"send\" onPress={()=>{sendChatMessage(chatID,text);}} />\n            </View>\n                    \n        </View>\n    );\n};\n\nexport default Messages;"]},"metadata":{},"sourceType":"module"}