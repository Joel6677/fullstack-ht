{"ast":null,"code":"var _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UploadUserInfo.jsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button } from 'react-native-paper';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-native';\nimport * as yup from 'yup';\nimport FormikTextInput from \"./FormikTextInput\";\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    alignContent: 'center',\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    flex: 1,\n    zIndex: 1\n  },\n  fieldContainer: {\n    marginBottom: 15\n  },\n  text: {\n    fontSize: 80\n  }\n});\nvar initialValues = {\n  firstName: '',\n  lastName: '',\n  birthdate: '',\n  country: '',\n  bio: ''\n};\nvar validationSchema = yup.object().shape({\n  firstName: yup.string().min(1, 'First name must be at least 1 charaters long').required('First name is required'),\n  lastName: yup.string().min(1, 'Last name must be at least 1 characters long').required('Last name is required'),\n  birthdate: yup.date().min(8, 'Birthdate must be atleast 8 characters').max(8, 'Birthdate must be at most 8 characters long').required('Birtdate is required'),\n  country: yup.string().required('Country is required'),\n  bio: yup.string().max(150, 'Bio can be at most 150 characters long')\n});\n\nvar UserinfoForm = function UserinfoForm(_ref) {\n  var onSubmit = _ref.onSubmit;\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"firstName\",\n    placeholder: \"First name\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"lastName\",\n    placeholder: \"Last name\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"country\",\n    placeholder: \"Country\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"bio\",\n    placeholder: \"Bio\",\n    multiline: true,\n    numberOfLines: 4\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(ScrollView, null, React.createElement(Text, null, \"1 2 3 4 5 6 7 8 9\"))), React.createElement(Button, {\n    mode: 'outlined',\n    onPress: onSubmit\n  }, \"Submit\"));\n};\n\nvar UploadUserInfo = function UploadUserInfo() {\n  var history = useHistory();\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(ScrollView, null, React.createElement(Text, {\n    style: styles.text\n  }, \"1 2 3 4 5 6 7aslkdfjalsdkfjas sdjfklasdjflkaj asdfaskdlfj asdfasdklfjasldkj asdkflasjkdlfajsldkjfas 8 9\"))));\n};\n\nexport default UploadUserInfo;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UploadUserInfo.jsx"],"names":["React","useState","Button","Formik","useHistory","yup","FormikTextInput","styles","StyleSheet","create","container","flexDirection","justifyContent","flexWrap","alignContent","height","width","position","flex","zIndex","fieldContainer","marginBottom","text","fontSize","initialValues","firstName","lastName","birthdate","country","bio","validationSchema","object","shape","string","min","required","date","max","UserinfoForm","onSubmit","UploadUserInfo","history"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,eAAP;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,aAAa,EAAE,QADN;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,QAAQ,EAAE,MAHD;AAITC,IAAAA,YAAY,EAAE,QAJL;AAKTC,IAAAA,MAAM,EAAE,MALC;AAMTC,IAAAA,KAAK,EAAE,MANE;AAOTC,IAAAA,QAAQ,EAAE,UAPD;AAQTC,IAAAA,IAAI,EAAE,CARG;AASTC,IAAAA,MAAM,EAAE;AATC,GADkB;AAY7BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,YAAY,EAAE;AADA,GAZa;AAe7BC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR;AAfuB,CAAlB,CAAf;AAoBA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,SAAS,EAAE,EADO;AAElBC,EAAAA,QAAQ,EAAE,EAFQ;AAGlBC,EAAAA,SAAS,EAAE,EAHO;AAIlBC,EAAAA,OAAO,EAAE,EAJS;AAKlBC,EAAAA,GAAG,EAAE;AALa,CAAtB;AASA,IAAMC,gBAAgB,GAAGzB,GAAG,CAAC0B,MAAJ,GAAaC,KAAb,CAAmB;AACxCP,EAAAA,SAAS,EAAEpB,GAAG,CACT4B,MADM,GAENC,GAFM,CAEF,CAFE,EAEC,8CAFD,EAGNC,QAHM,CAGG,wBAHH,CAD6B;AAKxCT,EAAAA,QAAQ,EAAErB,GAAG,CACR4B,MADK,GAELC,GAFK,CAED,CAFC,EAEE,8CAFF,EAGLC,QAHK,CAGI,uBAHJ,CAL8B;AASxCR,EAAAA,SAAS,EAAEtB,GAAG,CACT+B,IADM,GAENF,GAFM,CAEF,CAFE,EAEC,wCAFD,EAGNG,GAHM,CAGF,CAHE,EAGC,6CAHD,EAINF,QAJM,CAIG,sBAJH,CAT6B;AAcxCP,EAAAA,OAAO,EAAEvB,GAAG,CACP4B,MADI,GAEJE,QAFI,CAEK,qBAFL,CAd+B;AAiBxCN,EAAAA,GAAG,EAAExB,GAAG,CACH4B,MADA,GAEAI,GAFA,CAEI,GAFJ,EAES,wCAFT;AAjBmC,CAAnB,CAAzB;;AAsBA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAGnC,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhC,MAAM,CAACG;AAApB,KAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACa;AAApB,KACI,oBAAC,eAAD;AACI,IAAA,IAAI,EAAC,WADT;AAEI,IAAA,WAAW,EAAC;AAFhB,IADJ,CAFJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACa;AAApB,KACI,oBAAC,eAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,WAAW,EAAC;AAFhB,IADJ,CARJ,EAcI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACa;AAApB,KACI,oBAAC,eAAD;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,WAAW,EAAC;AAFhB,IADJ,CAdJ,EAqBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACa;AAApB,KACI,oBAAC,eAAD;AACI,IAAA,IAAI,EAAC,KADT;AAEI,IAAA,WAAW,EAAC,KAFhB;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,aAAa,EAAE;AAJnB,IADJ,CArBJ,EA8BI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACa;AAApB,KACI,oBAAC,UAAD,QACI,oBAAC,IAAD,4BADJ,CADJ,CA9BJ,EAoCA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,UAAd;AAA0B,IAAA,OAAO,EAAEmB;AAAnC,cApCA,CADJ;AA2CH,CA9CD;;AAgDA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAEzB,MAAMC,OAAO,GAAGrC,UAAU,EAA1B;AAWA,SACQ,0CACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACG;AAApB,KACI,oBAAC,UAAD,QACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACe;AAApB,+GADJ,CADJ,CADA,CADR;AAsBH,CAnCD;;AAqCA,eAAekB,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet, ScrollView, Text, FlatList} from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { Formik } from 'formik';\nimport { useHistory } from 'react-router-native';\nimport * as yup from 'yup';\nimport FormikTextInput from './FormikTextInput';\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flexDirection: 'column',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      alignContent: 'center',\n      height: '100%',\n      width: '100%',\n      position: 'absolute',\n      flex: 1,\n      zIndex: 1\n    },\n    fieldContainer: {\n      marginBottom: 15,\n    },\n    text: {\n        fontSize: 80\n    }\n  });\n\nconst initialValues = {\n    firstName: '',\n    lastName: '',\n    birthdate: '',\n    country: '',\n    bio: ''\n\n};\n\nconst validationSchema = yup.object().shape({\n    firstName: yup\n        .string()\n        .min(1, 'First name must be at least 1 charaters long')\n        .required('First name is required'),\n    lastName: yup\n        .string()\n        .min(1, 'Last name must be at least 1 characters long')\n        .required('Last name is required'),\n    birthdate: yup\n        .date()\n        .min(8, 'Birthdate must be atleast 8 characters')\n        .max(8, 'Birthdate must be at most 8 characters long')\n        .required('Birtdate is required'),\n    country: yup\n        .string()\n        .required('Country is required'),\n    bio: yup\n        .string()\n        .max(150, 'Bio can be at most 150 characters long'),\n});\n\nconst UserinfoForm = ({ onSubmit }) => {\n\n\n    return (\n        <View style={styles.container}>\n\n            <View style={styles.fieldContainer}>\n                <FormikTextInput\n                    name=\"firstName\"\n                    placeholder=\"First name\" />\n            </View>\n\n            <View style={styles.fieldContainer}>\n                <FormikTextInput\n                    name=\"lastName\"\n                    placeholder=\"Last name\" />\n            </View>\n\n            <View style={styles.fieldContainer}>\n                <FormikTextInput\n                    name=\"country\"\n                    placeholder=\"Country\"\n                />\n            </View>\n\n            <View style={styles.fieldContainer}>\n                <FormikTextInput\n                    name=\"bio\"\n                    placeholder=\"Bio\"\n                    multiline\n                    numberOfLines={4}\n                />\n            </View>\n\n            <View style={styles.fieldContainer}>\n                <ScrollView>\n                    <Text>1 2 3 4 5 6 7 8 9</Text>\n                </ScrollView>\n            </View>\n\n        <Button mode={'outlined'} onPress={onSubmit}>\n            Submit\n        </Button>\n\n        </View>\n    );\n};\n\nconst UploadUserInfo = () => {\n\n    const history = useHistory();\n\n    // const onSubmit = async (values) => {\n    //     const { email, password } = values;\n\n    //     SignUpWithEmail(email, password);\n\n    //     history.push(\"/choose-pic\");\n    // };\n\n\n    return (\n            <>\n            <View style={styles.container}>\n                <ScrollView>\n                    <Text style={styles.text}>1 2 3 4 5 6 7aslkdfjalsdkfjas\n                    sdjfklasdjflkaj\n                    asdfaskdlfj\n                    asdfasdklfjasldkj\n                    asdkflasjkdlfajsldkjfas 8 9</Text>\n                </ScrollView>\n            </View>\n\n            {/* <Formik\n                style={styles.container}\n                initialValues={initialValues}\n                onSubmit={()=>{history.push('/');}}\n                validationSchema={validationSchema}\n            >\n                {({ handleSubmit }) => <UserinfoForm onSubmit={handleSubmit} />}\n            </Formik> */}\n            </>\n    );\n};\n\nexport default UploadUserInfo;"]},"metadata":{},"sourceType":"module"}