{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyMessages.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useHistory } from 'react-router-native';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { getMyMessages } from \"../firebase/chat\";\nimport MessageItem from \"./MessageItem\";\nvar styles = StyleSheet.create({\n  container: {\n    padding: 5,\n    height: '100%',\n    width: '100%',\n    position: 'absolute'\n  },\n  separator: {\n    marginVertical: 5\n  },\n  headerContainer: {\n    padding: 10\n  },\n  searchContainer: {\n    marginBottom: 15\n  }\n});\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator\n  });\n};\n\nvar MyMessages = function MyMessages() {\n  var history = useHistory();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  useEffect(function () {\n    getMyMessages().then(function (querySnapshot) {\n      console.log(querySnapshot);\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(FlatList, {\n    data: messages,\n    keyExtractor: function keyExtractor(_ref) {\n      var id = _ref.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        key: item.id,\n        onPress: function onPress() {\n          return history.push(\"/messenger/\" + item.id);\n        }\n      }, React.createElement(MessageItem, {\n        message: item\n      }));\n    },\n    ItemSeparatorComponent: ItemSeparator\n  }));\n};\n\nexport default MyMessages;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyMessages.jsx"],"names":["React","useState","useEffect","useHistory","firebase","getMyMessages","MessageItem","styles","StyleSheet","create","container","padding","height","width","position","separator","marginVertical","headerContainer","searchContainer","marginBottom","ItemSeparator","MyMessages","history","messages","setMessages","then","querySnapshot","console","log","catch","error","id","item","push"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,UAAT,QAA2B,qBAA3B;AAGA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AACA,SAAQC,aAAR;AACA,OAAOC,WAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,OAAO,EAAE,CADF;AAEPC,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,KAAK,EAAE,MAHA;AAIPC,IAAAA,QAAQ,EAAE;AAJH,GADkB;AAO7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,cAAc,EAAE;AADT,GAPkB;AAU7BC,EAAAA,eAAe,EAAE;AACbN,IAAAA,OAAO,EAAE;AADI,GAVY;AAa7BO,EAAAA,eAAe,EAAE;AACbC,IAAAA,YAAY,EAAE;AADD;AAbY,CAAlB,CAAf;;AAkBA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAGxB,SAAO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACQ;AAApB,IAAP;AAIH,CAPD;;AAUA,IAAMM,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,MAAMC,OAAO,GAAGnB,UAAU,EAA1B;;AADqB,kBAEWF,QAAQ,CAAC,EAAD,CAFnB;AAAA;AAAA,MAEdsB,QAFc;AAAA,MAEJC,WAFI;;AAIrBtB,EAAAA,SAAS,CAAC,YAAM;AACZG,IAAAA,aAAa,GACRoB,IADL,CACU,UAACC,aAAD,EAAmB;AAErBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AAQH,KAXL,EAYKG,KAZL,CAYW,UAACC,KAAD,EAAW;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCE,KAAzC;AACH,KAdL;AAgBH,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACG;AAApB,KACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEa,QADV;AAEI,IAAA,YAAY,EAAE;AAAA,UAAGQ,EAAH,QAAGA,EAAH;AAAA,aAAYA,EAAZ;AAAA,KAFlB;AAGI,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aACR,oBAAC,gBAAD;AACI,QAAA,GAAG,EAAEA,IAAI,CAACD,EADd;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAMT,OAAO,CAACW,IAAR,iBAA2BD,IAAI,CAACD,EAAhC,CAAN;AAAA;AAFb,SAII,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEC;AAAtB,QAJJ,CADQ;AAAA,KAHhB;AAWI,IAAA,sBAAsB,EAAEZ;AAX5B,IADJ,CADJ;AAiBH,CAxCD;;AA0CA,eAAeC,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FlatList, View, StyleSheet, TouchableOpacity } from 'react-native';\nimport { useHistory } from 'react-router-native';\n// import MessageItem from './MessageItem';\n// import * as firebase from 'firebase';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport {getMyMessages} from '../firebase/chat';\nimport MessageItem from './MessageItem';\n\nconst styles = StyleSheet.create({\n    container: {\n        padding: 5,\n        height: '100%',\n        width: '100%',\n        position: 'absolute',\n    },\n    separator: {\n        marginVertical: 5\n    },\n    headerContainer: {\n        padding: 10,\n    },\n    searchContainer: {\n        marginBottom: 15,\n    },\n});\n\nconst ItemSeparator = () => {\n\n\n    return(<View style={styles.separator}>\n\n    </View>);\n\n};\n\n\nconst MyMessages = () => {\n    const history = useHistory();\n    const [messages, setMessages] = useState('');\n\n    useEffect(() => {\n        getMyMessages()\n            .then((querySnapshot) => {\n\n                console.log(querySnapshot);\n                // let posts = querySnapshot.docs.map(doc => {\n                //     const data = doc.data();\n                //     console.log(data);\n                //     const id = doc.id;\n                //     return { id, ...data };\n                // });\n                // setMessages(posts);\n            })\n            .catch((error) => {\n                console.log(\"Error getting documents: \", error);\n            });\n\n    }, []);\n\n    return (\n        <View style={styles.container}>\n            <FlatList\n                data={messages}\n                keyExtractor={({ id }) => id}\n                renderItem={({ item }) => (\n                    <TouchableOpacity\n                        key={item.id}\n                        onPress={() => history.push(`/messenger/${item.id}`)}\n                    >\n                        <MessageItem message={item} />\n                    </TouchableOpacity>\n                )}\n                ItemSeparatorComponent={ItemSeparator}\n            />\n        </View>\n    );\n};\n\nexport default MyMessages;"]},"metadata":{},"sourceType":"module"}