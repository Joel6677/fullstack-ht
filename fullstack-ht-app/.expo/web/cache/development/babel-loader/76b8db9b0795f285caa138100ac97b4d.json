{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UserList.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useHistory } from 'react-router-native';\nimport { Searchbar, Divider } from 'react-native-paper';\nimport { useDebounce } from 'use-debounce';\nimport UserItem from \"./UserItem\";\nimport Picker from \"./Picker\";\nimport * as firebase from 'firebase';\nvar styles = StyleSheet.create({\n  container: {\n    padding: 5,\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1,\n    paddingTop: 80,\n    paddingBottom: 60\n  },\n  separator: {\n    marginVertical: 5\n  },\n  headerContainer: {\n    padding: 10\n  },\n  searchContainer: {\n    marginBottom: 15\n  }\n});\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator\n  }, React.createElement(Divider, null));\n};\n\nvar orderByOptions = [{\n  label: 'Latest repositories',\n  value: 'latest'\n}, {\n  label: 'Highest rated repositories',\n  value: 'highestRating'\n}, {\n  label: 'Lowest rated repositories',\n  value: 'lowestRating'\n}];\nexport var UserListContainer = function (_React$Component) {\n  _inherits(UserListContainer, _React$Component);\n\n  var _super = _createSuper(UserListContainer);\n\n  function UserListContainer() {\n    _classCallCheck(this, UserListContainer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(UserListContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          users = _this$props.users,\n          onEndReach = _this$props.onEndReach,\n          onUserPress = _this$props.onUserPress;\n      return React.createElement(FlatList, {\n        data: users,\n        keyExtractor: function keyExtractor(_ref) {\n          var id = _ref.id;\n          return id;\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return React.createElement(TouchableOpacity, {\n            key: item.id,\n            onPress: function onPress() {\n              return onUserPress(item.id);\n            }\n          }, React.createElement(UserItem, {\n            user: item\n          }));\n        },\n        ItemSeparatorComponent: ItemSeparator\n      });\n    }\n  }]);\n\n  return UserListContainer;\n}(React.Component);\n\nvar UserList = function UserList() {\n  var history = useHistory();\n\n  var _useState = useState('latest'),\n      _useState2 = _slicedToArray(_useState, 2),\n      orderBy = _useState2[0],\n      setOrderBy = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchKeyword = _useState4[0],\n      setSearchKeyword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      users = _useState6[0],\n      setUsers = _useState6[1];\n\n  useEffect(function () {\n    firebase.firestore().collection('users').get().then(function (querySnapshot) {\n      var posts = querySnapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setUsers(posts);\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n  }, [history]);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(UserListContainer, {\n    users: users,\n    onUserPress: function onUserPress(id) {\n      history.push(\"/users/\" + id);\n    }\n  }));\n};\n\nexport default UserList;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UserList.jsx"],"names":["React","useState","useEffect","useHistory","Searchbar","Divider","useDebounce","UserItem","Picker","firebase","styles","StyleSheet","create","container","padding","height","width","position","zIndex","paddingTop","paddingBottom","separator","marginVertical","headerContainer","searchContainer","marginBottom","ItemSeparator","orderByOptions","label","value","UserListContainer","props","users","onEndReach","onUserPress","id","item","Component","UserList","history","orderBy","setOrderBy","searchKeyword","setSearchKeyword","setUsers","firestore","collection","get","then","querySnapshot","posts","docs","map","doc","data","catch","error","console","log","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FlatList, View, StyleSheet, TouchableOpacity } from 'react-native';\nimport { useHistory } from 'react-router-native';\nimport { Searchbar, Divider } from 'react-native-paper';\nimport { useDebounce } from 'use-debounce';\nimport UserItem from './UserItem';\nimport Picker from './Picker';\nimport * as firebase from 'firebase';\n\nconst styles = StyleSheet.create({\n    container: {\n        padding: 5,\n        height: '100%',\n        width: '100%',\n        position: 'absolute',\n        zIndex: 1,\n        paddingTop: 80,\n        paddingBottom: 60\n    },\n    separator: {\n        marginVertical: 5\n    },\n    headerContainer: {\n        padding: 10,\n    },\n    searchContainer: {\n        marginBottom: 15,\n    },\n});\n\nconst ItemSeparator = () => {\n\n\n    return(<View style={styles.separator}>\n\n        <Divider/>\n\n    </View>);\n\n};\n\n// normi flatlist ei oderbyoptioneita\n\nconst orderByOptions = [\n    { label: 'Latest repositories', value: 'latest' },\n    {\n        label: 'Highest rated repositories',\n        value: 'highestRating',\n    },\n    {\n        label: 'Lowest rated repositories',\n        value: 'lowestRating',\n    },\n];\n\n// const WhiskyListHeader = (\n//     {\n//       onOrderByChange,\n//       orderBy,\n//       searchKeyword,\n//       onSearchKeywordChange,\n//     }\n// ) => {\n//     return (\n//         <View style={styles.headerContainer}>\n//             <View style={styles.searchContainer}>\n//                 <Searchbar\n//                   placeholder=\"Search whiskies\"\n//                   value={searchKeyword}\n//                   onChangeText={onSearchKeywordChange}\n//                 />\n//             </View>\n//             <Picker\n//             placeholder={{}}\n//             onValueChange={onOrderByChange}\n//             value={orderBy}\n//             items={orderByOptions}\n//             />\n//         </View>\n//     );\n// };\n\nexport class UserListContainer extends React.Component {\n    // renderHeader = () => {\n    //     const {\n    //         onOrderByChange,\n    //         orderBy,\n    //         searchKeyword,\n    //         onSearchKeywordChange,\n    //     } = this.props;\n\n    //     return (\n    //         <WhiskyListHeader\n    //             onOrderByChange={onOrderByChange}\n    //             orderBy={orderBy}\n    //             searchKeyword={searchKeyword}\n    //             onSearchKeywordChange={onSearchKeywordChange}\n    //         />\n    //     );\n    // };\n\n    render() {\n        const { users, onEndReach, onUserPress } = this.props;\n\n        return (\n            <FlatList\n                data={users}\n                keyExtractor={({ id }) => id}\n                renderItem={({ item }) => (\n                    <TouchableOpacity\n                        key={item.id}\n                        onPress={() => onUserPress(item.id)}\n                    >\n                        <UserItem user={item} />\n                    </TouchableOpacity>\n                )}\n                ItemSeparatorComponent={ItemSeparator}\n                // ListHeaderComponent={this.renderHeader}\n                // onEndReached={onEndReach}\n                // onEndReachedThreshold={0.5}\n                // initialNumToRender={8}\n            />\n        );\n    }\n}\n\nconst UserList = () => {\n    const history = useHistory();\n    const [orderBy, setOrderBy] = useState('latest');\n    const [searchKeyword, setSearchKeyword] = useState('');\n    const [users, setUsers] = useState('');\n\n    useEffect(() => {\n        firebase.firestore()\n            .collection('users')\n            .get()\n            .then((querySnapshot) => {\n                let posts = querySnapshot.docs.map(doc => {\n                    const data = doc.data();\n                    const id = doc.id;\n                    return { id, ...data };\n                });\n                setUsers(posts);\n            })\n            .catch((error) => {\n                console.log(\"Error getting documents: \", error);\n            });\n    }, [history]);\n    // const [debouncedSearchKeyword] = useDebounce(searchKeyword, 500);\n\n    //   const onEndReach = () => {\n        //fetch more\n    //   };\n    \n    return (\n        <View style={styles.container}>\n            <UserListContainer\n                users={users}\n                // orderBy={orderBy}\n                // onOrderByChange={(newOrderBy) => {\n                //     setOrderBy(newOrderBy);\n                // }}\n                // onEndReach={onEndReach}\n                // searchKeyword={searchKeyword}\n                // onSearchKeywordChange={(keyword) => setSearchKeyword(keyword)}\n                onUserPress={(id) => {\n                    history.push(`/users/${id}`);\n                }}\n            />\n        </View>\n    );\n};\n\nexport default UserList;"]},"metadata":{},"sourceType":"module"}