{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyReviews.jsx\";\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Link } from 'react-router-native';\nimport { useMutation } from '@apollo/react-hooks';\nimport ReviewItem from \"./ReviewItem\";\nimport Button from \"./Button\";\nimport useAuthorizedUser from \"../hooks/useAuthorizedUser\";\nimport { DELETE_REVIEW } from \"../graphql/mutations\";\nvar styles = StyleSheet.create({\n  reviewItemWrapper: {\n    padding: 15,\n    backgroundColor: 'white'\n  },\n  separator: {\n    height: 10\n  },\n  actionsContainer: {\n    marginTop: 15,\n    flexDirection: 'row'\n  },\n  actionButton: {\n    flexGrow: 1,\n    marginRight: 15\n  },\n  lastActionButton: {\n    marginRight: 0\n  }\n});\n\nvar DeleteReviewButton = function DeleteReviewButton(_ref) {\n  var _onPress = _ref.onPress,\n      props = _objectWithoutProperties(_ref, [\"onPress\"]);\n\n  var alertButtons = [{\n    text: 'Cancel',\n    style: 'cancel'\n  }, {\n    text: 'Delete',\n    onPress: function onPress() {\n      return _onPress();\n    }\n  }];\n\n  var deleteWithConfirmation = function deleteWithConfirmation() {\n    Alert.alert('Delete review', 'Are you sure you want to delete this review?', alertButtons, {\n      cancelable: false\n    });\n  };\n\n  return React.createElement(Button, _extends({\n    onPress: deleteWithConfirmation,\n    color: \"error\"\n  }, props), \"Delete review\");\n};\n\nvar ReviewItemWithActions = function ReviewItemWithActions(_ref2) {\n  var review = _ref2.review,\n      onDelete = _ref2.onDelete;\n  return React.createElement(View, {\n    style: styles.reviewItemWrapper\n  }, React.createElement(ReviewItem, {\n    review: review,\n    title: review.repository.fullName\n  }), React.createElement(View, {\n    style: styles.actionsContainer\n  }, React.createElement(Link, {\n    component: Button,\n    to: \"/repositories/\" + review.repository.id,\n    style: styles.actionButton\n  }, \"View repository\"), React.createElement(DeleteReviewButton, {\n    onPress: onDelete,\n    style: [styles.actionButton, styles.lastActionButton]\n  })));\n};\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator\n  });\n};\n\nvar MyReviews = function MyReviews() {\n  var _useAuthorizedUser = useAuthorizedUser({\n    includeReviews: true\n  }),\n      authorizedUser = _useAuthorizedUser.authorizedUser,\n      refetch = _useAuthorizedUser.refetch;\n\n  var _useMutation = useMutation(DELETE_REVIEW),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      deleteReview = _useMutation2[0];\n\n  var reviewEdges = authorizedUser ? authorizedUser.reviews.edges : [];\n  var reviewNodes = reviewEdges.map(function (_ref3) {\n    var node = _ref3.node;\n    return node;\n  });\n\n  var _onDelete = function onDelete(id) {\n    return _regeneratorRuntime.async(function onDelete$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(deleteReview({\n              variables: {\n                id: id\n              }\n            }));\n\n          case 2:\n            refetch();\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(FlatList, {\n    data: reviewNodes,\n    renderItem: function renderItem(_ref4) {\n      var item = _ref4.item;\n      return React.createElement(ReviewItemWithActions, {\n        review: item,\n        onDelete: function onDelete() {\n          return _onDelete(item.id);\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(_ref5) {\n      var id = _ref5.id;\n      return id;\n    },\n    ItemSeparatorComponent: ItemSeparator\n  });\n};\n\nexport default MyReviews;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyReviews.jsx"],"names":["React","Link","useMutation","ReviewItem","Button","useAuthorizedUser","DELETE_REVIEW","styles","StyleSheet","create","reviewItemWrapper","padding","backgroundColor","separator","height","actionsContainer","marginTop","flexDirection","actionButton","flexGrow","marginRight","lastActionButton","DeleteReviewButton","onPress","props","alertButtons","text","style","deleteWithConfirmation","Alert","alert","cancelable","ReviewItemWithActions","review","onDelete","repository","fullName","id","ItemSeparator","MyReviews","includeReviews","authorizedUser","refetch","deleteReview","reviewEdges","reviews","edges","reviewNodes","map","node","variables","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FlatList, View, StyleSheet, Alert } from 'react-native';\nimport { Link } from 'react-router-native';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport ReviewItem from './ReviewItem';\nimport Button from './Button';\nimport useAuthorizedUser from '../hooks/useAuthorizedUser';\nimport { DELETE_REVIEW } from '../graphql/mutations';\n\nconst styles = StyleSheet.create({\n  reviewItemWrapper: {\n    padding: 15,\n    backgroundColor: 'white',\n  },\n  separator: {\n    height: 10,\n  },\n  actionsContainer: {\n    marginTop: 15,\n    flexDirection: 'row',\n  },\n  actionButton: {\n    flexGrow: 1,\n    marginRight: 15,\n  },\n  lastActionButton: {\n    marginRight: 0,\n  },\n});\n\nconst DeleteReviewButton = ({ onPress, ...props }) => {\n  const alertButtons = [\n    {\n      text: 'Cancel',\n      style: 'cancel',\n    },\n    {\n      text: 'Delete',\n      onPress: () => onPress(),\n    },\n  ];\n\n  const deleteWithConfirmation = () => {\n    Alert.alert(\n      'Delete review',\n      'Are you sure you want to delete this review?',\n      alertButtons,\n      { cancelable: false },\n    );\n  };\n\n  return (\n    <Button onPress={deleteWithConfirmation} color=\"error\" {...props}>\n      Delete review\n    </Button>\n  );\n};\n\nconst ReviewItemWithActions = ({ review, onDelete }) => {\n  return (\n    <View style={styles.reviewItemWrapper}>\n      <ReviewItem review={review} title={review.repository.fullName} />\n      <View style={styles.actionsContainer}>\n        <Link\n          component={Button}\n          to={`/repositories/${review.repository.id}`}\n          style={styles.actionButton}\n        >\n          View repository\n        </Link>\n\n        <DeleteReviewButton\n          onPress={onDelete}\n          style={[styles.actionButton, styles.lastActionButton]}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst ItemSeparator = () => <View style={styles.separator} />;\n\nconst MyReviews = () => {\n  const { authorizedUser, refetch } = useAuthorizedUser({\n    includeReviews: true,\n  });\n\n  const [deleteReview] = useMutation(DELETE_REVIEW);\n  const reviewEdges = authorizedUser ? authorizedUser.reviews.edges : [];\n  const reviewNodes = reviewEdges.map(({ node }) => node);\n\n  const onDelete = async (id) => {\n    await deleteReview({ variables: { id } });\n    refetch();\n  };\n\n  return (\n    <FlatList\n      data={reviewNodes}\n      renderItem={({ item }) => (\n        <ReviewItemWithActions\n          review={item}\n          onDelete={() => onDelete(item.id)}\n        />\n      )}\n      keyExtractor={({ id }) => id}\n      ItemSeparatorComponent={ItemSeparator}\n    />\n  );\n};\n\nexport default MyReviews;"]},"metadata":{},"sourceType":"module"}