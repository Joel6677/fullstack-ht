{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SignUpPhone.jsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useRef, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { FirebaseRecaptchaVerifierModal, FirebaseRecaptchaBanner } from 'expo-firebase-recaptcha';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { firebaseConfig } from \"../firebase/Fire\";\nimport Text from \"./Text\";\nimport theme from \"../theme\";\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 50,\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    top: 50,\n    zIndex: 3\n  },\n  textInput: {\n    marginVertical: 20,\n    fontSize: 17\n  },\n  buttons: {\n    marginBottom: 20,\n    zIndex: 3\n  }\n});\n\nvar SignUpPhone = function SignUpPhone() {\n  var recaptchaVerifier = useRef(null);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      phoneNumber = _useState2[0],\n      setPhoneNumber = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      verificationId = _useState4[0],\n      setVerificationId = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      verificationCode = _useState6[0],\n      setVerificationCode = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      showMessage = _useState8[1];\n\n  var attemptInvisibleVerification = false;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(FirebaseRecaptchaVerifierModal, {\n    ref: recaptchaVerifier,\n    firebaseConfig: firebaseConfig,\n    attemptInvisibleVerification: attemptInvisibleVerification,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    fontWeight: \"bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Enter phone number\"), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"+1 999 999 9999\",\n    autoFocus: true,\n    autoCompleteType: \"tel\",\n    keyboardType: \"phone-pad\",\n    textContentType: \"telephoneNumber\",\n    onChangeText: function onChangeText(phoneNumber) {\n      return setPhoneNumber(phoneNumber);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    color: theme.colors.primary,\n    title: \"Send Verification Code\",\n    disabled: !phoneNumber,\n    onPress: function _callee() {\n      var phoneProvider, _verificationId;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              phoneProvider = new firebase.auth.PhoneAuthProvider();\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(phoneProvider.verifyPhoneNumber(phoneNumber, recaptchaVerifier.current));\n\n            case 4:\n              _verificationId = _context.sent;\n              setVerificationId(_verificationId);\n              showMessage({\n                text: 'Verification code has been sent to your phone.'\n              });\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              showMessage({\n                text: \"Error: \" + _context.t0.message,\n                color: 'red'\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    fontWeight: \"bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"Enter Verification code\"), React.createElement(TextInput, {\n    style: styles.textInput,\n    editable: !!verificationId,\n    placeholder: \"123456\",\n    onChangeText: setVerificationCode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm Verification Code\",\n    disabled: !verificationId,\n    onPress: function _callee2() {\n      var credential;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              credential = firebase.auth.PhoneAuthProvider.credential(verificationId, verificationCode);\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithCredential(credential));\n\n            case 4:\n              showMessage({\n                text: 'Phone authentication successful'\n              });\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              showMessage({\n                text: \"Error: \" + _context2.t0.message,\n                color: 'red'\n              });\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })), message ? React.createElement(TouchableOpacity, {\n    style: [StyleSheet.absoluteFill, {\n      backgroundColor: 'white',\n      justifyContent: 'center',\n      zIndex: 10\n    }],\n    onPress: function onPress() {\n      return showMessage(undefined);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: message.color || 'blue',\n      fontSize: 17,\n      textAlign: 'center',\n      margin: 20,\n      zIndex: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, message.text)) : undefined, attemptInvisibleVerification && React.createElement(FirebaseRecaptchaBanner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 40\n    }\n  }));\n};\n\nexport default SignUpPhone;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SignUpPhone.jsx"],"names":["React","useRef","useState","FirebaseRecaptchaVerifierModal","FirebaseRecaptchaBanner","firebase","firebaseConfig","Text","theme","styles","StyleSheet","create","container","flexDirection","justifyContent","alignItems","padding","position","height","width","top","zIndex","textInput","marginVertical","fontSize","buttons","marginBottom","SignUpPhone","recaptchaVerifier","phoneNumber","setPhoneNumber","verificationId","setVerificationId","verificationCode","setVerificationCode","message","showMessage","attemptInvisibleVerification","colors","primary","phoneProvider","auth","PhoneAuthProvider","verifyPhoneNumber","current","text","color","button","credential","signInWithCredential","absoluteFill","backgroundColor","undefined","textAlign","margin"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport {\n  View,\n  TextInput,\n  Button,\n  StyleSheet,\n  TouchableOpacity,\n} from 'react-native';\nimport { FirebaseRecaptchaVerifierModal, FirebaseRecaptchaBanner } from 'expo-firebase-recaptcha';\n// import * as firebase from 'firebase';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { firebaseConfig } from '../firebase/Fire';\nimport Text from './Text';\nimport theme from '../theme';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 50,\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    top: 50,\n    zIndex: 3,\n  },\n  textInput: {\n    marginVertical: 20,\n    fontSize: 17,\n  },\n  buttons: {\n    marginBottom: 20,\n    zIndex: 3,\n  },\n});\n\nconst SignUpPhone = () => {\n  const recaptchaVerifier = useRef(null);\n  const [phoneNumber, setPhoneNumber] = useState();\n  const [verificationId, setVerificationId] = useState();\n  const [verificationCode, setVerificationCode] = useState();\n  const [message, showMessage] = useState();\n\n  const attemptInvisibleVerification = false;\n\n  return (\n\n    <View style={styles.container}>\n      <FirebaseRecaptchaVerifierModal\n        ref={recaptchaVerifier}\n        firebaseConfig={firebaseConfig}\n        attemptInvisibleVerification={attemptInvisibleVerification}\n      />\n      <Text fontWeight=\"bold\">Enter phone number</Text>\n      <TextInput\n        style={styles.textInput}\n        placeholder=\"+1 999 999 9999\"\n        autoFocus\n        autoCompleteType=\"tel\"\n        keyboardType=\"phone-pad\"\n        textContentType=\"telephoneNumber\"\n        onChangeText={(phoneNumber) => setPhoneNumber(phoneNumber)}\n      />\n      <View style={styles.buttons}>\n        <Button\n          color={theme.colors.primary}\n          title=\"Send Verification Code\"\n          disabled={!phoneNumber}\n          onPress={async () => {\n            // The FirebaseRecaptchaVerifierModal ref implements the\n            // FirebaseAuthApplicationVerifier interface and can be\n            // passed directly to `verifyPhoneNumber`.\n            try {\n              const phoneProvider = new firebase.auth.PhoneAuthProvider();\n              const verificationId = await phoneProvider.verifyPhoneNumber(\n                phoneNumber,\n                recaptchaVerifier.current,\n              );\n              setVerificationId(verificationId);\n              showMessage({\n                text: 'Verification code has been sent to your phone.',\n              });\n            } catch (err) {\n              showMessage({ text: `Error: ${err.message}`, color: 'red' });\n            }\n          }}\n        />\n      </View>\n\n      <Text fontWeight=\"bold\">Enter Verification code</Text>\n      <TextInput\n        style={styles.textInput}\n        editable={!!verificationId}\n        placeholder=\"123456\"\n        onChangeText={setVerificationCode}\n      />\n      <View style={styles.button}>\n        <Button\n          title=\"Confirm Verification Code\"\n          disabled={!verificationId}\n          onPress={async () => {\n            try {\n              const credential = firebase.auth.PhoneAuthProvider.credential(\n                verificationId,\n                verificationCode,\n              );\n              await firebase.auth().signInWithCredential(credential);\n              showMessage({ text: 'Phone authentication successful' });\n            } catch (err) {\n              showMessage({ text: `Error: ${err.message}`, color: 'red' });\n            }\n          }}\n        />\n      </View>\n      {message ? (\n        <TouchableOpacity\n          style={[\n            StyleSheet.absoluteFill,\n            { backgroundColor: 'white', justifyContent: 'center', zIndex: 10 },\n          ]}\n          onPress={() => showMessage(undefined)}\n        >\n          <Text\n            style={{\n              color: message.color || 'blue',\n              fontSize: 17,\n              textAlign: 'center',\n              margin: 20,\n              zIndex: 10,\n            }}\n          >\n            {message.text}\n          </Text>\n        </TouchableOpacity>\n      ) : (\n        undefined\n      )}\n      {attemptInvisibleVerification && <FirebaseRecaptchaBanner />}\n    </View>\n\n  );\n};\n\nexport default SignUpPhone;\n"]},"metadata":{},"sourceType":"module"}