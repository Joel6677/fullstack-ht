{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyInfo.jsx\";\nimport React, { useState, useContext, useRef, useEffect } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Button, Avatar, Divider, IconButton } from 'react-native-paper';\nimport { useHistory } from 'react-router-native';\nimport * as firebase from 'firebase';\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 100\n  }\n});\n\nvar MyInfo = function MyInfo() {\n  var history = useHistory();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      files = _useState2[0],\n      setFiles = _useState2[1];\n\n  useEffect(function () {\n    firebase.firestore().collection(\"images\").doc(firebase.auth().currentUser.uid).collection(\"userImages\").get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        console.log(doc.id, \" => \", doc.data().downloadURL);\n      });\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n  });\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(IconButton, {\n    icon: 'check-circle-outline',\n    size: 100,\n    style: styles.iconButton,\n    color: \"#2cf52c\"\n  }));\n};\n\nexport default MyInfo;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyInfo.jsx"],"names":["React","useState","useContext","useRef","useEffect","Button","Avatar","Divider","IconButton","useHistory","firebase","styles","StyleSheet","create","container","position","top","MyInfo","history","files","setFiles","firestore","collection","doc","auth","currentUser","uid","get","then","querySnapshot","forEach","console","log","id","data","downloadURL","catch","error","iconButton"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,MAAtC,EAA8CC,SAA9C,QAA+D,OAA/D;;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,EAAkCC,UAAlC,QAAqD,oBAArD;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAE/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,UADD;AAETC,IAAAA,GAAG,EAAE;AAFI;AAFoB,CAAlB,CAAf;;AAWA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAEnB,MAAMC,OAAO,GAAGT,UAAU,EAA1B;;AAFmB,kBAGOR,QAAQ,CAAC,EAAD,CAHf;AAAA;AAAA,MAGZkB,KAHY;AAAA,MAGLC,QAHK;;AAKnBhB,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,QAAQ,CAACW,SAAT,GACCC,UADD,CACY,QADZ,EAECC,GAFD,CAEKb,QAAQ,CAACc,IAAT,GAAgBC,WAAhB,CAA4BC,GAFjC,EAGCJ,UAHD,CAGY,YAHZ,EAICK,GAJD,GAKGC,IALH,CAKQ,UAACC,aAAD,EAAmB;AACvBA,MAAAA,aAAa,CAACC,OAAd,CAAsB,UAACP,GAAD,EAAS;AAC7BQ,QAAAA,OAAO,CAACC,GAAR,CAAYT,GAAG,CAACU,EAAhB,EAAoB,MAApB,EAA4BV,GAAG,CAACW,IAAJ,GAAWC,WAAvC;AACD,OAFD;AAGD,KATH,EAUGC,KAVH,CAUS,UAACC,KAAD,EAAW;AAChBN,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCK,KAAzC;AACD,KAZH;AAcD,GAfQ,CAAT;AAkBA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1B,MAAM,CAACG;AAApB,KACA,oBAAC,UAAD;AACE,IAAA,IAAI,EAAE,sBADR;AACgC,IAAA,IAAI,EAAE,GADtC;AAC2C,IAAA,KAAK,EAAEH,MAAM,CAAC2B,UADzD;AACqE,IAAA,KAAK,EAAC;AAD3E,IADA,CADJ;AAMD,CA7BD;;AA+BA,eAAerB,MAAf","sourcesContent":["import React, { useState, useContext, useRef, useEffect } from 'react';\nimport { Animated, StyleSheet, View, ScrollView} from 'react-native';\nimport { Button, Avatar, Divider, IconButton  } from 'react-native-paper';\nimport { useHistory } from 'react-router-native';\nimport * as firebase from 'firebase';\n\n\nconst styles = StyleSheet.create({\n\n  container: {\n    position: 'absolute',\n    top: 100\n\n  }\n\n});\n\n\nconst MyInfo = () => {\n\n  const history = useHistory();\n  const [files, setFiles] = useState([]);\n\n  useEffect(() => {\n    firebase.firestore()\n    .collection(\"images\")\n    .doc(firebase.auth().currentUser.uid)\n    .collection(\"userImages\")\n    .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          console.log(doc.id, \" => \", doc.data().downloadURL);\n        });\n      })\n      .catch((error) => {\n        console.log(\"Error getting documents: \", error);\n      });\n  \n  });\n\n\n  return (\n      <View style={styles.container}>\n      <IconButton \n        icon={'check-circle-outline'} size={100} style={styles.iconButton} color='#2cf52c' />\n      </View>\n  );\n};\n\nexport default MyInfo;"]},"metadata":{},"sourceType":"module"}