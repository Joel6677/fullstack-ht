{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from 'react';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nexport var GET_USERINFO = function GET_USERINFO() {\n  var posts, getUserInfo;\n  return _regeneratorRuntime.async(function GET_USERINFO$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(firebase.firestore.collection('users').doc(firebase.auth().currentUser.uid).get());\n\n        case 3:\n          getUserInfo = _context.sent;\n          console.log(getUserInfo);\n          _context.next = 10;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var GET_PROFILEPIC = function GET_PROFILEPIC() {\n  return _regeneratorRuntime.async(function GET_PROFILEPIC$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          firebase.firestore().collection('users').doc(firebase.auth().currentUser.uid).collection('userinfo').get().then(function (querySnapshot) {\n            var posts = querySnapshot.docs.map(function (doc) {\n              var data = doc.data();\n              var id = doc.id;\n              return _objectSpread({\n                id: id\n              }, data);\n            });\n            console.log('posts: ', posts);\n          }).catch(function (error) {\n            console.log(\"Error getting documents: \", error);\n          });\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var GET_USERIMAGES = function GET_USERIMAGES() {\n  return _regeneratorRuntime.async(function GET_USERIMAGES$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          firebase.firestore().collection('users').doc(firebase.auth().currentUser.uid).collection('userinfo').get().then(function (querySnapshot) {\n            var posts = querySnapshot.docs.map(function (doc) {\n              var data = doc.data();\n              var id = doc.id;\n              return _objectSpread({\n                id: id\n              }, data);\n            });\n            console.log('posts: ', posts);\n          }).catch(function (error) {\n            console.log(\"Error getting documents: \", error);\n          });\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/firebase/queries.js"],"names":["React","useContext","useState","firebase","GET_USERINFO","firestore","collection","doc","auth","currentUser","uid","get","getUserInfo","console","log","GET_PROFILEPIC","then","querySnapshot","posts","docs","map","data","id","catch","error","GET_USERIMAGES"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAMMD,QAAQ,CAACE,SAAT,CAAmBC,UAAnB,CAA8B,OAA9B,EAAuCC,GAAvC,CAA2CJ,QAAQ,CAACK,IAAT,GAAgBC,WAAhB,CAA4BC,GAAvE,EAA4EC,GAA5E,EANN;;AAAA;AAMdC,UAAAA,WANc;AAkBpBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AAlBoB;AAAA;;AAAA;AAAA;AAAA;AAqBpBC,UAAAA,OAAO,CAACC,GAAR;;AArBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AA6BP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAE1BZ,UAAAA,QAAQ,CAACE,SAAT,GACCC,UADD,CACY,OADZ,EAECC,GAFD,CAEKJ,QAAQ,CAACK,IAAT,GAAgBC,WAAhB,CAA4BC,GAFjC,EAGCJ,UAHD,CAGY,UAHZ,EAICK,GAJD,GAKGK,IALH,CAKQ,UAACC,aAAD,EAAmB;AACvB,gBAAIC,KAAK,GAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuB,UAAAb,GAAG,EAAI;AACtC,kBAAMc,IAAI,GAAGd,GAAG,CAACc,IAAJ,EAAb;AACA,kBAAMC,EAAE,GAAGf,GAAG,CAACe,EAAf;AACA;AAASA,gBAAAA,EAAE,EAAFA;AAAT,iBAAgBD,IAAhB;AACH,aAJW,CAAZ;AAKAR,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBI,KAAvB;AACD,WAZH,EAaGK,KAbH,CAaS,UAACC,KAAD,EAAW;AAChBX,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCU,KAAzC;AACD,WAfH;;AAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAqBP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAE1BtB,UAAAA,QAAQ,CAACE,SAAT,GACCC,UADD,CACY,OADZ,EAECC,GAFD,CAEKJ,QAAQ,CAACK,IAAT,GAAgBC,WAAhB,CAA4BC,GAFjC,EAGCJ,UAHD,CAGY,UAHZ,EAICK,GAJD,GAKGK,IALH,CAKQ,UAACC,aAAD,EAAmB;AACvB,gBAAIC,KAAK,GAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuB,UAAAb,GAAG,EAAI;AACtC,kBAAMc,IAAI,GAAGd,GAAG,CAACc,IAAJ,EAAb;AACA,kBAAMC,EAAE,GAAGf,GAAG,CAACe,EAAf;AACA;AAASA,gBAAAA,EAAE,EAAFA;AAAT,iBAAgBD,IAAhB;AACH,aAJW,CAAZ;AAKAR,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBI,KAAvB;AACD,WAZH,EAaGK,KAbH,CAaS,UAACC,KAAD,EAAW;AAChBX,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCU,KAAzC;AACD,WAfH;;AAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import React, { useContext, useState } from 'react';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nexport const GET_USERINFO = async () => {\n\n    let posts;\n\n    try {\n\n        const getUserInfo = await firebase.firestore.collection('users').doc(firebase.auth().currentUser.uid).get();\n        // await firebase.firestore.collection('users')\n        // .doc(firebase.auth().currentUser.uid)\n        // .collection('userinfo').get();\n\n        // posts = getUserInfo.docs.map(doc => {\n        //     const data = doc.data();\n        //     const id = doc.id;\n        //     return { id, ...data };\n        // });\n\n        // console.log(posts);\n        console.log(getUserInfo);\n\n    } catch (err) {\n        console.log(err);\n    }\n\n \n    // console.log('user images: ', posts);\n\n};\n\nexport const GET_PROFILEPIC = async () => {\n\n    firebase.firestore()\n    .collection('users')\n    .doc(firebase.auth().currentUser.uid)\n    .collection('userinfo')\n    .get()\n      .then((querySnapshot) => {\n        let posts = querySnapshot.docs.map(doc => {\n            const data = doc.data();\n            const id = doc.id;\n            return { id, ...data };\n        });\n        console.log('posts: ', posts);\n      })\n      .catch((error) => {\n        console.log(\"Error getting documents: \", error);\n      });\n      \n};\n\nexport const GET_USERIMAGES = async () => {\n\n    firebase.firestore()\n    .collection('users')\n    .doc(firebase.auth().currentUser.uid)\n    .collection('userinfo')\n    .get()\n      .then((querySnapshot) => {\n        let posts = querySnapshot.docs.map(doc => {\n            const data = doc.data();\n            const id = doc.id;\n            return { id, ...data };\n        });\n        console.log('posts: ', posts);\n      })\n      .catch((error) => {\n        console.log(\"Error getting documents: \", error);\n      });\n      \n};"]},"metadata":{},"sourceType":"module"}