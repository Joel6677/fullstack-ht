{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as firebase from 'firebase';\nexport var signUpWithEmail = function signUpWithEmail(email, username, password) {\n  var currentUser, db;\n  return _regeneratorRuntime.async(function signUpWithEmail$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, password));\n\n        case 3:\n          currentUser = firebase.auth().currentUser;\n          db = firebase.firestore();\n          console.log('currentUser: ', currentUser);\n          db.collection('users').doc(currentUser.uid).set({\n            name: username,\n            email: currentUser.email\n          });\n          _context.next = 14;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('current user: ', firebase.auth().currentUser);\n          console.log('sign up with email error', _context.t0);\n          console.log('password: ', password);\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 9]], Promise);\n};\nexport var signInWithEmail = function signInWithEmail(email, password) {\n  return _regeneratorRuntime.async(function signInWithEmail$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var signInWithGoogle = function signInWithGoogle() {\n  var provider;\n  return _regeneratorRuntime.async(function signInWithGoogle$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          provider = new firebase.auth.GoogleAuthProvider();\n          firebase.auth.signInWithPopup(provider);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var signInAnonymously = function signInAnonymously() {\n  var db;\n  return _regeneratorRuntime.async(function signInAnonymously$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(firebase.auth().signInAnonymously());\n\n        case 2:\n          db = firebase.firestore();\n          db.collection('users').doc('123413').set({\n            name: 'test'\n          });\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var signOut = function signOut() {\n  return _regeneratorRuntime.async(function signOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(firebase.auth().signOut());\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var deleteUser = function deleteUser() {\n  var currentUser;\n  return _regeneratorRuntime.async(function deleteUser$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          currentUser = firebase.auth().currentUser;\n          _context6.next = 3;\n          return _regeneratorRuntime.awrap(currentUser.delete());\n\n        case 3:\n          console.log('user deleted: ', currentUser);\n\n        case 4:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/firebase/firebaseFunctions.js"],"names":["firebase","signUpWithEmail","email","username","password","auth","createUserWithEmailAndPassword","currentUser","db","firestore","console","log","collection","doc","uid","set","name","signInWithEmail","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","signInAnonymously","signOut","deleteUser","delete"],"mappings":";AAAA,OAAO,KAAKA,QAAZ,MAA0B,UAA1B;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAOC,KAAP,EAAcC,QAAd,EAAwBC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEjBJ,QAAQ,CAACK,IAAT,GAAgBC,8BAAhB,CAA+CJ,KAA/C,EAAsDE,QAAtD,CAFiB;;AAAA;AAGjBG,UAAAA,WAHiB,GAGHP,QAAQ,CAACK,IAAT,GAAgBE,WAHb;AAIjBC,UAAAA,EAJiB,GAIZR,QAAQ,CAACS,SAAT,EAJY;AAMvBC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,WAA7B;AAEAC,UAAAA,EAAE,CAACI,UAAH,CAAc,OAAd,EACKC,GADL,CACSN,WAAW,CAACO,GADrB,EAEKC,GAFL,CAES;AACDC,YAAAA,IAAI,EAAEb,QADL;AAEDD,YAAAA,KAAK,EAAEK,WAAW,CAACL;AAFlB,WAFT;AARuB;AAAA;;AAAA;AAAA;AAAA;AAgBvBQ,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BX,QAAQ,CAACK,IAAT,GAAgBE,WAA9C;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BP,QAA1B;;AAlBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAuBH,OAAO,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAAOf,KAAP,EAAcE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACrBJ,QAAQ,CAACK,IAAT,GAAgBa,0BAAhB,CAA2ChB,KAA3C,EAAkDE,QAAlD,CADqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAIP,OAAO,IAAMe,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,UAAAA,QADsB,GACX,IAAIpB,QAAQ,CAACK,IAAT,CAAcgB,kBAAlB,EADW;AAE5BrB,UAAAA,QAAQ,CAACK,IAAT,CAAciB,eAAd,CAA8BF,QAA9B;;AAF4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AAKP,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACvBvB,QAAQ,CAACK,IAAT,GAAgBkB,iBAAhB,EADuB;;AAAA;AAGvBf,UAAAA,EAHuB,GAGlBR,QAAQ,CAACS,SAAT,EAHkB;AAM7BD,UAAAA,EAAE,CAACI,UAAH,CAAc,OAAd,EACCC,GADD,CACK,QADL,EAECE,GAFD,CAEK;AACDC,YAAAA,IAAI,EAAE;AADL,WAFL;;AAN6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAaP,OAAO,IAAMQ,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACbxB,QAAQ,CAACK,IAAT,GAAgBmB,OAAhB,EADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAIP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBlB,UAAAA,WADgB,GACFP,QAAQ,CAACK,IAAT,GAAgBE,WADd;AAAA;AAAA,2CAGhBA,WAAW,CAACmB,MAAZ,EAHgB;;AAAA;AAKtBhB,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,WAA9B;;AALsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["import * as firebase from 'firebase';\n\nexport const signUpWithEmail = async (email, username, password) => {\n    try {\n        await firebase.auth().createUserWithEmailAndPassword(email, password);\n        const currentUser = firebase.auth().currentUser;\n        const db = firebase.firestore();\n\n        console.log('currentUser: ', currentUser);\n\n        db.collection('users')\n            .doc(currentUser.uid)\n            .set({\n                name: username,\n                email: currentUser.email,\n            });\n\n    } catch (err) {\n        console.log('current user: ', firebase.auth().currentUser);\n        console.log('sign up with email error', err);\n        console.log('password: ', password);\n    }\n\n};\n\n    export const signInWithEmail = async (email, password) => {\n        await firebase.auth().signInWithEmailAndPassword(email, password);\n    };\n\n    export const signInWithGoogle = async () => {\n        const provider = new firebase.auth.GoogleAuthProvider();\n        firebase.auth.signInWithPopup(provider);\n    };\n\n    export const signInAnonymously = async () => {\n        await firebase.auth().signInAnonymously();\n\n        const db = firebase.firestore();\n\n\n        db.collection('users')\n        .doc('123413')\n        .set({\n            name: 'test',\n        });\n    };\n    \n    export const signOut = async () => {\n        await firebase.auth().signOut();\n    };\n\n    export const deleteUser = async () => {\n        const currentUser = firebase.auth().currentUser;\n\n        await currentUser.delete();\n\n        console.log('user deleted: ', currentUser);\n    };"]},"metadata":{},"sourceType":"module"}