{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// import React, {useRef, useState} from 'react';\n// import {\n//     Text,\n//     View,\n//     TextInput,\n//     Button,\n//     StyleSheet,\n//     TouchableOpacity\n// } from 'react-native';\n// import { FirebaseRecaptchaVerifierModal, FirebaseRecaptchaBanner } from 'expo-firebase-recaptcha';\n// import * as firebase from 'firebase';\n// import {firebaseConfig} from '../firebase/Fire';\n\n\n// const styles = StyleSheet.create({\n//     container: {\n//     },\n//     button: {\n//       margin: 30\n//     },\n//     heading: {\n//       alignItems: 'center'\n//     }\n//   });\n  \n\n// const SignUpPhone = () => {\n\n//     const recaptchaVerifier = useRef(null);\n//     const [phoneNumber, setPhoneNumber] = useState();\n//     const [verificationId, setVerificationId] = useState();\n//     const [verificationCode, setVerificationCode] = useState();\n//     const [message, showMessage] = useState();\n\n//     const attemptInvisibleVerification = false;\n\n\n\n//     return (\n\n//         <View style={styles.container}>\n//             <FirebaseRecaptchaVerifierModal\n//                 ref={recaptchaVerifier}\n//                 firebaseConfig={firebaseConfig}\n//                 attemptInvisibleVerification={attemptInvisibleVerification}\n//             />\n//             <Text>Enter phone number</Text>\n//             <TextInput\n//                 style={{ marginVertical: 10, fontSize: 17 }}\n//                 placeholder=\"+1 999 999 9999\"\n//                 autoFocus\n//                 autoCompleteType=\"tel\"\n//                 keyboardType=\"phone-pad\"\n//                 textContentType=\"telephoneNumber\"\n//                 onChangeText={phoneNumber => setPhoneNumber(phoneNumber)}\n//             />\n//             <Button\n//                 title=\"Send Verification Code\"\n//                 disabled={!phoneNumber}\n//                 onPress={async () => {\n//                     // The FirebaseRecaptchaVerifierModal ref implements the\n//                     // FirebaseAuthApplicationVerifier interface and can be\n//                     // passed directly to `verifyPhoneNumber`.\n//                     try {\n//                         const phoneProvider = new firebase.auth.PhoneAuthProvider();\n//                         const verificationId = await phoneProvider.verifyPhoneNumber(\n//                             phoneNumber,\n//                             recaptchaVerifier.current\n//                         );\n//                         setVerificationId(verificationId);\n//                         showMessage({\n//                             text: 'Verification code has been sent to your phone.',\n//                         });\n//                     } catch (err) {\n//                         showMessage({ text: `Error: ${err.message}`, color: 'red' });\n//                     }\n//                 }}\n//             />\n//             <Text style={{ marginTop: 20 }}>Enter Verification code</Text>\n//             <TextInput\n//                 style={{ marginVertical: 10, fontSize: 17 }}\n//                 editable={!!verificationId}\n//                 placeholder=\"123456\"\n//                 onChangeText={setVerificationCode}\n//             />\n//             <Button\n//                 title=\"Confirm Verification Code\"\n//                 disabled={!verificationId}\n//                 onPress={async () => {\n//                     try {\n//                         const credential = firebase.auth.PhoneAuthProvider.credential(\n//                             verificationId,\n//                             verificationCode\n//                         );\n//                         await firebase.auth().signInWithCredential(credential);\n//                         showMessage({ text: 'Phone authentication successful 👍' });\n//                     } catch (err) {\n//                         showMessage({ text: `Error: ${err.message}`, color: 'red' });\n//                     }\n//                 }}\n//             />\n//             {message ? (\n//                 <TouchableOpacity\n//                     style={[\n//                         StyleSheet.absoluteFill,\n//                         { backgroundColor: 0xffffffee, justifyContent: 'center' },\n//                     ]}\n//                     onPress={() => showMessage(undefined)}>\n//                     <Text\n//                         style={{\n//                             color: message.color || 'blue',\n//                             fontSize: 17,\n//                             textAlign: 'center',\n//                             margin: 20,\n//                         }}>\n//                         {message.text}\n//                     </Text>\n//                 </TouchableOpacity>\n//             ) : (\n//                     undefined\n//                 )}\n//             {attemptInvisibleVerification && <FirebaseRecaptchaBanner />}\n//         </View>\n\n//     );\n\n\n\n// };\n\n// export default SignUpPhone;"]},"metadata":{},"sourceType":"script"}