{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyMessages.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useHistory } from 'react-router-native';\nimport MessageItem from \"./MessageItem\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nvar styles = StyleSheet.create({\n  container: {\n    padding: 5,\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1,\n    paddingTop: 80,\n    paddingBottom: 60\n  },\n  separator: {\n    marginVertical: 5\n  },\n  headerContainer: {\n    padding: 10\n  },\n  searchContainer: {\n    marginBottom: 15\n  }\n});\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator\n  });\n};\n\nvar getMessages = function getMessages() {\n  var messages, currentUser, chatIDs;\n  return _regeneratorRuntime.async(function getMessages$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          currentUser = firebase.auth().currentUser;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection('users').where('email', '!=', currentUser.email).get());\n\n        case 3:\n          chatIDs = _context.sent;\n          console.log('chatIDs: ', chatIDs);\n          console.log('messages: ', messages);\n          return _context.abrupt(\"return\", messages);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar MyMessages = function MyMessages() {\n  var history = useHistory();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  useEffect(function () {\n    getMessages().then(function () {\n      console.log('called');\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(FlatList, {\n    data: messages,\n    keyExtractor: function keyExtractor(_ref) {\n      var id = _ref.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        key: item,\n        onPress: function onPress() {\n          return history.push(\"/messenger/\" + item.id);\n        }\n      }, React.createElement(MessageItem, {\n        message: item\n      }));\n    },\n    ItemSeparatorComponent: ItemSeparator\n  }));\n};\n\nexport default MyMessages;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyMessages.jsx"],"names":["React","useState","useEffect","useHistory","MessageItem","firebase","styles","StyleSheet","create","container","padding","height","width","position","zIndex","paddingTop","paddingBottom","separator","marginVertical","headerContainer","searchContainer","marginBottom","ItemSeparator","getMessages","currentUser","auth","firestore","collection","where","email","get","chatIDs","console","log","messages","MyMessages","history","setMessages","then","id","item","push"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,WAAP;AAEA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,OAAO,EAAE,CADF;AAEPC,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,KAAK,EAAE,MAHA;AAIPC,IAAAA,QAAQ,EAAE,UAJH;AAKPC,IAAAA,MAAM,EAAE,CALD;AAMPC,IAAAA,UAAU,EAAE,EANL;AAOPC,IAAAA,aAAa,EAAE;AAPR,GADkB;AAU7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,cAAc,EAAE;AADT,GAVkB;AAa7BC,EAAAA,eAAe,EAAE;AACbT,IAAAA,OAAO,EAAE;AADI,GAbY;AAgB7BU,EAAAA,eAAe,EAAE;AACbC,IAAAA,YAAY,EAAE;AADD;AAhBY,CAAlB,CAAf;;AAqBA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAGxB,SAAO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACW;AAApB,IAAP;AAIH,CAPD;;AASA,IAAMM,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAIVC,UAAAA,WAJU,GAIInB,QAAQ,CAACoB,IAAT,GAAgBD,WAJpB;AAAA;AAAA,2CAMMnB,QAAQ,CAACqB,SAAT,GACtBC,UADsB,CACX,OADW,EAEjBC,KAFiB,CAEX,OAFW,EAEF,IAFE,EAEIJ,WAAW,CAACK,KAFhB,EAGjBC,GAHiB,EANN;;AAAA;AAMVC,UAAAA,OANU;AAwCZC,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,OAAzB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,QAA1B;AAzCY,2CA2CLA,QA3CK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAgDA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,MAAMC,OAAO,GAAGjC,UAAU,EAA1B;;AADqB,kBAEWF,QAAQ,CAAC,EAAD,CAFnB;AAAA;AAAA,MAEdiC,QAFc;AAAA,MAEJG,WAFI;;AAQrBnC,EAAAA,SAAS,CAAE,YAAM;AAEbqB,IAAAA,WAAW,GAAGe,IAAd,CAAmB,YAAM;AAACN,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAAuB,KAAjD;AAEH,GAJQ,EAIN,EAJM,CAAT;AAMA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE3B,MAAM,CAACG;AAApB,KACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEyB,QADV;AAEI,IAAA,YAAY,EAAE;AAAA,UAAGK,EAAH,QAAGA,EAAH;AAAA,aAAYA,EAAZ;AAAA,KAFlB;AAGI,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aACR,oBAAC,gBAAD;AACI,QAAA,GAAG,EAAEA,IADT;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAMJ,OAAO,CAACK,IAAR,iBAA2BD,IAAI,CAACD,EAAhC,CAAN;AAAA;AAFb,SAII,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEC;AAAtB,QAJJ,CADQ;AAAA,KAHhB;AAWI,IAAA,sBAAsB,EAAElB;AAX5B,IADJ,CADJ;AAiBH,CA/BD;;AAiCA,eAAea,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FlatList, View, StyleSheet, TouchableOpacity } from 'react-native';\nimport { useHistory } from 'react-router-native';\nimport MessageItem from './MessageItem';\n// import * as firebase from 'firebase';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n\nconst styles = StyleSheet.create({\n    container: {\n        padding: 5,\n        height: '100%',\n        width: '100%',\n        position: 'absolute',\n        zIndex: 1,\n        paddingTop: 80,\n        paddingBottom: 60\n    },\n    separator: {\n        marginVertical: 5\n    },\n    headerContainer: {\n        padding: 10,\n    },\n    searchContainer: {\n        marginBottom: 15,\n    },\n});\n\nconst ItemSeparator = () => {\n\n\n    return(<View style={styles.separator}>\n\n    </View>);\n\n};\n\nconst getMessages = async () => {\n\n    \n    let messages;\n    const currentUser = firebase.auth().currentUser;\n\n    const chatIDs = await firebase.firestore().\n    collection('users')\n        .where('email', '!=', currentUser.email )\n        .get();\n        // .then((querySnapshot) => {\n        //     let ids = querySnapshot.docs.map(doc => {\n        //         const id = doc.id;\n        //         const chatIDpre = [];\n        //         chatIDpre.push(currentUser.uid);\n        //         chatIDpre.push(id);\n        //         chatIDpre.sort();\n        //         return chatIDpre.join('_');\n        //     });\n        //     chatIDs = ids;\n        // })\n        // .catch((error) => {\n        //     console.log(\"Error getting documents: \", error);\n        // });\n\n    // firebase.firestore().\n    // collection('messages').where('chatID', 'in', chatIDs)\n    //     .get()\n    //     .then((querySnapshot) => {\n    //         let posts = querySnapshot.docs.map(doc => {\n    //             const data = doc.data();\n    //             const id = doc.id;\n    //             return { id, ...data };\n    //         });\n    //         messages=posts;\n    //     })\n    //     .catch((error) => {\n    //         console.log(\"Error getting documents: \", error);\n    //     });\n\n        console.log('chatIDs: ', chatIDs);\n        console.log('messages: ', messages);\n\n        return messages;\n\n};\n\n\nconst MyMessages = () => {\n    const history = useHistory();\n    const [messages, setMessages] = useState([]);\n    // const [chatIDs, setChatIDs] = useState([]);\n    \n\n\n\n    useEffect( () => {   \n        \n        getMessages().then(() => {console.log('called');});\n       \n    }, []);\n\n    return (\n        <View style={styles.container}>\n            <FlatList\n                data={messages}\n                keyExtractor={({ id }) => id}\n                renderItem={({ item }) => (\n                    <TouchableOpacity\n                        key={item}\n                        onPress={() => history.push(`/messenger/${item.id}`)}\n                    >\n                        <MessageItem message={item} />\n                    </TouchableOpacity>\n                )}\n                ItemSeparatorComponent={ItemSeparator}\n            />\n        </View>\n    );\n};\n\nexport default MyMessages;"]},"metadata":{},"sourceType":"module"}