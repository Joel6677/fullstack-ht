{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UploadMedia.jsx\";\nimport React, { useState, useContext, useRef, useEffect } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Avatar, Divider } from 'react-native-paper';\nimport { useHistory } from 'react-router-native';\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/firebase-storage\";\nimport \"firebase/firebase-auth\";\nvar styles = StyleSheet.create({\n  container: {}\n});\n\nvar MyMedia = function MyMedia() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var history = useHistory();\n\n  var addImageToFirestore = function addImageToFirestore(downloadURL) {\n    return _regeneratorRuntime.async(function addImageToFirestore$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            firebase.auth().currentUser ? firebase.firestore().collection('images').doc(firebase.auth().currentUser.uid).collection('userImages').add({\n              downloadURL: downloadURL\n            }) : function () {\n              return console.log('not signed in');\n            };\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, null);\n};\n\nexport default MyMedia;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UploadMedia.jsx"],"names":["React","useState","useContext","useRef","useEffect","Button","Avatar","Divider","useHistory","firebase","styles","StyleSheet","create","container","MyMedia","image","setImage","history","addImageToFirestore","downloadURL","auth","currentUser","firestore","collection","doc","uid","add","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,MAAtC,EAA8CC,SAA9C,QAA+D,OAA/D;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,QAAwC,oBAAxC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,2BAAP;AACA,OAAO,wBAAP;AAGA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAE/BC,EAAAA,SAAS,EAAE;AAFoB,CAAlB,CAAf;;AASA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,kBAEMb,QAAQ,EAFd;AAAA;AAAA,MAEbc,KAFa;AAAA,MAENC,QAFM;;AAGpB,MAAMC,OAAO,GAAGT,UAAU,EAA1B;;AAEA,MAAMU,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAOC,WAAP;AAAA;AAAA;AAAA;AAAA;AAC1BV,YAAAA,QAAQ,CAACW,IAAT,GAAgBC,WAAhB,GACAZ,QAAQ,CAACa,SAAT,GACCC,UADD,CACY,QADZ,EAECC,GAFD,CAEKf,QAAQ,CAACW,IAAT,GAAgBC,WAAhB,CAA4BI,GAFjC,EAGCF,UAHD,CAGY,YAHZ,EAICG,GAJD,CAIK;AACHP,cAAAA,WAAW,EAAXA;AADG,aAJL,CADA,GAOK;AAAA,qBAAMQ,OAAO,CAACC,GAAR,CAAY,eAAZ,CAAN;AAAA,aAPL;;AAD0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAWA,SACI,oBAAC,IAAD,OADJ;AAKD,CArBD;;AAuBA,eAAed,OAAf","sourcesContent":["import React, { useState, useContext, useRef, useEffect } from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport { Button, Avatar, Divider } from 'react-native-paper';\nimport { useHistory } from 'react-router-native';\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/firebase-storage\";\nimport \"firebase/firebase-auth\";\n\n\nconst styles = StyleSheet.create({\n\n  container: {\n\n  }\n\n});\n\n\nconst MyMedia = () => {\n\n  const [image, setImage] = useState();\n  const history = useHistory();\n\n  const addImageToFirestore = async (downloadURL) => {\n    firebase.auth().currentUser ? \n    firebase.firestore()\n    .collection('images')\n    .doc(firebase.auth().currentUser.uid)\n    .collection('userImages')\n    .add({\n      downloadURL\n    }) : () => console.log('not signed in');\n};\n\n  return (\n      <View>\n\n      </View>\n  );\n};\n\nexport default MyMedia;"]},"metadata":{},"sourceType":"module"}