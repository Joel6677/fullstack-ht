{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SideMenu.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useContext, useRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { StateContext } from \"../state\";\nimport Button from \"./Button\";\nvar styles = StyleSheet.create({\n  sidebar: {\n    width: 200,\n    height: '100%',\n    backgroundColor: \"blue\"\n  },\n  button: {\n    padding: 10\n  }\n});\nexport var SlidingMenu = function (_React$Component) {\n  _inherits(SlidingMenu, _React$Component);\n\n  var _super = _createSuper(SlidingMenu);\n\n  function SlidingMenu() {\n    _classCallCheck(this, SlidingMenu);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SlidingMenu, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this$props = this.props,\n          state = _this$props.state,\n          toggleAnim = _this$props.toggleAnim;\n      Animated.spring(toggleAnim, {\n        toValue: state ? 0 : -200\n      }).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null);\n    }\n  }]);\n\n  return SlidingMenu;\n}(React.Component);\n\nvar SideMenu = function SideMenu() {\n  var _useContext = useContext(StateContext),\n      state = _useContext.state;\n\n  var toggleAnim = useRef(new Animated.Value(0)).current;\n  return React.createElement(React.Fragment, null, React.createElement(SlidingMenu, {\n    state: state.open,\n    toggleAnim: toggleAnim\n  }));\n};\n\nexport default SideMenu;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SideMenu.jsx"],"names":["React","useContext","useRef","StateContext","Button","styles","StyleSheet","create","sidebar","width","height","backgroundColor","button","padding","SlidingMenu","props","state","toggleAnim","Animated","spring","toValue","start","Component","SideMenu","Value","current","open"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,QAA0C,OAA1C;;;;AAGA,SAASC,YAAT;AACA,OAAOC,MAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,GADA;AAEPC,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,eAAe,EAAE;AAHV,GADsB;AAO/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH;AAPuB,CAAlB,CAAf;AAaA,WAAaC,WAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,yCAEuB;AAAA,wBACW,KAAKC,KADhB;AAAA,UACXC,KADW,eACXA,KADW;AAAA,UACJC,UADI,eACJA,UADI;AAGnBC,MAAAA,QAAQ,CAACC,MAAT,CACEF,UADF,EAEE;AACEG,QAAAA,OAAO,EAAEJ,KAAK,GAAG,CAAH,GAAO,CAAC;AADxB,OAFF,EAKEK,KALF;AAOD;AAZH;AAAA;AAAA,6BAcW;AASP,aACE,yCADF;AAgBD;AAvCH;;AAAA;AAAA,EAAiCrB,KAAK,CAACsB,SAAvC;;AA2CA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,oBACHtB,UAAU,CAACE,YAAD,CADP;AAAA,MACba,KADa,eACbA,KADa;;AAErB,MAAMC,UAAU,GAAGf,MAAM,CAAC,IAAIgB,QAAQ,CAACM,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAAjD;AAGA,SACE,0CACE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAET,KAAK,CAACU,IADf;AAEE,IAAA,UAAU,EAAET;AAFd,IADF,CADF;AASD,CAdD;;AAgBA,eAAeM,QAAf","sourcesContent":["import React, { useContext, useRef } from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { StateContext } from '../state';\nimport Button from './Button';\n\nconst styles = StyleSheet.create({\n  sidebar: {\n    width: 200,\n    height: '100%', \n    backgroundColor: \"blue\",\n    // position: 'fixed',\n  },\n  button: {\n    padding: 10,\n  }\n});\n\n\nexport class SlidingMenu extends React.Component {\n  \n  componentDidUpdate() {\n    const { state, toggleAnim } = this.props;\n\n    Animated.spring(\n      toggleAnim,\n      {\n        toValue: state ? 0 : -200,\n      }\n    ).start();\n\n  } \n\n  render() {\n\n    // Animated.spring(\n    //   toggleAnim,\n    //   {\n    //     toValue: state ? 0 : -200,\n    //   }\n    // ).start();\n\n    return (\n      <></>\n      // <Animated.View style={[styles.sidebar, {\n      //   transform: [{\n      //     translateX: toggleAnim\n      //   }]\n      // }]}>\n      //   <View style={styles.button}>\n      //     <Button color='error' onPress={() => console.log('Button pressed')} >Button1</Button>\n      //   </View>\n      //   <View style={styles.button}>\n      //     <Button color='error' onPress={() => console.log('Button pressed')} >Button2</Button>\n      //   </View>\n      // </Animated.View>\n\n    );\n  }\n}\n\n\nconst SideMenu = () => {\n  const { state } = useContext(StateContext);\n  const toggleAnim = useRef(new Animated.Value(0)).current;\n\n\n  return (\n    <>\n      <SlidingMenu\n        state={state.open}\n        toggleAnim={toggleAnim}\n      />\n    </>\n\n  );\n};\n\nexport default SideMenu;"]},"metadata":{},"sourceType":"module"}