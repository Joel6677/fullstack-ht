{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Userpage.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { Button, Avatar, Divider } from 'react-native-paper';\nimport { useHistory } from 'react-router-native';\nimport { TabView, SceneMap } from 'react-native-tab-view';\nimport { StateContext } from \"../state\";\nimport Text from \"./Text\";\nimport MyReviews from \"./MyReviews\";\nimport MyCollection from \"./MyCollection\";\nimport MyWishList from \"./MyWishList\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport theme from \"../theme\";\nvar styles = StyleSheet.create({\n  topContainer: {\n    flexDirection: 'column',\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1\n  },\n  container: {\n    height: '100%',\n    width: '100%'\n  },\n  bottomContainer: {},\n  avatar: {\n    marginBottom: 20,\n    width: 50,\n    height: 50,\n    borderRadius: 100\n  },\n  loading: {\n    position: 'absolute',\n    top: 245,\n    zIndex: 2\n  },\n  button: {\n    marginHorizontal: 50\n  },\n  button2: {\n    marginTop: 20\n  }\n});\nvar renderScene = SceneMap({\n  first: MyReviews,\n  second: MyCollection,\n  third: MyWishList\n});\n\nvar Userpage = function Userpage() {\n  var history = useHistory();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      img = _useState2[0],\n      setImg = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loaded = _useState4[0],\n      setLoaded = _useState4[1];\n\n  var layout = useWindowDimensions();\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      index = _useState6[0],\n      setIndex = _useState6[1];\n\n  var _useState7 = useState([{\n    key: 'first',\n    title: 'My Reviews'\n  }, {\n    key: 'second',\n    title: 'My Collection'\n  }, {\n    key: 'third',\n    title: 'My Wish List'\n  }]),\n      _useState8 = _slicedToArray(_useState7, 1),\n      routes = _useState8[0];\n\n  useEffect(function () {\n    firebase.firestore().collection(\"images\").doc(firebase.auth().currentUser.uid).collection(\"userImages\").doc(\"profilePicture\").get().then(function (snapshot) {\n      setImg(snapshot.data().downloadURL);\n    });\n  }, []);\n\n  var linkTo = function linkTo(link) {\n    history.push(link);\n  };\n\n  return React.createElement(View, {\n    style: styles.topContainer\n  }, React.createElement(View, {\n    style: styles.loading\n  }, React.createElement(ActivityIndicator, {\n    size: \"small\",\n    animating: !loaded,\n    color: theme.colors.primary\n  })), React.createElement(Image, {\n    source: {\n      uri: img\n    },\n    style: styles.avatar,\n    onLoadEnd: function onLoadEnd() {\n      return setLoaded(true);\n    },\n    defaultSource: ''\n  }), React.createElement(View, {\n    style: styles.container\n  }, React.createElement(TabView, {\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    renderScene: renderScene,\n    onIndexChange: setIndex,\n    initialLayout: {\n      width: layout.width\n    }\n  })));\n};\n\nexport default Userpage;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Userpage.jsx"],"names":["React","useState","useEffect","Button","Avatar","Divider","useHistory","TabView","SceneMap","StateContext","Text","MyReviews","MyCollection","MyWishList","firebase","theme","styles","StyleSheet","create","topContainer","flexDirection","height","width","position","zIndex","container","bottomContainer","avatar","marginBottom","borderRadius","loading","top","button","marginHorizontal","button2","marginTop","renderScene","first","second","third","Userpage","history","img","setImg","loaded","setLoaded","layout","useWindowDimensions","index","setIndex","key","title","routes","firestore","collection","doc","auth","currentUser","uid","get","then","snapshot","data","downloadURL","linkTo","link","push","colors","primary","uri"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, Image, ActivityIndicator,  useWindowDimensions } from 'react-native';\nimport { Button, Avatar, Divider } from 'react-native-paper';\nimport { useHistory } from 'react-router-native';\nimport { TabView, SceneMap } from 'react-native-tab-view';\n\nimport { StateContext } from '../state';\nimport Text from './Text';\n\nimport MyReviews from './MyReviews';\nimport MyCollection from './MyCollection';\nimport MyWishList from './MyWishList';\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nimport theme from '../theme';\n\n\nconst styles = StyleSheet.create({\n  topContainer: {\n    flexDirection: 'column',\n    // justifyContent: 'center',\n    // alignItems: 'center',\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 1\n  },\n  container: {\n    height: '100%',\n    width: '100%',\n    // flexDirection: 'row',\n    // alignItems: 'center',\n  }, \n  bottomContainer: {\n    \n  },\n  avatar: {\n    marginBottom: 20,\n    width: 50, \n    height: 50,\n    borderRadius: 100\n  },\n  loading: {\n    position: 'absolute',\n    top: 245,\n    zIndex: 2\n  },\n  button: {\n    marginHorizontal: 50\n  },\n  button2: {\n    marginTop: 20\n  },\n});\n\n\n\nconst renderScene = SceneMap({\n  first: MyReviews,\n  second: MyCollection,\n  third: MyWishList\n});\n\n\n\n\nconst Userpage = () => {\n\n  const history = useHistory();\n  const [img, setImg] = useState();\n  const [loaded, setLoaded] = useState(false);\n\n\n  const layout = useWindowDimensions();\n\n  const [index, setIndex] = useState(0);\n  const [routes] = useState([\n    { key: 'first', title: 'My Reviews' },\n    { key: 'second', title: 'My Collection' },\n    { key: 'third', title: 'My Wish List' }\n  ]);\n\n\n\n  useEffect(() => {\n\n\n    firebase.firestore()\n    .collection(\"images\")\n    .doc(firebase.auth().currentUser.uid)\n    .collection(\"userImages\")\n    .doc(\"profilePicture\")\n    .get().then((snapshot) => {\n      setImg(snapshot.data().downloadURL);\n    });\n  \n  },[]);\n\n  const linkTo = (link) => {\n    history.push(link);\n  };\n\n\n  return (\n\n      <View style={styles.topContainer}>\n      \n      <View style={styles.loading}>\n        <ActivityIndicator size='small' animating={!loaded} color={theme.colors.primary} />\n      </View>\n      <Image source={{ uri: img }} style={styles.avatar} onLoadEnd={() => setLoaded(true)} defaultSource={''} />\n      {/* <View style={styles.loading}>\n        <ActivityIndicator size='large' animating={!loaded} color={theme.colors.primary} />\n      </View>\n      <Image source={{ uri: img }} style={styles.avatar} onLoadEnd={() => setLoaded(true)} defaultSource={''}/>\n      <View style={styles.container}>\n        <Button icon=\"star\" mode=\"outlined\" compact=\"true\" style={styles.button} onPress={() => linkTo('my-reviews')}>\n         My reviews\n          </Button>\n\n        <Button icon=\"information\" mode=\"outlined\" compact=\"true\" style={styles.button} onPress={() => linkTo('my-info')}>\n          My info\n          </Button>\n        \n          <Button icon=\"database\" mode=\"outlined\" compact=\"true\" style={styles.button} onPress={() => linkTo('my-collection')}>\n          My collection\n          </Button>\n\n          <Button icon=\"glass-tulip\" mode=\"outlined\" compact=\"true\" style={styles.button} onPress={() => linkTo('my-wishList')}>\n          My wish List\n          </Button> */}\n      <View style={styles.container}>\n\n        <TabView\n          navigationState={{ index, routes }}\n          renderScene={renderScene}\n          onIndexChange={setIndex}\n          initialLayout={{ width: layout.width }}\n        />\n      </View>\n\n          \n\n      {/* </View> */}\n      </View>\n\n  );\n};\n\nexport default Userpage;"]},"metadata":{},"sourceType":"module"}