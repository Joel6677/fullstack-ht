{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SingleWhisky.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-native';\nimport { useQuery } from '@apollo/react-hooks';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport WhiskyItemInfo from \"./WhiskyItemInfo\";\nimport ReviewItem from \"./ReviewItem\";\nimport * as firebase from 'firebase';\nvar styles = StyleSheet.create({\n  separator: {\n    height: 10\n  },\n  reviewItem: {\n    padding: 15\n  }\n});\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator\n  });\n};\n\nvar WhiskyInfo = function WhiskyInfo(_ref) {\n  var whisky = _ref.whisky;\n  return React.createElement(React.Fragment, null, React.createElement(WhiskyItemInfo, {\n    whisky: whisky\n  }), React.createElement(ItemSeparator, null));\n};\n\nvar SingleWhisky = function SingleWhisky() {\n  var history = useHistory();\n\n  var _useState = useState('latest'),\n      _useState2 = _slicedToArray(_useState, 2),\n      orderBy = _useState2[0],\n      setOrderBy = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchKeyword = _useState4[0],\n      setSearchKeyword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      whiskies = _useState6[0],\n      setWhiskies = _useState6[1];\n\n  useEffect(function () {\n    firebase.firestore().collection('whiskies').get().then(function (querySnapshot) {\n      var posts = querySnapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setWhiskies(posts);\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n  }, [history]);\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  console.log('id: ', id);\n  return React.createElement(FlatList, {\n    data: reviewNodes,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(ReviewItem, {\n        style: styles.reviewItem,\n        review: item\n      });\n    },\n    keyExtractor: function keyExtractor(_ref3) {\n      var id = _ref3.id;\n      return id;\n    },\n    ListHeaderComponent: function ListHeaderComponent() {\n      return React.createElement(WhiskyInfo, {\n        whisky: whisky\n      });\n    },\n    ItemSeparatorComponent: ItemSeparator,\n    onEndReachedThreshold: 0.5\n  });\n};\n\nexport default SingleWhisky;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SingleWhisky.jsx"],"names":["React","useState","useEffect","useParams","useQuery","WhiskyItemInfo","ReviewItem","firebase","styles","StyleSheet","create","separator","height","reviewItem","padding","ItemSeparator","WhiskyInfo","whisky","SingleWhisky","history","useHistory","orderBy","setOrderBy","searchKeyword","setSearchKeyword","whiskies","setWhiskies","firestore","collection","get","then","querySnapshot","posts","docs","map","doc","data","id","catch","error","console","log","reviewNodes","item"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useParams } from 'react-router-native';\nimport { useQuery } from '@apollo/react-hooks';\nimport { FlatList, StyleSheet, View } from 'react-native';\n\nimport WhiskyItemInfo from './WhiskyItemInfo';\n// import { GET_REPOSITORY } from '../graphql/queries';\nimport ReviewItem from './ReviewItem';\nimport * as firebase from 'firebase';\n\nconst styles = StyleSheet.create({\n  separator: {\n    height: 10,\n  },\n  reviewItem: {\n    padding: 15,\n  },\n});\n\nconst ItemSeparator = () => <View style={styles.separator} />;\n\n// one avatar image\n\nconst WhiskyInfo = ({ whisky }) => {\n  return (\n    <>\n      <WhiskyItemInfo whisky={whisky}/>\n      <ItemSeparator />\n    </>\n  );\n};\n\n// const updateQuery = (previousResult, { fetchMoreResult }) => {\n//   const nextResult = {\n//     repository: {\n//       ...fetchMoreResult.repository,\n//       reviews: {\n//         ...fetchMoreResult.repository.reviews,\n//         edges: [\n//           ...previousResult.repository.reviews.edges,\n//           ...fetchMoreResult.repository.reviews.edges,\n//         ],\n//       },\n//     },\n//   };\n\n//   return nextResult;\n// };\n\nconst SingleWhisky = () => {\n\n  const history = useHistory();\n  const [orderBy, setOrderBy] = useState('latest');\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [whiskies, setWhiskies] = useState('');\n\n\n  useEffect(() => {\n\n    firebase.firestore()\n        .collection('whiskies')\n        .get()\n        .then((querySnapshot) => {\n            let posts = querySnapshot.docs.map(doc => {\n                const data = doc.data();\n                const id = doc.id;\n                return { id, ...data };\n            });\n            setWhiskies(posts);\n        })\n        .catch((error) => {\n            console.log(\"Error getting documents: \", error);\n        });\n}, [history]);\n\n  const { id } = useParams();\n\n  console.log('id: ', id);\n\n  // get whisky by id\n\n  // get whisky reviews\n\n  return (\n    <FlatList\n      data={reviewNodes}\n      renderItem={({ item }) => (\n        <ReviewItem style={styles.reviewItem} review={item} />\n      )}\n      keyExtractor={({ id }) => id}\n      ListHeaderComponent={() =>\n        <WhiskyInfo whisky={whisky} />\n      }\n      ItemSeparatorComponent={ItemSeparator}\n      // onEndReached={handleFetchMore}\n      onEndReachedThreshold={0.5}\n    />\n  );\n};\n\nexport default SingleWhisky;\n"]},"metadata":{},"sourceType":"module"}