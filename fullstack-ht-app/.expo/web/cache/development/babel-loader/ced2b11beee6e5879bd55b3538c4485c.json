{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as firebase from 'firebase';\nexport var SignUpWithEmail = function SignUpWithEmail(email, username, password) {\n  var currentUser, db;\n  return _regeneratorRuntime.async(function SignUpWithEmail$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, password));\n\n        case 3:\n          currentUser = firebase.auth().currentUser;\n          db = firebase.firestore();\n          console.log('currentUser: ', currentUser);\n          db.collection('users').doc(currentUser.uid).set({\n            username: username,\n            email: currentUser.email\n          });\n          db.collection('usernames').doc(username).set({\n            uid: currentUser.uid\n          });\n          _context.next = 13;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('sign up with email error', _context.t0);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};\nexport var SignInWithEmail = function SignInWithEmail(email, password) {\n  return _regeneratorRuntime.async(function SignInWithEmail$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var SignInWithGoogle = function SignInWithGoogle() {\n  var provider;\n  return _regeneratorRuntime.async(function SignInWithGoogle$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          provider = new firebase.auth.GoogleAuthProvider();\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(firebase.auth().signInWithPopup(provider));\n\n        case 4:\n          _context3.next = 9;\n          break;\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log('error SignInWithGoogle: ', _context3.t0);\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\nexport var SignInAnonymously = function SignInAnonymously() {\n  return _regeneratorRuntime.async(function SignInAnonymously$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(firebase.auth().signInAnonymously());\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var SignOut = function SignOut() {\n  return _regeneratorRuntime.async(function SignOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(firebase.auth().signOut());\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var DeleteUser = function DeleteUser() {\n  var currentUser;\n  return _regeneratorRuntime.async(function DeleteUser$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          currentUser = firebase.auth().currentUser;\n          _context6.next = 3;\n          return _regeneratorRuntime.awrap(currentUser.delete());\n\n        case 3:\n          console.log('user deleted: ', currentUser);\n\n        case 4:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/firebase/firebaseFunctions.js"],"names":["firebase","SignUpWithEmail","email","username","password","auth","createUserWithEmailAndPassword","currentUser","db","firestore","console","log","collection","doc","uid","set","SignInWithEmail","signInWithEmailAndPassword","SignInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","SignInAnonymously","signInAnonymously","SignOut","signOut","DeleteUser","delete"],"mappings":";AAAA,OAAO,KAAKA,QAAZ,MAA0B,UAA1B;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAOC,KAAP,EAAcC,QAAd,EAAwBC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEjBJ,QAAQ,CAACK,IAAT,GAAgBC,8BAAhB,CAA+CJ,KAA/C,EAAsDE,QAAtD,CAFiB;;AAAA;AAGjBG,UAAAA,WAHiB,GAGHP,QAAQ,CAACK,IAAT,GAAgBE,WAHb;AAIjBC,UAAAA,EAJiB,GAIZR,QAAQ,CAACS,SAAT,EAJY;AAMvBC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,WAA7B;AAEAC,UAAAA,EAAE,CAACI,UAAH,CAAc,OAAd,EACKC,GADL,CACSN,WAAW,CAACO,GADrB,EAEKC,GAFL,CAES;AACDZ,YAAAA,QAAQ,EAAEA,QADT;AAEDD,YAAAA,KAAK,EAAEK,WAAW,CAACL;AAFlB,WAFT;AAMAM,UAAAA,EAAE,CAACI,UAAH,CAAc,WAAd,EACKC,GADL,CACSV,QADT,EAEKY,GAFL,CAES;AACDD,YAAAA,GAAG,EAAEP,WAAW,CAACO;AADhB,WAFT;AAduB;AAAA;;AAAA;AAAA;AAAA;AAqBvBJ,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AArBuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAyBH,OAAO,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAOd,KAAP,EAAcE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACrBJ,QAAQ,CAACK,IAAT,GAAgBY,0BAAhB,CAA2Cf,KAA3C,EAAkDE,QAAlD,CADqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAIP,OAAO,IAAMc,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGlBC,UAAAA,QAHkB,GAGP,IAAInB,QAAQ,CAACK,IAAT,CAAce,kBAAlB,EAHO;AAAA;AAAA,2CAIlBpB,QAAQ,CAACK,IAAT,GAAgBgB,eAAhB,CAAgCF,QAAhC,CAJkB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOxBT,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AAPwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AAYP,OAAO,IAAMW,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACvBtB,QAAQ,CAACK,IAAT,GAAgBkB,iBAAhB,EADuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAKP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACbxB,QAAQ,CAACK,IAAT,GAAgBoB,OAAhB,EADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAIP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBnB,UAAAA,WADgB,GACFP,QAAQ,CAACK,IAAT,GAAgBE,WADd;AAAA;AAAA,2CAGhBA,WAAW,CAACoB,MAAZ,EAHgB;;AAAA;AAKtBjB,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,WAA9B;;AALsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["import * as firebase from 'firebase';\n\nexport const SignUpWithEmail = async (email, username, password) => {\n    try {\n        await firebase.auth().createUserWithEmailAndPassword(email, password);\n        const currentUser = firebase.auth().currentUser;\n        const db = firebase.firestore();\n\n        console.log('currentUser: ', currentUser);\n\n        db.collection('users')\n            .doc(currentUser.uid)\n            .set({\n                username: username,\n                email: currentUser.email\n            });\n        db.collection('usernames')\n            .doc(username)\n            .set({\n                uid: currentUser.uid\n            });\n\n    } catch (err) {\n        console.log('sign up with email error', err);\n    }\n};\n\n    export const SignInWithEmail = async (email, password) => {\n        await firebase.auth().signInWithEmailAndPassword(email, password);\n    };\n\n    export const SignInWithGoogle = async () => {\n        \n        try {\n            const provider = new firebase.auth.GoogleAuthProvider();\n            await firebase.auth().signInWithPopup(provider);\n  \n        } catch (err) {\n            console.log('error SignInWithGoogle: ', err);\n        }\n        \n    };\n\n    export const SignInAnonymously = async () => {\n        await firebase.auth().signInAnonymously();\n\n    };\n    \n    export const SignOut = async () => {\n        await firebase.auth().signOut();\n    };\n\n    export const DeleteUser = async () => {\n        const currentUser = firebase.auth().currentUser;\n\n        await currentUser.delete();\n\n        console.log('user deleted: ', currentUser);\n    };"]},"metadata":{},"sourceType":"module"}