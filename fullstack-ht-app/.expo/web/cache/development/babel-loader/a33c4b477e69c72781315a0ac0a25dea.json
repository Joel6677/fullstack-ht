{"ast":null,"code":"var _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SideMenu.jsx\";\nimport React, { useContext, useEffect, useRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ToggleButton } from 'react-native-paper';\nimport { StateContext } from \"../state\";\nimport Button from \"./Button\";\nvar styles = StyleSheet.create({\n  sidebar: {\n    width: 200,\n    height: '100%',\n    backgroundColor: \"blue\"\n  },\n  button: {\n    padding: 10\n  }\n});\n\nvar SideMenu = function SideMenu() {\n  var _useContext = useContext(StateContext),\n      state = _useContext.state;\n\n  var toggleAnim = useRef(new Animated.Value(0)).current;\n  Animated.spring(toggleAnim, {\n    toValue: state ? 0 : -200\n  }).start();\n  return React.createElement(React.Fragment, null, React.createElement(SlideMenu, {\n    toggleAnim: toggleAnim,\n    state: state\n  }));\n};\n\nexport default SideMenu;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SideMenu.jsx"],"names":["React","useContext","useEffect","useRef","ToggleButton","StateContext","Button","styles","StyleSheet","create","sidebar","width","height","backgroundColor","button","padding","SideMenu","state","toggleAnim","Animated","Value","current","spring","toValue","start"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,QAAqD,OAArD;;;;AAEA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,SAASC,YAAT;AACA,OAAOC,MAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,GADA;AAEPC,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,eAAe,EAAE;AAHV,GADsB;AAO/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH;AAPuB,CAAlB,CAAf;;AA+EA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,oBACHf,UAAU,CAACI,YAAD,CADP;AAAA,MACbY,KADa,eACbA,KADa;;AAErB,MAAMC,UAAU,GAAGf,MAAM,CAAC,IAAIgB,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAAjD;AAEEF,EAAAA,QAAQ,CAACG,MAAT,CACEJ,UADF,EAEE;AACEK,IAAAA,OAAO,EAAEN,KAAK,GAAG,CAAH,GAAO,CAAC;AADxB,GAFF,EAKEO,KALF;AAOF,SACE,0CACE,oBAAE,SAAF;AAAY,IAAA,UAAU,EAAEN,UAAxB;AAAoC,IAAA,KAAK,EAAED;AAA3C,IADF,CADF;AAUD,CArBD;;AAuBA,eAAeD,QAAf","sourcesContent":["import React, { useContext, useEffect, useRef } from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport { ToggleButton } from 'react-native-paper';\n\nimport { StateContext } from '../state';\nimport Button from './Button';\n\nconst styles = StyleSheet.create({\n  sidebar: {\n    width: 200,\n    height: '100%', \n    backgroundColor: \"blue\",\n    // position: 'fixed',\n  },\n  button: {\n    padding: 10,\n  }\n});\n\n// const SlideMenu = ({toggleAnim, state}) => {\n//   console.log('slideMenu');\n//   console.log('stateSlideMenu ', state);\n//   console.log('toggleAnim: ', toggleAnim);\n\n  // React.useEffect(() => {\n  //   Animated.spring(\n  //     toggleAnim,\n  //     {\n  //       toValue: state ? 0 : -200,\n  //     }\n  //   ).start();\n  // }, [toggleAnim, state]);\n  \n//   return (\n//     <Animated.View style={[styles.sidebar, {\n//       transform: [{\n//         translateX: toggleAnim\n//       }]\n//     }]}>\n//       <View style={styles.button}>\n//         <Button color='error' onPress={() => console.log('Button pressed')} >Button1</Button>\n//       </View>\n//       <View style={styles.button}>\n//         <Button color='error' onPress={() => console.log('Button pressed')} >Button2</Button>\n//       </View>\n//     </Animated.View>\n\n//   );\n// };\n\n\n// export class SlidingMenu extends React.Component {\n\n\n//   render() {\n\n//     const { state, toggleAnim } = this.props;\n\n//     console.log(toggleAnim);\n\n//     Animated.spring(\n//       toggleAnim,\n//       {\n//         toValue: state ? 0 : -200,\n//       }\n//     ).start();\n\n//     return (\n//       <Animated.View style={[styles.sidebar, {\n//         transform: [{\n//           translateX: toggleAnim\n//         }]\n//       }]}>\n//         <View style={styles.button}>\n//           <Button color='error' onPress={() => console.log('Button pressed')} >Button1</Button>\n//         </View>\n//         <View style={styles.button}>\n//           <Button color='error' onPress={() => console.log('Button pressed')} >Button2</Button>\n//         </View>\n//       </Animated.View>\n\n//     );\n//   }\n// }\n\n\nconst SideMenu = () => {\n  const { state } = useContext(StateContext);\n  const toggleAnim = useRef(new Animated.Value(0)).current; \n\n    Animated.spring(\n      toggleAnim,\n      {\n        toValue: state ? 0 : -200,\n      }\n    ).start();\n\n  return (\n    <>\n      < SlideMenu toggleAnim={toggleAnim} state={state}/>\n      {/* <SlidingMenu\n        state={state.open}\n        toggleAnim={toggleAnim}\n      /> */}\n    </>\n\n  );\n};\n\nexport default SideMenu;"]},"metadata":{},"sourceType":"module"}