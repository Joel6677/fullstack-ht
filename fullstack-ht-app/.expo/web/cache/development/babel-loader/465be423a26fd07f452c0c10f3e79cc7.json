{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/AppBar.jsx\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Constants from 'expo-constants';\nimport { Link } from 'react-router-native';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-native';\nimport theme from \"../theme\";\nimport Text from \"./Text\";\nimport AuthStorageContext from \"../contexts/AuthStorageContext\";\nimport useAuthorizedUser from \"../hooks/useAuthorizedUser\";\nimport Button from \"./Button\";\nimport 'antd/dist/antd.css';\nimport \"../menu/styles.css\";\nimport { Icon } from 'antd';\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: theme.colors.appBarBackground\n  },\n  scrollView: {\n    flexDirection: 'row'\n  },\n  tabTouchable: {\n    flexGrow: 0\n  },\n  tabContainer: {\n    paddingHorizontal: 15,\n    paddingVertical: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  tabText: {\n    color: 'white'\n  }\n});\n\nvar AppBarTab = function AppBarTab(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  console.log('children: ', children);\n  console.log('props: ', props);\n  return React.createElement(View, {\n    style: styles.tabContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return console.log('Button pressed');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nvar AppBar = function AppBar() {\n  var apolloClient = useApolloClient();\n  var authStorage = useContext(AuthStorageContext);\n  var history = useHistory();\n\n  var _useAuthorizedUser = useAuthorizedUser(),\n      authorizedUser = _useAuthorizedUser.authorizedUser;\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var onSignOut = function onSignOut() {\n    return _regeneratorRuntime.async(function onSignOut$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(authStorage.removeAccessToken());\n\n          case 2:\n            apolloClient.resetStore();\n            history.push('/');\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var icon = open ? 'fold' : 'unfold';\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.scrollView,\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon, {\n    type: \"menu-\" + icon,\n    className: \"sidebar-toggle\",\n    onClick: console.log('test'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), authorizedUser ? React.createElement(React.Fragment, null, React.createElement(AppBarTab, {\n    onPress: onSignOut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Sign out\")) : React.createElement(React.Fragment, null, React.createElement(Link, {\n    to: \"/sign-in\",\n    component: AppBarTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Sign in\"), React.createElement(Link, {\n    to: \"/sign-up\",\n    component: AppBarTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Sign up\"))));\n};\n\nexport default AppBar;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/AppBar.jsx"],"names":["React","useContext","useState","Constants","Link","useApolloClient","useHistory","theme","Text","AuthStorageContext","useAuthorizedUser","Button","Icon","styles","StyleSheet","create","container","paddingTop","statusBarHeight","backgroundColor","colors","appBarBackground","scrollView","flexDirection","tabTouchable","flexGrow","tabContainer","paddingHorizontal","paddingVertical","alignItems","justifyContent","tabText","color","AppBarTab","children","props","console","log","AppBar","apolloClient","authStorage","history","authorizedUser","undefined","open","setOpen","onSignOut","removeAccessToken","resetStore","push","icon"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\n\nimport {\n  View,\n  ScrollView,\n  StyleSheet,\n} from 'react-native';\n\nimport Constants from 'expo-constants';\nimport { Link } from 'react-router-native';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport { useHistory } from 'react-router-native';\n\nimport theme from '../theme';\nimport Text from './Text';\nimport AuthStorageContext from '../contexts/AuthStorageContext';\nimport useAuthorizedUser from '../hooks/useAuthorizedUser';\n\nimport Button from './Button';\n\nimport 'antd/dist/antd.css';\nimport '../menu/styles.css';\nimport { Icon } from 'antd';\n\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: theme.colors.appBarBackground,\n  },\n  scrollView: {\n    flexDirection: 'row',\n  },\n  tabTouchable: {\n    flexGrow: 0,\n  },\n  tabContainer: {\n    paddingHorizontal: 15,\n    paddingVertical: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  tabText: {\n    color: 'white',\n  },\n});\n\n// const AppBarTab = ({ children, ...props }) => { \n//   return (\n//     <TouchableWithoutFeedback style={styles.tabTouchable} {...props}>\n//       <View style={styles.tabContainer}>\n//         <Text fontWeight=\"bold\" style={styles.tabText}>\n//           {children}\n//         </Text>\n//       </View>\n//     </TouchableWithoutFeedback>\n//   );\n// };\n\nconst AppBarTab = ({ children, ...props }) => { \n  console.log('children: ', children);\n  console.log('props: ', props);\n  // on press {...props}\n  return (\n  <View style={styles.tabContainer}>\n      <Button onPress={() => console.log('Button pressed')} >{children}</Button> \n  </View>\n\n  );\n};\n\nconst AppBar = () => {\n  const apolloClient = useApolloClient();\n  const authStorage = useContext(AuthStorageContext);\n  const history = useHistory();\n\n  const { authorizedUser } = useAuthorizedUser();\n\n  const [open, setOpen] = useState(undefined);\n\n  const onSignOut = async () => {\n    await authStorage.removeAccessToken();\n    apolloClient.resetStore();\n    history.push('/');\n  };\n\n  const icon = open ? 'fold' : 'unfold';\n\n  return (\n\n    <View style={styles.container}>\n      <ScrollView style={styles.scrollView} horizontal> \n        <Icon\n          type={`menu-${icon}`}\n          className=\"sidebar-toggle\"\n          onClick={console.log('test')}\n        />\n        {authorizedUser ? (\n          <>\n            <AppBarTab onPress={onSignOut}>Sign out</AppBarTab>\n          </>\n        ) : (\n          <>\n            <Link to=\"/sign-in\" component={AppBarTab}>\n              Sign in\n            </Link>\n            <Link to=\"/sign-up\" component={AppBarTab}>\n              Sign up\n            </Link>\n          </>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default AppBar;"]},"metadata":{},"sourceType":"module"}