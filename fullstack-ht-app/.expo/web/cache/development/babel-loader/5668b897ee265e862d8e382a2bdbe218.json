{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/WhiskyList.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useHistory } from 'react-router-native';\nimport { Searchbar } from 'react-native-paper';\nimport { useDebounce } from 'use-debounce';\nimport WhiskyItem from \"./WhiskyItem\";\nimport { useCollection } from 'react-firebase-hooks/firestore';\nimport Picker from \"./Picker\";\nimport * as firebase from 'firebase';\nvar styles = StyleSheet.create({\n  separator: {\n    height: 10\n  },\n  headerContainer: {\n    padding: 15\n  },\n  searchContainer: {\n    marginBottom: 15\n  }\n});\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator\n  });\n};\n\nvar orderByOptions = [{\n  label: 'Latest repositories',\n  value: 'latest'\n}, {\n  label: 'Highest rated repositories',\n  value: 'highestRating'\n}, {\n  label: 'Lowest rated repositories',\n  value: 'lowestRating'\n}];\n\nvar WhiskyListHeader = function WhiskyListHeader(_ref) {\n  var onOrderByChange = _ref.onOrderByChange,\n      orderBy = _ref.orderBy,\n      searchKeyword = _ref.searchKeyword,\n      onSearchKeywordChange = _ref.onSearchKeywordChange;\n  return React.createElement(View, {\n    style: styles.headerContainer\n  }, React.createElement(View, {\n    style: styles.searchContainer\n  }, React.createElement(Searchbar, {\n    placeholder: \"Search whiskies\",\n    value: searchKeyword,\n    onChangeText: onSearchKeywordChange\n  })), React.createElement(Picker, {\n    placeholder: {},\n    onValueChange: onOrderByChange,\n    value: orderBy,\n    items: orderByOptions\n  }));\n};\n\nexport var WhiskyListContainer = function (_React$Component) {\n  _inherits(WhiskyListContainer, _React$Component);\n\n  var _super = _createSuper(WhiskyListContainer);\n\n  function WhiskyListContainer() {\n    var _this;\n\n    _classCallCheck(this, WhiskyListContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderHeader = function () {\n      var _this$props = _this.props,\n          onOrderByChange = _this$props.onOrderByChange,\n          orderBy = _this$props.orderBy,\n          searchKeyword = _this$props.searchKeyword,\n          onSearchKeywordChange = _this$props.onSearchKeywordChange;\n      return React.createElement(WhiskyListHeader, {\n        onOrderByChange: onOrderByChange,\n        orderBy: orderBy,\n        searchKeyword: searchKeyword,\n        onSearchKeywordChange: onSearchKeywordChange\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(WhiskyListContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          whiskies = _this$props2.whiskies,\n          onEndReach = _this$props2.onEndReach,\n          onWhiskyPress = _this$props2.onWhiskyPress;\n      return React.createElement(React.Fragment, null);\n    }\n  }]);\n\n  return WhiskyListContainer;\n}(React.Component);\n\nvar WhiskyList = function WhiskyList() {\n  var history = useHistory();\n\n  var _useState = useState('latest'),\n      _useState2 = _slicedToArray(_useState, 2),\n      orderBy = _useState2[0],\n      setOrderBy = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchKeyword = _useState4[0],\n      setSearchKeyword = _useState4[1];\n\n  var _useCollection = useCollection(firebase.firestore().collection('whiskies')),\n      _useCollection2 = _slicedToArray(_useCollection, 1),\n      whiskies = _useCollection2[0];\n\n  console.log('whiskies: ', whiskies);\n  return React.createElement(React.Fragment, null);\n};\n\nexport default WhiskyList;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/WhiskyList.jsx"],"names":["React","useState","useHistory","Searchbar","useDebounce","WhiskyItem","useCollection","Picker","firebase","styles","StyleSheet","create","separator","height","headerContainer","padding","searchContainer","marginBottom","ItemSeparator","orderByOptions","label","value","WhiskyListHeader","onOrderByChange","orderBy","searchKeyword","onSearchKeywordChange","WhiskyListContainer","renderHeader","props","whiskies","onEndReach","onWhiskyPress","Component","WhiskyList","history","setOrderBy","setSearchKeyword","firestore","collection","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { FlatList, View, StyleSheet, TouchableOpacity } from 'react-native';\nimport { useHistory } from 'react-router-native';\nimport { Searchbar } from 'react-native-paper';\nimport { useDebounce } from 'use-debounce';\n\nimport WhiskyItem from './WhiskyItem';\nimport { useCollection } from 'react-firebase-hooks/firestore';\n// import useRepositories from '../hooks/useRepositories';\nimport Picker from './Picker';\nimport * as firebase from 'firebase';\n\nconst styles = StyleSheet.create({\n    separator: {\n        height: 10,\n    },\n    headerContainer: {\n        padding: 15,\n    },\n    searchContainer: {\n        marginBottom: 15,\n    },\n});\n\nconst ItemSeparator = () => <View style={styles.separator} />;\n\nconst orderByOptions = [\n    { label: 'Latest repositories', value: 'latest' },\n    {\n        label: 'Highest rated repositories',\n        value: 'highestRating',\n    },\n    {\n        label: 'Lowest rated repositories',\n        value: 'lowestRating',\n    },\n];\n\nconst WhiskyListHeader = (\n    {\n      onOrderByChange,\n      orderBy,\n      searchKeyword,\n      onSearchKeywordChange,\n    }\n) => {\n    return (\n        <View style={styles.headerContainer}>\n            <View style={styles.searchContainer}>\n                <Searchbar\n                  placeholder=\"Search whiskies\"\n                  value={searchKeyword}\n                  onChangeText={onSearchKeywordChange}\n                />\n            </View>\n            <Picker\n            placeholder={{}}\n            onValueChange={onOrderByChange}\n            value={orderBy}\n            items={orderByOptions}\n            />\n        </View>\n    );\n};\n\nexport class WhiskyListContainer extends React.Component {\n    renderHeader = () => {\n        const {\n            onOrderByChange,\n            orderBy,\n            searchKeyword,\n            onSearchKeywordChange,\n        } = this.props;\n\n        return (\n            <WhiskyListHeader\n                onOrderByChange={onOrderByChange}\n                orderBy={orderBy}\n                searchKeyword={searchKeyword}\n                onSearchKeywordChange={onSearchKeywordChange}\n            />\n        );\n    };\n\n    render() {\n        const { whiskies, onEndReach, onWhiskyPress } = this.props;\n\n        // useState get uploaded whiskies\n\n        return (\n            <></>\n            // <FlatList\n            //     data={whiskies}\n            //     keyExtractor={({ id }) => id}\n            //     renderItem={({ item }) => (\n            //         <TouchableOpacity\n            //             key={item.id}\n            //             onPress={() => onWhiskyPress(item.id)}\n            //         >\n            //             <WhiskyItem repository={item} />\n            //         </TouchableOpacity>\n            //     )}\n            //     ItemSeparatorComponent={ItemSeparator}\n            //     ListHeaderComponent={this.renderHeader}\n            //     onEndReached={onEndReach}\n            //     onEndReachedThreshold={0.5}\n            //     initialNumToRender={8}\n            // />\n        );\n    }\n}\n\nconst WhiskyList = () => {\n    const history = useHistory();\n    const [orderBy, setOrderBy] = useState('latest');\n    const [searchKeyword, setSearchKeyword] = useState('');\n    // const [debouncedSearchKeyword] = useDebounce(searchKeyword, 500);\n\n    const [whiskies] = useCollection(\n        firebase.firestore().collection('whiskies')\n      );\n\n     console.log('whiskies: ', whiskies);\n\n    //\n    //   const { repositories, fetchMore } = useRepositories({\n    // first: 8,\n    // ...variablesByOrderBy[orderBy],\n    //     searchKeyword: debouncedSearchKeyword,\n    //   });\n\n    //   const onEndReach = () => {\n        // fetch more\n    //   };\n    //\n\n    return (\n        <></>\n        // <WhiskyListContainer\n        //     whiskies={whiskies}\n        //     orderBy={orderBy}\n        //     onOrderByChange={(newOrderBy) => {\n        //         setOrderBy(newOrderBy);\n        //     }}\n        //     //   onEndReach={onEndReach}\n        //     searchKeyword={searchKeyword}\n        //     onSearchKeywordChange={(keyword) => setSearchKeyword(keyword)}\n        //     onRepositoryPress={(id) => {\n        //         history.push(`/repositories/${id}`);\n        //     }}\n        // />\n    );\n};\n\nexport default WhiskyList;"]},"metadata":{},"sourceType":"module"}