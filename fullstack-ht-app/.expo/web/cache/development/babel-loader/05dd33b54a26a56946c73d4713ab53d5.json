{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useContext } from 'react';\nimport { useApolloClient, useMutation } from '@apollo/react-hooks';\nimport { AUTHORIZE } from \"../graphql/mutations\";\nimport AuthStorageContext from \"../contexts/AuthStorageContext\";\n\nvar useSignIn = function useSignIn() {\n  var _useMutation = useMutation(AUTHORIZE),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      mutate = _useMutation2[0],\n      result = _useMutation2[1];\n\n  var apolloClient = useApolloClient();\n  var authStorage = useContext(AuthStorageContext);\n\n  var signIn = function signIn(_ref) {\n    var username, password, credentials, payload, data;\n    return _regeneratorRuntime.async(function signIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            username = _ref.username, password = _ref.password;\n            credentials = {\n              username: username,\n              password: password\n            };\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(mutate({\n              variables: {\n                credentials: credentials\n              }\n            }));\n\n          case 4:\n            payload = _context.sent;\n            data = payload.data;\n\n            if (!(data && data.authorize)) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(authStorage.setAccessToken(data.authorize.accessToken));\n\n          case 9:\n            apolloClient.resetStore();\n\n          case 10:\n            return _context.abrupt(\"return\", payload);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return [signIn, result];\n};\n\nexport default useSignIn;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/hooks/useSignIn.js"],"names":["useContext","useApolloClient","useMutation","AUTHORIZE","AuthStorageContext","useSignIn","mutate","result","apolloClient","authStorage","signIn","username","password","credentials","variables","payload","data","authorize","setAccessToken","accessToken","resetStore"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,qBAA7C;AAEA,SAASC,SAAT;AACA,OAAOC,kBAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,qBACGH,WAAW,CAACC,SAAD,CADd;AAAA;AAAA,MACfG,MADe;AAAA,MACPC,MADO;;AAEtB,MAAMC,YAAY,GAAGP,eAAe,EAApC;AACA,MAAMQ,WAAW,GAAGT,UAAU,CAACI,kBAAD,CAA9B;;AAEA,MAAMM,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,QAAT,QAASA,QAAT,EAAmBC,QAAnB,QAAmBA,QAAnB;AACPC,YAAAA,WADO,GACO;AAAEF,cAAAA,QAAQ,EAARA,QAAF;AAAYC,cAAAA,QAAQ,EAARA;AAAZ,aADP;AAAA;AAAA,6CAGSN,MAAM,CAAC;AAAEQ,cAAAA,SAAS,EAAE;AAAED,gBAAAA,WAAW,EAAXA;AAAF;AAAb,aAAD,CAHf;;AAAA;AAGPE,YAAAA,OAHO;AAILC,YAAAA,IAJK,GAIID,OAJJ,CAILC,IAJK;;AAAA,kBAMTA,IAAI,IAAIA,IAAI,CAACC,SANJ;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAOLR,WAAW,CAACS,cAAZ,CAA2BF,IAAI,CAACC,SAAL,CAAeE,WAA1C,CAPK;;AAAA;AAQXX,YAAAA,YAAY,CAACY,UAAb;;AARW;AAAA,6CAWNL,OAXM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAcA,SAAO,CAACL,MAAD,EAASH,MAAT,CAAP;AACD,CApBD;;AAsBA,eAAeF,SAAf","sourcesContent":["import { useContext } from 'react';\nimport { useApolloClient, useMutation } from '@apollo/react-hooks';\n\nimport { AUTHORIZE } from '../graphql/mutations';\nimport AuthStorageContext from '../contexts/AuthStorageContext';\n\nconst useSignIn = () => {\n  const [mutate, result] = useMutation(AUTHORIZE);\n  const apolloClient = useApolloClient();\n  const authStorage = useContext(AuthStorageContext);\n\n  const signIn = async ({ username, password }) => {\n    const credentials = { username, password };\n\n    const payload = await mutate({ variables: { credentials } });\n    const { data } = payload;\n\n    if (data && data.authorize) {\n      await authStorage.setAccessToken(data.authorize.accessToken);\n      apolloClient.resetStore();\n    }\n\n    return payload;\n  };\n\n  return [signIn, result];\n};\n\nexport default useSignIn;"]},"metadata":{},"sourceType":"module"}