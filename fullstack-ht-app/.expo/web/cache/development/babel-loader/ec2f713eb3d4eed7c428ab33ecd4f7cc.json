{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as firebase from 'firebase';\nexport var sendChatMessage = function sendChatMessage(chatID, chat) {\n  console.log('chatid: ', chatID);\n  console.log('chat: ', chat);\n  firebase.firestore().collection('messages').doc(chatID).collection('chats').add({\n    chat: chat,\n    createdAt: new Date().getTime()\n  });\n};\nexport var handleSend = function handleSend(chatID, messages) {\n  var text;\n  return _regeneratorRuntime.async(function handleSend$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          text = messages[0].text;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection('messages').doc(chatID).collection('chats').add({\n            text: text,\n            createdAt: new Date().getTime(),\n            user: {\n              _id: firebase.auth().currentUser.uid,\n              email: firebase.auth().currentUser.email\n            }\n          }));\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/firebase/chat.js"],"names":["firebase","sendChatMessage","chatID","chat","console","log","firestore","collection","doc","add","createdAt","Date","getTime","handleSend","messages","text","user","_id","auth","currentUser","uid","email"],"mappings":";AAAA,OAAO,KAAKA,QAAZ,MAA0B,UAA1B;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAASC,IAAT,EAAkB;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,MAAxB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;AACAH,EAAAA,QAAQ,CAACM,SAAT,GACGC,UADH,CACc,UADd,EAEGC,GAFH,CAEON,MAFP,EAGGK,UAHH,CAGc,OAHd,EAIGE,GAJH,CAIO;AACHN,IAAAA,IAAI,EAAEA,IADH;AAEHO,IAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAFR,GAJP;AAQD,CAXM;AA8CP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAOX,MAAP,EAAeY,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,UAAAA,IADkB,GACXD,QAAQ,CAAC,CAAD,CAAR,CAAYC,IADD;AAAA;AAAA,2CAGlBf,QAAQ,CAACM,SAAT,GACHC,UADG,CACQ,UADR,EAEHC,GAFG,CAECN,MAFD,EAGHK,UAHG,CAGQ,OAHR,EAIHE,GAJG,CAIC;AACHM,YAAAA,IAAI,EAAJA,IADG;AAEHL,YAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EAFR;AAGHI,YAAAA,IAAI,EAAE;AACJC,cAAAA,GAAG,EAAEjB,QAAQ,CAACkB,IAAT,GAAgBC,WAAhB,CAA4BC,GAD7B;AAEJC,cAAAA,KAAK,EAAErB,QAAQ,CAACkB,IAAT,GAAgBC,WAAhB,CAA4BE;AAF/B;AAHH,WAJD,CAHkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["import * as firebase from 'firebase';\n\nexport const sendChatMessage = (chatID, chat) => {\n  console.log('chatid: ', chatID);\n  console.log('chat: ', chat);\n  firebase.firestore()\n    .collection('messages')\n    .doc(chatID)\n    .collection('chats')\n    .add({\n      chat: chat,\n      createdAt: new Date().getTime()\n    });\n};\n\n// export const handleSend = async (messages) => {\n\n//   await firebase.firestore()\n//     .collection('THREADS')\n//     .doc(thread._id)\n//     .set(\n//       {\n//         latestMessage: {\n//           text,\n//           createdAt: new Date().getTime()\n//         }\n//       },\n//       { merge: true }\n//     );\n// };\n\n// export const handleSend = async (messages) => {\n//   const text = messages[0].text;\n\n//   firestore()\n//     .collection('THREADS')\n//     .doc(thread._id)\n//     .collection('MESSAGES')\n//     .add({\n//       text,\n//       createdAt: new Date().getTime(),\n//       user: {\n//         _id: currentUser.uid,\n//         email: currentUser.email\n//       }\n//     });\n// }\n\nexport const handleSend = async (chatID, messages) => {\n  const text = messages[0].text;\n\n  await firebase.firestore()\n    .collection('messages')\n    .doc(chatID)\n    .collection('chats')\n    .add({\n      text,\n      createdAt: new Date().getTime(),\n      user: {\n        _id: firebase.auth().currentUser.uid,\n        email: firebase.auth().currentUser.email\n      }\n    });\n};"]},"metadata":{},"sourceType":"module"}