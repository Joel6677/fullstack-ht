{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nexport var uploadUserInfo = function uploadUserInfo(firstName, lastName, birthdate, bio) {\n  var currentUser, name, db;\n  return _regeneratorRuntime.async(function uploadUserInfo$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          try {\n            currentUser = firebase.auth().currentUser;\n            name = firstName + ' ' + lastName;\n            db = firebase.firestore();\n            db.collection('userinfo').doc(currentUser.uid).set({\n              name: name,\n              birthdate: birthdate,\n              bio: bio\n            });\n          } catch (err) {\n            console.log('upload user info error: ', err);\n          }\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var addToWishList = function addToWishList(whiskyID) {\n  var currentUser, db;\n  return _regeneratorRuntime.async(function addToWishList$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          try {\n            currentUser = firebase.auth().currentUser;\n            db = firebase.firestore();\n            db.collection('WishLists').doc(currentUser.uid).collection('userWishList').doc(whiskyID).set({\n              whiskyID: whiskyID\n            });\n          } catch (err) {\n            console.log('add to wish list error: ', err);\n          }\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var addToCollection = function addToCollection(whiskyID) {\n  var currentUser = firebase.auth().currentUser;\n  var db = firebase.firestore();\n  db.collection('collections').doc(currentUser.uid).collection('userCollection').doc(whiskyID).set({\n    whiskyID: whiskyID\n  }).then(function () {\n    console.log('whisky added to collection');\n  }).catch(function (error) {\n    console.error(error);\n  });\n};","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/firebase/uploads.js"],"names":["firebase","uploadUserInfo","firstName","lastName","birthdate","bio","currentUser","auth","name","db","firestore","collection","doc","uid","set","err","console","log","addToWishList","whiskyID","addToCollection","then","catch","error"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAOC,SAAP,EAAkBC,QAAlB,EAA4BC,SAA5B,EAAuCC,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1B,cAAI;AACMC,YAAAA,WADN,GACoBN,QAAQ,CAACO,IAAT,GAAgBD,WADpC;AAEME,YAAAA,IAFN,GAEaN,SAAS,GAAG,GAAZ,GAAkBC,QAF/B;AAIMM,YAAAA,EAJN,GAIWT,QAAQ,CAACU,SAAT,EAJX;AAKAD,YAAAA,EAAE,CAACE,UAAH,CAAc,UAAd,EACKC,GADL,CACSN,WAAW,CAACO,GADrB,EAEKC,GAFL,CAES;AACDN,cAAAA,IAAI,EAAEA,IADL;AAEDJ,cAAAA,SAAS,EAAEA,SAFV;AAGDC,cAAAA,GAAG,EAAEA;AAHJ,aAFT;AAOH,WAZD,CAYE,OAAOU,GAAP,EAAY;AACVC,YAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,GAAxC;AACH;;AAhByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAoBP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEzB,cAAI;AACMb,YAAAA,WADN,GACoBN,QAAQ,CAACO,IAAT,GAAgBD,WADpC;AAGMG,YAAAA,EAHN,GAGWT,QAAQ,CAACU,SAAT,EAHX;AAIAD,YAAAA,EAAE,CAACE,UAAH,CAAc,WAAd,EACKC,GADL,CACSN,WAAW,CAACO,GADrB,EAEKF,UAFL,CAEgB,cAFhB,EAGKC,GAHL,CAGSO,QAHT,EAIKL,GAJL,CAIS;AACDK,cAAAA,QAAQ,EAAEA;AADT,aAJT;AAOH,WAXD,CAWE,OAAOJ,GAAP,EAAY;AACVC,YAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,GAAxC;AACH;;AAfwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;AAoBP,OAAO,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACD,QAAD,EAAc;AAGrC,MAAMb,WAAW,GAAGN,QAAQ,CAACO,IAAT,GAAgBD,WAApC;AAEA,MAAMG,EAAE,GAAGT,QAAQ,CAACU,SAAT,EAAX;AACAD,EAAAA,EAAE,CAACE,UAAH,CAAc,aAAd,EACKC,GADL,CACSN,WAAW,CAACO,GADrB,EAEKF,UAFL,CAEgB,gBAFhB,EAGKC,GAHL,CAGSO,QAHT,EAIKL,GAJL,CAIS;AACDK,IAAAA,QAAQ,EAAEA;AADT,GAJT,EAMOE,IANP,CAMY,YAAM;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH,GARL,EAQOK,KARP,CAQa,UAACC,KAAD,EAAW;AAChBP,IAAAA,OAAO,CAACO,KAAR,CAAcA,KAAd;AACH,GAVL;AAcP,CApBM","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nexport const uploadUserInfo = async (firstName, lastName, birthdate, bio) => {\n\n    try {\n        const currentUser = firebase.auth().currentUser;\n        const name = firstName + ' ' + lastName;\n\n        const db = firebase.firestore();\n        db.collection('userinfo')\n            .doc(currentUser.uid)\n            .set({\n                name: name,\n                birthdate: birthdate,\n                bio: bio\n            });\n    } catch (err) {\n        console.log('upload user info error: ', err);\n    }\n\n};\n\nexport const addToWishList = async (whiskyID) => {\n\n    try {\n        const currentUser = firebase.auth().currentUser;\n\n        const db = firebase.firestore();\n        db.collection('WishLists')\n            .doc(currentUser.uid)\n            .collection('userWishList')\n            .doc(whiskyID)\n            .set({\n                whiskyID: whiskyID\n            });\n    } catch (err) {\n        console.log('add to wish list error: ', err);\n    }\n\n};\n\n\nexport const addToCollection = (whiskyID) => {\n\n\n        const currentUser = firebase.auth().currentUser;\n\n        const db = firebase.firestore();\n        db.collection('collections')\n            .doc(currentUser.uid)\n            .collection('userCollection')\n            .doc(whiskyID)\n            .set({\n                whiskyID: whiskyID\n            }).then(() => {\n                console.log('whisky added to collection');\n            }).catch((error) => {\n                console.error(error);\n            });\n    \n    \n\n};"]},"metadata":{},"sourceType":"module"}