{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TabsContext } from \"./context\";\nimport TabsHeader from \"./TabsHeader\";\n\nfunction Swiper(props) {\n  var theme = props.theme,\n      dark = props.dark,\n      style = props.style,\n      defaultIndex = props.defaultIndex,\n      onChangeIndex = props.onChangeIndex,\n      iconPosition = props.iconPosition,\n      showTextLabel = props.showTextLabel,\n      showLeadingSpace = props.showLeadingSpace,\n      uppercase = props.uppercase,\n      mode = props.mode;\n\n  var _React$useState = React.useState(defaultIndex || 0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      index = _React$useState2[0],\n      setIndex = _React$useState2[1];\n\n  var goTo = React.useCallback(function (ind) {\n    setIndex(ind);\n    onChangeIndex(ind);\n  }, [setIndex, onChangeIndex]);\n  var children = props.children;\n  var currentScreen = children[index];\n\n  if (!currentScreen || !currentScreen) {\n    return null;\n  }\n\n  var renderProps = {\n    index: index,\n    goTo: goTo,\n    children: children,\n    theme: theme,\n    dark: dark,\n    style: style,\n    offset: undefined,\n    position: undefined,\n    iconPosition: iconPosition,\n    showTextLabel: showTextLabel,\n    showLeadingSpace: showLeadingSpace,\n    uppercase: uppercase,\n    mode: mode\n  };\n  return React.createElement(View, {\n    style: styles.root\n  }, React.createElement(TabsHeader, renderProps), React.createElement(TabsContext.Provider, {\n    value: {\n      goTo: goTo,\n      index: index\n    }\n  }, currentScreen));\n}\n\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1\n  }\n});\nexport default Swiper;","map":{"version":3,"sources":["Swiper.tsx"],"names":["mode","React","defaultIndex","goTo","ind","setIndex","onChangeIndex","children","props","currentScreen","renderProps","index","theme","dark","style","offset","position","iconPosition","showTextLabel","showLeadingSpace","uppercase","styles","root","flex"],"mappings":";AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;AAIA,SAAA,WAAA;AACA,OAAA,UAAA;;AAEA,SAAA,MAAA,CAAA,KAAA,EAAoC;AAAA,MAC5B,KAD4B,GAClC,KADkC,CAC5B,KAD4B;AAAA,MAC5B,IAD4B,GAClC,KADkC,CAC5B,IAD4B;AAAA,MAC5B,KAD4B,GAClC,KADkC,CAC5B,KAD4B;AAAA,MAC5B,YAD4B,GAClC,KADkC,CAC5B,YAD4B;AAAA,MAC5B,aAD4B,GAClC,KADkC,CAC5B,aAD4B;AAAA,MAC5B,YAD4B,GAClC,KADkC,CAC5B,YAD4B;AAAA,MAC5B,aAD4B,GAClC,KADkC,CAC5B,aAD4B;AAAA,MAC5B,gBAD4B,GAClC,KADkC,CAC5B,gBAD4B;AAAA,MAC5B,SAD4B,GAClC,KADkC,CAC5B,SAD4B;AAAA,MAWhCA,IAXgC,GAClC,KADkC,CAWhCA,IAXgC;;AAAA,wBAaRC,KAAK,CAALA,QAAAA,CAAuBC,YAAY,IAA7D,CAA0BD,CAbQ;AAAA;AAAA,MAa5B,KAb4B;AAAA,MAa5B,QAb4B;;AAclC,MAAME,IAAI,GAAG,KAAK,CAAL,WAAA,CACVC,UAAAA,GAAD,EAAiB;AACfC,IAAAA,QAAQ,CAARA,GAAQ,CAARA;AACAC,IAAAA,aAAa,CAAbA,GAAa,CAAbA;AAHS,GAAA,EAKX,CAAA,QAAA,EALF,aAKE,CALW,CAAb;AAQA,MAAIC,QAA2C,GAAGC,KAAK,CAAvD,QAAA;AAEA,MAAMC,aAAa,GAAGF,QAAQ,CAA9B,KAA8B,CAA9B;;AACA,MAAI,CAAA,aAAA,IAAkB,CAAtB,aAAA,EAAsC;AACpC,WAAA,IAAA;AACD;;AACD,MAAMG,WAAW,GAAG;AAClBC,IAAAA,KADkB,EAClBA,KADkB;AAElBR,IAAAA,IAFkB,EAElBA,IAFkB;AAGlBI,IAAAA,QAHkB,EAGlBA,QAHkB;AAIlBK,IAAAA,KAJkB,EAIlBA,KAJkB;AAKlBC,IAAAA,IALkB,EAKlBA,IALkB;AAMlBC,IAAAA,KANkB,EAMlBA,KANkB;AAOlBC,IAAAA,MAAM,EAPY,SAAA;AAQlBC,IAAAA,QAAQ,EARU,SAAA;AASlBC,IAAAA,YATkB,EASlBA,YATkB;AAUlBC,IAAAA,aAVkB,EAUlBA,aAVkB;AAWlBC,IAAAA,gBAXkB,EAWlBA,gBAXkB;AAYlBC,IAAAA,SAZkB,EAYlBA,SAZkB;AAalBpB,IAAAA,IAAAA,EAAAA;AAbkB,GAApB;AAgBA,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAEqB,MAAM,CAACC;AAApB,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,UAAA,EADF,WACE,CADF,EAEE,KAAA,CAAA,aAAA,CAAC,WAAD,CAAA,QAAA,EAAA;AAAsB,IAAA,KAAK,EAAE;AAAEnB,MAAAA,IAAF,EAAEA,IAAF;AAAQQ,MAAAA,KAAAA,EAAAA;AAAR;AAA7B,GAAA,EAHJ,aAGI,CAFF,CADF;AAQD;;AAED,IAAMU,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE;AADF;AADyB,CAAlB,CAAf;AAMA,eAAA,MAAA","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport type { SwiperProps } from './utils';\nimport type { TabScreenProps } from './TabScreen';\nimport { TabsContext } from './context';\nimport TabsHeader from './TabsHeader';\n\nfunction Swiper(props: SwiperProps) {\n  const {\n    theme,\n    dark,\n    style,\n    defaultIndex,\n    onChangeIndex,\n    iconPosition,\n    showTextLabel,\n    showLeadingSpace,\n    uppercase,\n    mode,\n  } = props;\n  const [index, setIndex] = React.useState<number>(defaultIndex || 0);\n  const goTo = React.useCallback(\n    (ind: number) => {\n      setIndex(ind);\n      onChangeIndex(ind);\n    },\n    [setIndex, onChangeIndex]\n  );\n\n  let children: React.Component<TabScreenProps>[] = props.children;\n\n  const currentScreen = children[index];\n  if (!currentScreen || !currentScreen) {\n    return null;\n  }\n  const renderProps = {\n    index,\n    goTo,\n    children,\n    theme,\n    dark,\n    style,\n    offset: undefined,\n    position: undefined,\n    iconPosition,\n    showTextLabel,\n    showLeadingSpace,\n    uppercase,\n    mode,\n  };\n\n  return (\n    <View style={styles.root}>\n      <TabsHeader {...renderProps} />\n      <TabsContext.Provider value={{ goTo, index }}>\n        {currentScreen}\n      </TabsContext.Provider>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n  },\n});\n\nexport default Swiper;\n"]},"metadata":{},"sourceType":"module"}