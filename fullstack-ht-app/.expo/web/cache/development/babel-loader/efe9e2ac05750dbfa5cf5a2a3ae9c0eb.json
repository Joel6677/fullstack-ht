{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Text, TouchableRipple } from 'react-native-paper';\nimport Color from 'color';\nimport MaterialCommunityIcon from \"./MaterialCommunityIcon\";\nimport { useAnimatedText } from \"./internal\";\nvar AnimatedText = Animated.createAnimatedComponent(Text);\nexport default function TabsHeaderItem(_ref) {\n  var tab = _ref.tab,\n      tabIndex = _ref.tabIndex,\n      active = _ref.active,\n      goTo = _ref.goTo,\n      onTabLayout = _ref.onTabLayout,\n      activeColor = _ref.activeColor,\n      textColor = _ref.textColor,\n      theme = _ref.theme,\n      position = _ref.position,\n      offset = _ref.offset,\n      childrenCount = _ref.childrenCount,\n      uppercase = _ref.uppercase,\n      mode = _ref.mode,\n      iconPosition = _ref.iconPosition,\n      showTextLabel = _ref.showTextLabel;\n  var rippleColor = React.useMemo(function () {\n    return Color(activeColor).alpha(0.32).rgb().string();\n  }, [activeColor]);\n\n  var _useAnimatedText = useAnimatedText({\n    active: active,\n    position: position,\n    offset: offset,\n    activeColor: activeColor,\n    textColor: textColor,\n    tabIndex: tabIndex,\n    childrenCount: childrenCount\n  }),\n      color = _useAnimatedText.color,\n      opacity = _useAnimatedText.opacity;\n\n  return React.createElement(View, {\n    key: tab.props.label,\n    style: [styles.tabRoot, mode === 'fixed' && styles.tabRootFixed],\n    onLayout: function onLayout(e) {\n      return onTabLayout(tabIndex, e);\n    }\n  }, React.createElement(TouchableRipple, {\n    onPress: function onPress() {\n      return goTo(tabIndex);\n    },\n    onPressIn: function onPressIn() {},\n    style: [styles.touchableRipple, iconPosition === 'top' && styles.touchableRippleTop],\n    rippleColor: rippleColor,\n    accessibilityTraits: 'button',\n    accessibilityRole: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityLabel: tab.props.label,\n    accessibilityState: {\n      selected: active\n    },\n    testID: \"tab_\" + tabIndex\n  }, React.createElement(View, {\n    style: [styles.touchableRippleInner, iconPosition === 'top' && styles.touchableRippleInnerTop]\n  }, tab.props.icon ? React.createElement(View, {\n    style: [styles.iconContainer, iconPosition !== 'top' && styles.marginRight]\n  }, React.createElement(MaterialCommunityIcon, {\n    selectable: false,\n    accessibilityElementsHidden: true,\n    importantForAccessibility: \"no\",\n    name: tab.props.icon || '',\n    style: {\n      color: color,\n      opacity: opacity\n    },\n    size: 24\n  })) : null, showTextLabel ? React.createElement(AnimatedText, {\n    selectable: false,\n    style: [styles.text, iconPosition === 'top' && styles.textTop, _objectSpread(_objectSpread({}, theme.fonts.medium), {}, {\n      color: color,\n      opacity: opacity\n    })]\n  }, uppercase ? tab.props.label.toUpperCase() : tab.props.label) : null)));\n}\nvar styles = StyleSheet.create({\n  tabRoot: {\n    position: 'relative'\n  },\n  tabRootFixed: {\n    flex: 1\n  },\n  touchableRipple: {\n    height: 48,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  touchableRippleTop: {\n    height: 72\n  },\n  touchableRippleInner: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingRight: 16,\n    paddingLeft: 16,\n    minWidth: 90,\n    maxWidth: 360\n  },\n  touchableRippleInnerTop: {\n    flexDirection: 'column'\n  },\n  iconContainer: {\n    width: 24,\n    height: 24\n  },\n  text: _objectSpread({\n    textAlign: 'center',\n    letterSpacing: 1\n  }, Platform.select({\n    web: {\n      transitionDuration: '150ms',\n      transitionProperty: 'all'\n    },\n    default: {}\n  })),\n  textTop: {\n    marginTop: 6\n  },\n  marginRight: {\n    marginRight: 8\n  }\n});","map":{"version":3,"sources":["TabsHeaderItem.tsx"],"names":["AnimatedText","Animated","showTextLabel","rippleColor","React","Color","opacity","useAnimatedText","active","position","offset","activeColor","textColor","tabIndex","childrenCount","tab","styles","mode","e","onTabLayout","goTo","iconPosition","selected","color","theme","uppercase","tabRoot","tabRootFixed","flex","touchableRipple","height","justifyContent","alignItems","touchableRippleTop","touchableRippleInner","flexDirection","paddingRight","paddingLeft","minWidth","maxWidth","touchableRippleInnerTop","iconContainer","width","text","textAlign","letterSpacing","web","transitionDuration","transitionProperty","default","textTop","marginTop","marginRight"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  LayoutChangeEvent,\n  Animated,\n  StyleSheet,\n  View,\n  Platform,\n  TextProps,\n} from 'react-native';\nimport { Text, TouchableRipple } from 'react-native-paper';\nimport type { ReactElement } from 'react';\nimport type { TabScreenProps } from './TabScreen';\nimport type { Theme } from 'react-native-paper/lib/typescript/types';\nimport Color from 'color';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\nimport { useAnimatedText } from './internal';\nimport type { IconPosition, Mode } from './utils';\nconst AnimatedText = Animated.createAnimatedComponent<\n  React.ComponentType<TextProps>\n>(Text as any);\n\nexport default function TabsHeaderItem({\n  tab,\n  tabIndex,\n  active,\n  goTo,\n  onTabLayout,\n  activeColor,\n  textColor,\n  theme,\n  position,\n  offset,\n  childrenCount,\n  uppercase,\n  mode,\n  iconPosition,\n  showTextLabel,\n}: {\n  tab: ReactElement<TabScreenProps>;\n  tabIndex: number;\n  active: boolean;\n  goTo: (index: number) => void;\n  onTabLayout: (index: number, e: LayoutChangeEvent) => void;\n  activeColor: string;\n  textColor: string;\n  theme: Theme;\n  position: Animated.Value | undefined;\n  offset: Animated.Value | undefined;\n  childrenCount: number;\n  uppercase?: boolean;\n  iconPosition?: IconPosition;\n  showTextLabel?: boolean;\n  mode: Mode;\n}) {\n  const rippleColor = React.useMemo(\n    () =>\n      Color(activeColor as any)\n        .alpha(0.32)\n        .rgb()\n        .string(),\n    [activeColor]\n  );\n\n  const { color, opacity } = useAnimatedText({\n    active,\n    position,\n    offset,\n    activeColor,\n    textColor,\n    tabIndex,\n    childrenCount,\n  });\n\n  return (\n    <View\n      key={tab.props.label}\n      style={[styles.tabRoot, mode === 'fixed' && styles.tabRootFixed]}\n      onLayout={(e) => onTabLayout(tabIndex, e)}\n    >\n      <TouchableRipple\n        onPress={() => goTo(tabIndex)}\n        onPressIn={() => {}}\n        style={[\n          styles.touchableRipple,\n          iconPosition === 'top' && styles.touchableRippleTop,\n        ]}\n        rippleColor={rippleColor}\n        // @ts-ignore\n        accessibilityTraits={'button'}\n        accessibilityRole=\"button\"\n        accessibilityComponentType=\"button\"\n        accessibilityLabel={tab.props.label}\n        accessibilityState={{ selected: active }}\n        testID={`tab_${tabIndex}`}\n      >\n        <View\n          style={[\n            styles.touchableRippleInner,\n            iconPosition === 'top' && styles.touchableRippleInnerTop,\n          ]}\n        >\n          {tab.props.icon ? (\n            <View\n              style={[\n                styles.iconContainer,\n                iconPosition !== 'top' && styles.marginRight,\n              ]}\n            >\n              <MaterialCommunityIcon\n                selectable={false}\n                accessibilityElementsHidden={true}\n                importantForAccessibility=\"no\"\n                name={tab.props.icon || ''}\n                style={{ color: color, opacity }}\n                size={24}\n              />\n            </View>\n          ) : null}\n          {showTextLabel ? (\n            <AnimatedText\n              selectable={false}\n              style={[\n                styles.text,\n                iconPosition === 'top' && styles.textTop,\n                { ...theme.fonts.medium, color, opacity },\n              ]}\n            >\n              {uppercase ? tab.props.label.toUpperCase() : tab.props.label}\n            </AnimatedText>\n          ) : null}\n        </View>\n      </TouchableRipple>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabRoot: { position: 'relative' },\n  tabRootFixed: { flex: 1 },\n  touchableRipple: {\n    height: 48,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  touchableRippleTop: {\n    height: 72,\n  },\n  touchableRippleInner: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingRight: 16,\n    paddingLeft: 16,\n    minWidth: 90,\n    maxWidth: 360,\n  },\n  touchableRippleInnerTop: {\n    flexDirection: 'column',\n  },\n  iconContainer: {\n    width: 24,\n    height: 24,\n  },\n  text: {\n    textAlign: 'center',\n    letterSpacing: 1,\n    ...Platform.select({\n      web: {\n        transitionDuration: '150ms',\n        transitionProperty: 'all',\n      },\n      default: {},\n    }),\n  },\n  textTop: { marginTop: 6 },\n  marginRight: { marginRight: 8 },\n});\n"]},"metadata":{},"sourceType":"module"}