{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UploadWhisky.jsx\";\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-native';\nimport uuid from 'uuid';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Button, Checkbox } from 'react-native-paper';\nimport Text from \"./Text\";\nimport FormikTextInput from \"./FormikTextInput\";\nimport { StateContext } from \"../state\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport * as firebase from 'firebase';\nimport Moment from 'moment';\nimport theme from \"../theme\";\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    paddingVertical: 80,\n    zIndex: 1\n  },\n  fieldContainer: {\n    margin: 5\n  },\n  heading: {\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  buttonContainer: {\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    borderColor: '#aab2bb',\n    margin: 5\n  },\n  textContainer: {\n    fontSize: theme.fontSizes.body,\n    fontFamily: theme.fonts.main,\n    color: '#A6ACAF'\n  },\n  textContainer2: {\n    fontSize: theme.fontSizes.body,\n    fontFamily: theme.fonts.main,\n    marginTop: 9,\n    color: '#A6ACAF'\n  },\n  checkboxContainer: {\n    flexDirection: 'row',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    borderColor: '#aab2bb',\n    margin: 5\n  }\n});\nvar initialValues = {\n  distillery: '',\n  brand: '',\n  nameAddition: '',\n  country: '',\n  region: '',\n  category: '',\n  age: '',\n  abv: '',\n  bottleSize: '',\n  bottler: '',\n  series: '',\n  description: '',\n  caskType: '',\n  caskNumber: '',\n  numberOfBottles: ''\n};\nvar validationSchema = yup.object().shape({\n  distillery: yup.string().required('Distillery is required'),\n  brand: yup.string().required('Brand is required'),\n  nameAddition: yup.string(),\n  country: yup.string().required('Country is required'),\n  region: yup.string(),\n  category: yup.string().required('Category is required'),\n  age: yup.number(),\n  abv: yup.number().min(0, 'Abv must be non negative number').max(100, 'Abv can be atmost 100').required('Abv is required'),\n  bottleSize: yup.number().required('Bottlesize is required'),\n  bottler: yup.string(),\n  series: yup.string(),\n  description: yup.string(),\n  caskType: yup.string(),\n  caskNumber: yup.number(),\n  numberOfBottles: yup.number()\n});\n\nvar UploadWhiskyForm = function UploadWhiskyForm(_ref) {\n  var onSubmit = _ref.onSubmit,\n      pickProfilePicFromLibrary = _ref.pickProfilePicFromLibrary,\n      distillationPressed = _ref.distillationPressed,\n      bottlingPressed = _ref.bottlingPressed,\n      distillationDate = _ref.distillationDate,\n      bottlingDate = _ref.bottlingDate;\n\n  var _useContext = useContext(StateContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var distillationDateText = distillationPressed ? Moment(distillationDate).format('DD-MM-YYYY') : 'Distillation date';\n  var bottlingDateText = bottlingPressed ? Moment(bottlingDate).format('DD-MM-YYYY') : 'Bottling date';\n  return React.createElement(View, null, React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"distillery\",\n    placeholder: \"Distillery\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"brand\",\n    placeholder: \"Brand\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"nameAddition\",\n    placeholder: \"Name addition\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"country\",\n    placeholder: \"Country\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"region\",\n    placeholder: \"Region\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"category\",\n    placeholder: \"Category\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"age\",\n    keyboardType: \"numeric\",\n    placeholder: \"Age\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"abv\",\n    keyboardType: \"numeric\",\n    placeholder: \"Abv\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"bottleSize\",\n    keyboardType: \"numeric\",\n    placeholder: \"Bottlesize (Liter)\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"bottler\",\n    placeholder: \"Bottler\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"series\",\n    placeholder: \"Series\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"caskType\",\n    placeholder: \"Cask Type\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"caskNumber\",\n    keyboardType: \"numeric\",\n    placeholder: \"Cask Number\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"numberOfBottles\",\n    keyboardType: \"numeric\",\n    placeholder: \"Number of bottles\"\n  })), React.createElement(View, {\n    style: styles.fieldContainer\n  }, React.createElement(FormikTextInput, {\n    name: \"description\",\n    placeholder: \"Description\",\n    multiline: true,\n    numberOfLines: 1\n  })), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return dispatch({\n        type: \"SET_SHOW_DISTILLATION_DATE\",\n        payload: !state.show\n      });\n    }\n  }, React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(Text, {\n    style: styles.textContainer\n  }, distillationDateText))), React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return dispatch({\n        type: \"SET_SHOW_BOTTLING_DATE\",\n        payload: !state.show\n      });\n    }\n  }, React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(Text, {\n    style: styles.textContainer\n  }, bottlingDateText))), React.createElement(View, {\n    style: styles.checkboxContainer\n  }, React.createElement(Text, {\n    style: styles.textContainer2\n  }, \"Chill filtration\"), React.createElement(Checkbox, {\n    status: state.cfChecked ? 'checked' : 'unchecked',\n    onPress: function onPress() {\n      dispatch({\n        type: \"SET_CF_CHECKED\",\n        payload: !state.cfChecked\n      });\n    }\n  })), React.createElement(View, {\n    style: styles.checkboxContainer\n  }, React.createElement(Text, {\n    style: styles.textContainer2\n  }, \"Artificial colouring\"), React.createElement(Checkbox, {\n    status: state.acChecked ? 'checked' : 'unchecked',\n    onPress: function onPress() {\n      dispatch({\n        type: \"SET_AC_CHECKED\",\n        payload: !state.acChecked\n      });\n    }\n  })), React.createElement(Button, {\n    icon: \"camera\",\n    mode: \"outlined\",\n    onPress: pickProfilePicFromLibrary,\n    style: styles.fieldContainer\n  }, \"Upload image\"), React.createElement(Button, {\n    icon: 'bottle-wine',\n    style: styles.fieldContainer,\n    mode: \"outlined\",\n    onPress: onSubmit\n  }, \"Submit whisky\"));\n};\n\nvar UploadWhisky = function UploadWhisky() {\n  var history = useHistory();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var onToggleSnackBar = function onToggleSnackBar() {\n    return setVisible(!visible);\n  };\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nWhiskyID = _useState6[0],\n      setNWhiskyID = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      downloadURL = _useState8[0],\n      setDownloadURL = _useState8[1];\n\n  var _useContext2 = useContext(StateContext),\n      state = _useContext2.state,\n      dispatch = _useContext2.dispatch;\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      distillationDate = _useState10[0],\n      setDistillationDate = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      bottlingDate = _useState12[0],\n      setBottlingDate = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      distillationPressed = _useState14[0],\n      setDistillationPressed = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      bottlingPressed = _useState16[0],\n      setBottlingPressed = _useState16[1];\n\n  var addImageToFirestore = function addImageToFirestore(downloadURL, whiskyID) {\n    return _regeneratorRuntime.async(function addImageToFirestore$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setDownloadURL(downloadURL);\n            firebase.firestore().collection('whiskyImages').doc(whiskyID).set({\n              downloadURL: downloadURL\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickProfilePicFromLibrary = function pickProfilePicFromLibrary() {\n    var result, whiskyID;\n    return _regeneratorRuntime.async(function pickProfilePicFromLibrary$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            whiskyID = uuid.v4();\n            setNWhiskyID(whiskyID);\n\n            if (!result.cancelled) {\n              uploadImage(result.uri, whiskyID);\n              setImage(result.uri);\n              onToggleSnackBar();\n            }\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadImage = function uploadImage(uri, whiskyID) {\n    var response, blob, ref, uploadTask;\n    return _regeneratorRuntime.async(function uploadImage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 2:\n            response = _context3.sent;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 5:\n            blob = _context3.sent;\n            ref = firebase.storage().ref().child(\"images/whiskies/\" + whiskyID);\n            uploadTask = ref.put(blob);\n            uploadTask.on('state_changed', function (snapshot) {\n              var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n              console.log('Upload is ' + progress + '% done');\n\n              switch (snapshot.state) {\n                case firebase.storage.TaskState.PAUSED:\n                  console.log('Upload is paused');\n                  break;\n\n                case firebase.storage.TaskState.RUNNING:\n                  console.log('Upload is running');\n                  break;\n              }\n            }, function (error) {\n              switch (error.code) {\n                case 'storage/unauthorized':\n                  console.log(error.code);\n                  break;\n\n                case 'storage/canceled':\n                  console.log(error.code);\n                  break;\n\n                case 'storage/unknown':\n                  console.log(error.code);\n                  break;\n              }\n            }, function () {\n              uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n                console.log('File available at', downloadURL);\n                addImageToFirestore(downloadURL, whiskyID);\n              });\n            });\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onSubmit = function onSubmit(values) {\n    var distillery, brand, nameAddition, country, region, category, age, abv, bottleSize, bottler, series, description, caskType, caskNumber, numberOfBottles;\n    return _regeneratorRuntime.async(function onSubmit$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            distillery = values.distillery, brand = values.brand, nameAddition = values.nameAddition, country = values.country, region = values.region, category = values.category, age = values.age, abv = values.abv, bottleSize = values.bottleSize, bottler = values.bottler, series = values.series, description = values.description, caskType = values.caskType, caskNumber = values.caskNumber, numberOfBottles = values.numberOfBottles;\n            firebase.firestore().collection('whiskies').doc(nWhiskyID).set({\n              distillery: distillery,\n              brand: brand,\n              nameAddition: nameAddition,\n              country: country,\n              region: region,\n              category: category,\n              age: age,\n              abv: abv,\n              bottleSize: bottleSize,\n              bottler: bottler,\n              series: series,\n              description: description,\n              caskType: caskType,\n              caskNumber: caskNumber,\n              numberOfBottles: numberOfBottles,\n              distillationDate: distillationDate !== '' ? Moment(distillationDate).format('DD-MM-YYYY') : '',\n              bottlingDate: bottlingDate !== '' ? Moment(bottlingDate).format('DD-MM-YYYY') : '',\n              artificialColoring: state.acChecked,\n              chillFiltration: state.cfChecked,\n              downloadURL: downloadURL,\n              reviewCount: 0,\n              rating: ''\n            });\n            history.push('/');\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onDistillationChange = function onDistillationChange(event, selectedDate) {\n    var currentDate = selectedDate || distillationDate;\n    console.log(currentDate, ' ', selectedDate);\n    dispatch({\n      type: \"SET_SHOW_DISTILLATION_DATE\",\n      payload: false\n    });\n    setDistillationDate(currentDate);\n    setDistillationPressed(true);\n  };\n\n  var onBottlingChange = function onBottlingChange(event, selectedDate) {\n    var currentDate = selectedDate || bottlingDate;\n    dispatch({\n      type: \"SET_SHOW_BOTTLING_DATE\",\n      payload: false\n    });\n    setBottlingDate(currentDate);\n    setBottlingPressed(true);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(ScrollView, null, React.createElement(View, {\n    style: styles.heading\n  }, React.createElement(Text, {\n    color: 'primary',\n    fontSize: 'heading',\n    fontWeight: 'bold'\n  }, \"Upload Whisky\")), React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: onSubmit,\n    validationSchema: validationSchema\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit;\n    return React.createElement(UploadWhiskyForm, {\n      onSubmit: handleSubmit,\n      pickProfilePicFromLibrary: pickProfilePicFromLibrary,\n      distillationDate: distillationDate,\n      bottlingDate: bottlingDate,\n      distillationPressed: distillationPressed,\n      bottlingPressed: bottlingPressed\n    });\n  }), image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 100,\n      height: 100,\n      alignSelf: 'center'\n    }\n  })), state.showDistillationDate && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: distillationDate,\n    mode: 'date',\n    display: \"default\",\n    onChange: onDistillationChange\n  }), state.showBottlingDate && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: bottlingDate,\n    mode: 'date',\n    display: \"default\",\n    onChange: onBottlingChange\n  }));\n};\n\nexport default UploadWhisky;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/UploadWhisky.jsx"],"names":["React","useState","useContext","Formik","yup","useHistory","uuid","ImagePicker","Button","Checkbox","Text","FormikTextInput","StateContext","DateTimePicker","firebase","Moment","theme","styles","StyleSheet","create","container","flexDirection","justifyContent","height","width","position","paddingVertical","zIndex","fieldContainer","margin","heading","alignItems","marginBottom","buttonContainer","paddingHorizontal","borderWidth","borderStyle","borderRadius","borderColor","textContainer","fontSize","fontSizes","body","fontFamily","fonts","main","color","textContainer2","marginTop","checkboxContainer","initialValues","distillery","brand","nameAddition","country","region","category","age","abv","bottleSize","bottler","series","description","caskType","caskNumber","numberOfBottles","validationSchema","object","shape","string","required","number","min","max","UploadWhiskyForm","onSubmit","pickProfilePicFromLibrary","distillationPressed","bottlingPressed","distillationDate","bottlingDate","state","dispatch","distillationDateText","format","bottlingDateText","type","payload","show","cfChecked","acChecked","UploadWhisky","history","image","setImage","visible","setVisible","onToggleSnackBar","nWhiskyID","setNWhiskyID","downloadURL","setDownloadURL","setDistillationDate","setBottlingDate","setDistillationPressed","setBottlingPressed","addImageToFirestore","whiskyID","firestore","collection","doc","set","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","v4","cancelled","uploadImage","uri","fetch","response","blob","ref","storage","child","uploadTask","put","on","snapshot","progress","bytesTransferred","totalBytes","console","log","TaskState","PAUSED","RUNNING","error","code","getDownloadURL","then","values","artificialColoring","chillFiltration","reviewCount","rating","push","onDistillationChange","event","selectedDate","currentDate","onBottlingChange","handleSubmit","alignSelf","showDistillationDate","showBottlingDate"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { StyleSheet, View, ScrollView, Image, TouchableWithoutFeedback } from 'react-native';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from 'react-router-native';\nimport uuid from 'uuid';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Button, Checkbox } from 'react-native-paper';\nimport Text from './Text';\nimport FormikTextInput from './FormikTextInput';\nimport { StateContext } from '../state';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport * as firebase from 'firebase';\nimport Moment from 'moment';\nimport theme from '../theme';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    paddingVertical: 80,\n    zIndex: 1,\n  },\n  fieldContainer: {\n    margin: 5,\n  },\n  heading: {\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  buttonContainer: {\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    borderColor: '#aab2bb',\n    margin: 5\n}, textContainer: {\n    fontSize: theme.fontSizes.body,\n    fontFamily: theme.fonts.main,\n    color: '#A6ACAF',\n}, textContainer2: {\n  fontSize: theme.fontSizes.body,\n  fontFamily: theme.fonts.main,\n  marginTop: 9,\n  color: '#A6ACAF',\n}, checkboxContainer: {\n    flexDirection: 'row',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    borderColor: '#aab2bb',\n    margin: 5\n}\n});\n\nconst initialValues = {\n  distillery: '', \n  brand: '', \n  nameAddition: '',\n  country: '',\n  region: '',\n  category: '',\n  age: '', \n  abv: '',\n  bottleSize: '',\n  bottler: '',\n  series: '',\n  description: '',\n  caskType: '',\n  caskNumber: '',\n  numberOfBottles: '',\n};\n\n\n\n\nconst validationSchema = yup.object().shape({\n  distillery: yup\n    .string()\n    .required('Distillery is required'),\n  brand: yup\n    .string()\n    .required('Brand is required'),\n  nameAddition: yup\n    .string(),\n  country: yup\n    .string()\n    .required('Country is required'),\n  region: yup\n    .string(),\n  category: yup\n    .string()\n    .required('Category is required'),\n  age: yup \n    .number(),\n  abv: yup\n    .number()\n    .min(0, 'Abv must be non negative number')\n    .max(100, 'Abv can be atmost 100')\n    .required('Abv is required'),\n  bottleSize: yup\n    .number()\n    .required('Bottlesize is required'),\n  bottler: yup\n    .string(),\n  series: yup\n    .string(),\n  description: yup\n    .string(),\n  caskType: yup\n    .string(),\n  caskNumber: yup\n    .number(),\n  numberOfBottles: yup\n    .number()\n});\n\n\n\nconst UploadWhiskyForm = ({ onSubmit, pickProfilePicFromLibrary, distillationPressed, bottlingPressed, distillationDate, bottlingDate }) => {\n\n  const { state, dispatch } = useContext(StateContext);\n  const distillationDateText = distillationPressed ? Moment(distillationDate).format('DD-MM-YYYY') : 'Distillation date';\n  const bottlingDateText = bottlingPressed ? Moment(bottlingDate).format('DD-MM-YYYY') : 'Bottling date';\n\n  return (\n    <View>\n      <View style={styles.fieldContainer}>\n        <FormikTextInput \n        name=\"distillery\" \n        placeholder=\"Distillery\" />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"brand\"\n          placeholder=\"Brand\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"nameAddition\"\n          placeholder=\"Name addition\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"country\"\n          placeholder=\"Country\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"region\"\n          placeholder=\"Region\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"category\"\n          placeholder=\"Category\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"age\"\n          keyboardType=\"numeric\"\n          placeholder=\"Age\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"abv\"\n          keyboardType=\"numeric\"\n          placeholder=\"Abv\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"bottleSize\"\n          keyboardType=\"numeric\"\n          placeholder=\"Bottlesize (Liter)\"\n        />\n      </View>\n\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"bottler\"\n          placeholder=\"Bottler\"\n        />\n      </View>\n\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"series\"\n          placeholder=\"Series\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"caskType\"\n          placeholder=\"Cask Type\"\n        />\n      </View>\n\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"caskNumber\"\n          keyboardType=\"numeric\"\n          placeholder=\"Cask Number\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"numberOfBottles\"\n          keyboardType=\"numeric\"\n          placeholder=\"Number of bottles\"\n        />\n      </View>\n\n      <View style={styles.fieldContainer}>\n        <FormikTextInput\n          name=\"description\"\n          placeholder=\"Description\"\n          multiline\n          numberOfLines={1}\n        />\n      </View>\n\n      <TouchableWithoutFeedback onPress={() => dispatch({ type: \"SET_SHOW_DISTILLATION_DATE\", payload: !state.show })} >\n        <View style={styles.buttonContainer}>\n          <Text style={styles.textContainer}>{distillationDateText}</Text>\n        </View>\n      </TouchableWithoutFeedback>\n\n      <TouchableWithoutFeedback onPress={() => dispatch({ type: \"SET_SHOW_BOTTLING_DATE\", payload: !state.show })} >\n        <View style={styles.buttonContainer}>\n          <Text style={styles.textContainer}>{bottlingDateText}</Text>\n        </View>\n      </TouchableWithoutFeedback>\n\n      <View style={styles.checkboxContainer}>\n\n      <Text style={styles.textContainer2}>Chill filtration</Text>\n\n      <Checkbox\n        status={state.cfChecked ? 'checked' : 'unchecked'}\n        onPress={() => {\n          dispatch({ type: \"SET_CF_CHECKED\", payload: !state.cfChecked});\n        }} />\n\n      </View>\n\n      <View style={styles.checkboxContainer}>\n\n        <Text style={styles.textContainer2}>Artificial colouring</Text>\n\n        <Checkbox\n          status={state.acChecked ? 'checked' : 'unchecked'}\n          onPress={() => {\n            dispatch({ type: \"SET_AC_CHECKED\", payload: !state.acChecked });\n          }} />\n\n      </View>\n\n      <Button icon='camera' mode='outlined' onPress={pickProfilePicFromLibrary} style={styles.fieldContainer}>Upload image</Button>\n\n      <Button icon={'bottle-wine'} style={styles.fieldContainer} mode='outlined' onPress={onSubmit}>\n          Submit whisky\n      </Button>\n    </View>\n  );\n};\n\n\n\nconst UploadWhisky = () => {\n  const history = useHistory();\n  const [image, setImage] = useState();\n  const [visible, setVisible] = useState(false);\n  const onToggleSnackBar = () => setVisible(!visible);\n  const [nWhiskyID, setNWhiskyID] = useState('');\n  const [downloadURL, setDownloadURL] = useState('');\n  const {state, dispatch } = useContext(StateContext);\n  const [distillationDate, setDistillationDate] = useState('');\n  const [bottlingDate, setBottlingDate] = useState('');\n  const [distillationPressed, setDistillationPressed] = useState(false);\n  const [bottlingPressed, setBottlingPressed] = useState(false);\n\n\n  const addImageToFirestore = async (downloadURL, whiskyID) => { \n    setDownloadURL(downloadURL);\n\n    firebase.firestore()\n    .collection('whiskyImages')\n    .doc(whiskyID)\n    .set({\n      downloadURL\n    });\n  };\n  \n  const pickProfilePicFromLibrary = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    const whiskyID = uuid.v4();\n    setNWhiskyID(whiskyID);\n  \n    if (!result.cancelled) {\n      uploadImage(result.uri, whiskyID);\n      setImage(result.uri);\n      onToggleSnackBar();\n    }\n  };\n\n  const uploadImage = async(uri, whiskyID) => {\n\n    const response = await fetch(uri);\n    const blob = await response.blob();\n\n    const ref = firebase.storage().ref().child(`images/whiskies/${whiskyID}`);\n\n    const uploadTask = ref.put(blob);\n\n    uploadTask.on('state_changed', \n  (snapshot) => {\n    // Observe state change events such as progress, pause, and resume\n    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n    console.log('Upload is ' + progress + '% done');\n    switch (snapshot.state) {\n      case firebase.storage.TaskState.PAUSED: // or 'paused'\n        console.log('Upload is paused');\n        break;\n      case firebase.storage.TaskState.RUNNING: // or 'running'\n        console.log('Upload is running');\n        break;\n    }\n  }, \n  (error) => {\n    // Handle unsuccessful uploads\n    switch (error.code) {\n      case 'storage/unauthorized':\n        // User doesn't have permission to access the object\n        console.log(error.code);\n        break;\n      case 'storage/canceled':\n        // User canceled the upload\n        console.log(error.code);\n        break;\n      case 'storage/unknown':\n        // Unknown error occurred, inspect error.serverResponse\n        console.log(error.code);\n        break;\n    }\n  },\n  () => {\n    // Handle successful uploads on complete\n    // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n    uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n      console.log('File available at', downloadURL);\n      addImageToFirestore(downloadURL, whiskyID);\n    });\n  });\n\n  };\n\n  const onSubmit = async (values) => {\n    const {distillery, brand, nameAddition, country, region, category, age, abv, bottleSize, \n    bottler, series, description, caskType, caskNumber, numberOfBottles} = values;\n\n    firebase.firestore().collection('whiskies').doc(nWhiskyID).set({\n      distillery: distillery,\n      brand: brand,\n      nameAddition: nameAddition,\n      country: country,\n      region: region,\n      category: category,\n      age: age,\n      abv: abv,\n      bottleSize: bottleSize,\n      bottler: bottler,\n      series: series,\n      description: description,\n      caskType: caskType,\n      caskNumber: caskNumber,\n      numberOfBottles: numberOfBottles,\n      distillationDate: distillationDate !== '' ? Moment(distillationDate).format('DD-MM-YYYY') : '',\n      bottlingDate: bottlingDate !== '' ? Moment(bottlingDate).format('DD-MM-YYYY') : '',\n      artificialColoring: state.acChecked,\n      chillFiltration: state.cfChecked,\n      downloadURL: downloadURL,\n      reviewCount: 0,\n      rating: ''\n\n\n    });\n    history.push('/');\n  };\n\n\n  const onDistillationChange = (event, selectedDate) => {\n    const currentDate = selectedDate || distillationDate;\n    console.log(currentDate, ' ', selectedDate);\n    dispatch({type: \"SET_SHOW_DISTILLATION_DATE\", payload: false});\n    setDistillationDate(currentDate);\n    setDistillationPressed(true);\n  };\n\n  const onBottlingChange = (event, selectedDate) => {\n    const currentDate = selectedDate || bottlingDate;\n    dispatch({type: \"SET_SHOW_BOTTLING_DATE\", payload: false});\n    setBottlingDate(currentDate);\n    setBottlingPressed(true);\n  };\n\n  return (\n    <View style={styles.container}>\n      <ScrollView>\n      <View style={styles.heading}>\n        <Text color={'primary'} fontSize={'heading'} fontWeight={'bold'}>\n          Upload Whisky\n        </Text>\n      </View>\n      \n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {({ handleSubmit }) => <UploadWhiskyForm onSubmit={handleSubmit} pickProfilePicFromLibrary={pickProfilePicFromLibrary} distillationDate={distillationDate} bottlingDate={bottlingDate} distillationPressed={distillationPressed} bottlingPressed={bottlingPressed} />}\n      </Formik>\n      {image && <Image source={{ uri: image }} style={{ width: 100, height: 100, alignSelf: 'center' }} />} \n      </ScrollView>\n      { state.showDistillationDate && (\n        <DateTimePicker\n          testID=\"dateTimePicker\"\n          value={distillationDate}\n          mode={'date'}\n          display=\"default\"\n          onChange={onDistillationChange}\n        />\n      )}\n      { state.showBottlingDate && (\n        <DateTimePicker\n          testID=\"dateTimePicker\"\n          value={bottlingDate}\n          mode={'date'}\n          display=\"default\"\n          onChange={onBottlingChange}\n        />\n      )}\n      \n    </View>\n  );\n};\n\nexport default UploadWhisky;"]},"metadata":{},"sourceType":"module"}