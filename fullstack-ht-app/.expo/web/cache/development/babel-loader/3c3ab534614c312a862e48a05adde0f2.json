{"ast":null,"code":"var _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SideMenu.jsx\";\nimport React, { useContext, useEffect, useRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { StateContext } from \"../state\";\nimport Button from \"./Button\";\nimport theme from \"../theme\";\nvar styles = StyleSheet.create({\n  sidebar: {\n    width: 200,\n    height: '100%',\n    backgroundColor: theme.colors.primary,\n    position: 'fixed',\n    top: 72\n  },\n  button: {\n    padding: 10\n  }\n});\n\nvar SideMenu = function SideMenu() {\n  var toggleAnim = useRef(new Animated.Value(0)).current;\n\n  var _useContext = useContext(StateContext),\n      state = _useContext.state;\n\n  var moveMenu = function moveMenu() {\n    Animated.spring(toggleAnim, {\n      toValue: state.open ? 0 : -200\n    }).start();\n  };\n\n  useEffect(function () {\n    moveMenu();\n  });\n  return React.createElement(React.Fragment, null, React.createElement(Animated.View, {\n    style: [styles.sidebar, {\n      transform: [{\n        translateX: toggleAnim\n      }]\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    color: \"error\",\n    onPress: function onPress() {\n      return moveMenu();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Button1\"))));\n};\n\nexport default SideMenu;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SideMenu.jsx"],"names":["React","useContext","useEffect","useRef","StateContext","Button","theme","styles","StyleSheet","create","sidebar","width","height","backgroundColor","colors","primary","position","top","button","padding","SideMenu","toggleAnim","Animated","Value","current","state","moveMenu","spring","toValue","open","start","transform","translateX"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,MAAvC,QAAqD,OAArD;;;;AAGA,SAASC,YAAT;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,GADA;AAEPC,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,eAAe,EAAEP,KAAK,CAACQ,MAAN,CAAaC,OAHvB;AAIPC,IAAAA,QAAQ,EAAE,OAJH;AAKPC,IAAAA,GAAG,EAAE;AALE,GADsB;AAQ/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH;AARuB,CAAlB,CAAf;;AAcA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,MAAMC,UAAU,GAAGlB,MAAM,CAAC,IAAImB,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAAjD;;AADqB,oBAEHvB,UAAU,CAACG,YAAD,CAFP;AAAA,MAEbqB,KAFa,eAEbA,KAFa;;AAIrB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAErBJ,IAAAA,QAAQ,CAACK,MAAT,CACEN,UADF,EAEE;AACEO,MAAAA,OAAO,EAAEH,KAAK,CAACI,IAAN,GAAa,CAAb,GAAiB,CAAC;AAD7B,KAFF,EAKEC,KALF;AAOD,GATD;;AAWA5B,EAAAA,SAAS,CAAC,YAAM;AACdwB,IAAAA,QAAQ;AACT,GAFQ,CAAT;AAMA,SACE,0CACE,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAACnB,MAAM,CAACG,OAAR,EAAiB;AACrCqB,MAAAA,SAAS,EAAE,CAAC;AACVC,QAAAA,UAAU,EAAEX;AADF,OAAD;AAD0B,KAAjB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACW,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAE;AAAA,aAAMQ,QAAQ,EAAd;AAAA,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CALF,CADF,CADF;AAcD,CAnCD;;AAqCA,eAAeN,QAAf","sourcesContent":["import React, { useContext, useEffect, useRef } from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { StateContext } from '../state';\nimport Button from './Button';\nimport theme from '../theme';\n\nconst styles = StyleSheet.create({ \n  sidebar: {\n    width: 200,\n    height: '100%', \n    backgroundColor: theme.colors.primary,\n    position: 'fixed',\n    top: 72\n  },\n  button: {\n    padding: 10,\n  }\n});\n\n\nconst SideMenu = () => {\n  const toggleAnim = useRef(new Animated.Value(0)).current; \n  const { state } = useContext(StateContext);\n\n  const moveMenu = () => {\n\n    Animated.spring(\n      toggleAnim,\n      {\n        toValue: state.open ? 0 : -200\n      }\n    ).start();\n  \n  };\n\n  useEffect(() => {\n    moveMenu();\n  });\n\n\n\n  return (\n    <>\n      <Animated.View style={[styles.sidebar, {\n        transform: [{\n          translateX: toggleAnim\n        }]\n      }]}>\n        <View style={styles.button}>\n          <Button color='error' onPress={() => moveMenu()} >Button1</Button>\n        </View>\n      </Animated.View>\n    </>\n\n  );\n};\n\nexport default SideMenu;"]},"metadata":{},"sourceType":"module"}