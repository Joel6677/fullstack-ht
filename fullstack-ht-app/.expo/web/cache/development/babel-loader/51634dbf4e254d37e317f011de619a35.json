{"ast":null,"code":"import * as React from 'react';\nimport { withTheme } from 'react-native-paper';\nimport Swiper from \"./Swiper\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar cache = createCache();\n\nfunction Tabs(_ref) {\n  var onChangeIndex = _ref.onChangeIndex,\n      children = _ref.children,\n      persistKey = _ref.persistKey,\n      theme = _ref.theme,\n      dark = _ref.dark,\n      style = _ref.style,\n      defaultIndex = _ref.defaultIndex,\n      _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'fixed' : _ref$mode,\n      _ref$uppercase = _ref.uppercase,\n      uppercase = _ref$uppercase === void 0 ? true : _ref$uppercase,\n      _ref$iconPosition = _ref.iconPosition,\n      iconPosition = _ref$iconPosition === void 0 ? 'leading' : _ref$iconPosition,\n      _ref$showTextLabel = _ref.showTextLabel,\n      showTextLabel = _ref$showTextLabel === void 0 ? true : _ref$showTextLabel,\n      _ref$showLeadingSpace = _ref.showLeadingSpace,\n      showLeadingSpace = _ref$showLeadingSpace === void 0 ? true : _ref$showLeadingSpace;\n  var onInnerChangeIndex = React.useCallback(function (newIndex) {\n    if (persistKey && Platform.OS === 'web') {\n      cache.set(persistKey, newIndex);\n    }\n\n    onChangeIndex === null || onChangeIndex === void 0 ? void 0 : onChangeIndex(newIndex);\n  }, [persistKey, onChangeIndex]);\n  return React.createElement(Swiper, {\n    style: style,\n    dark: dark,\n    theme: theme,\n    defaultIndex: getDefaultIndex(defaultIndex, persistKey),\n    onChangeIndex: onInnerChangeIndex,\n    uppercase: uppercase,\n    iconPosition: iconPosition,\n    showTextLabel: showTextLabel,\n    showLeadingSpace: showLeadingSpace,\n    mode: mode\n  }, children);\n}\n\nfunction getDefaultIndex(defaultIndex, persistKey) {\n  if (persistKey) {\n    return cache.get(persistKey) || defaultIndex || 0;\n  }\n\n  return defaultIndex || 0;\n}\n\nfunction createCache() {\n  var c = {};\n\n  var set = function set(k, i) {\n    c[k] = i;\n  };\n\n  var get = function get(key) {\n    return c[key];\n  };\n\n  return {\n    set: set,\n    get: get\n  };\n}\n\nexport default withTheme(Tabs);","map":{"version":3,"sources":["Tabs.tsx"],"names":["cache","createCache","mode","uppercase","iconPosition","showTextLabel","showLeadingSpace","onInnerChangeIndex","newIndex","persistKey","Platform","onChangeIndex","getDefaultIndex","defaultIndex","c","set","get","key","withTheme"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,SAAA,SAAA,QAAA,oBAAA;AACA,OAAA,MAAA;;AAOA,IAAMA,KAAK,GAAGC,WAAd,EAAA;;AAEA,SAAA,IAAA,OA0BG;AAAA,MA1BW,aA0BX,QA1BW,aA0BX;AAAA,MA1BW,QA0BX,QA1BW,QA0BX;AAAA,MA1BW,UA0BX,QA1BW,UA0BX;AAAA,MA1BW,KA0BX,QA1BW,KA0BX;AAAA,MA1BW,IA0BX,QA1BW,IA0BX;AAAA,MA1BW,KA0BX,QA1BW,KA0BX;AAAA,MA1BW,YA0BX,QA1BW,YA0BX;AAAA,uBAlBDC,IAkBC;AAAA,MAlBDA,IAkBC,0BA1BW,OA0BX;AAAA,4BAjBDC,SAiBC;AAAA,MAjBDA,SAiBC,+BA1BW,IA0BX;AAAA,+BAhBDC,YAgBC;AAAA,MAhBDA,YAgBC,kCA1BW,SA0BX;AAAA,gCAfDC,aAeC;AAAA,MAfDA,aAeC,mCA1BW,IA0BX;AAAA,mCAdDC,gBAcC;AAAA,MAdDA,gBAcC,sCAdkB,IAclB;AACD,MAAMC,kBAAkB,GAAG,KAAK,CAAL,WAAA,CACxBC,UAAAA,QAAD,EAAc;AACZ,QAAIC,UAAU,IAAIC,QAAQ,CAARA,EAAAA,KAAlB,KAAA,EAAyC;AACvCV,MAAAA,KAAK,CAALA,GAAAA,CAAAA,UAAAA,EAAAA,QAAAA;AACD;;AACDW,IAAAA,aAAa,KAAbA,IAAAA,IAAAA,aAAa,KAAA,KAAbA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAa,CAAbA,QAAa,CAAbA;AALuB,GAAA,EAOzB,CAAA,UAAA,EAPF,aAOE,CAPyB,CAA3B;AAUA,SACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,IAAA,KAAK,EADP,KAAA;AAEE,IAAA,IAAI,EAFN,IAAA;AAGE,IAAA,KAAK,EAHP,KAAA;AAIE,IAAA,YAAY,EAAEC,eAAe,CAAA,YAAA,EAJ/B,UAI+B,CAJ/B;AAKE,IAAA,aAAa,EALf,kBAAA;AAME,IAAA,SAAS,EANX,SAAA;AAOE,IAAA,YAAY,EAPd,YAAA;AAQE,IAAA,aAAa,EARf,aAAA;AASE,IAAA,gBAAgB,EATlB,gBAAA;AAUE,IAAA,IAAI,EAAEV;AAVR,GAAA,EADF,QACE,CADF;AAgBD;;AAED,SAAA,eAAA,CAAA,YAAA,EAAA,UAAA,EAGE;AACA,MAAA,UAAA,EAAgB;AACd,WAAOF,KAAK,CAALA,GAAAA,CAAAA,UAAAA,KAAAA,YAAAA,IAAP,CAAA;AACD;;AACD,SAAOa,YAAY,IAAnB,CAAA;AAEF;;AACA,SAAA,WAAA,GAAuB;AACrB,MAAIC,CAA0B,GAA9B,EAAA;;AACA,MAAMC,GAAG,GAAG,SAANA,GAAM,CAAA,CAAA,EAAA,CAAA,EAA0B;AACpCD,IAAAA,CAAC,CAADA,CAAC,CAADA,GAAAA,CAAAA;AADF,GAAA;;AAGA,MAAME,GAAG,GAAIC,SAAPD,GAAOC,CAAAA,GAAD;AAAA,WAAiBH,CAAC,CAA9B,GAA8B,CAAlB;AAAA,GAAZ;;AACA,SAAO;AACLC,IAAAA,GADK,EACLA,GADK;AAELC,IAAAA,GAAAA,EAAAA;AAFK,GAAP;AAID;;AAED,eAAeE,SAAS,CAAxB,IAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport type { ViewStyle } from 'react-native';\nimport { withTheme } from 'react-native-paper';\nimport Swiper from './Swiper';\nimport type { Theme } from 'react-native-paper/lib/typescript/types';\n\nimport type { IconPosition, Mode } from './utils';\nimport { Platform } from 'react-native';\n\n// used to persist position on web\nconst cache = createCache();\n\nfunction Tabs({\n  onChangeIndex,\n  children,\n  persistKey,\n  theme,\n  dark,\n  style,\n  defaultIndex,\n  mode = 'fixed',\n  uppercase = true,\n  iconPosition = 'leading',\n  showTextLabel = true,\n  showLeadingSpace = true,\n}: {\n  children: any;\n  persistKey?: string;\n  theme: Theme;\n  dark?: boolean;\n  style?: ViewStyle;\n  defaultIndex?: number;\n  iconPosition?: IconPosition;\n  showTextLabel?: boolean;\n  showLeadingSpace?: boolean;\n  uppercase?: boolean;\n  mode?: Mode;\n  onChangeIndex?: (index: number) => void;\n}) {\n  const onInnerChangeIndex = React.useCallback(\n    (newIndex) => {\n      if (persistKey && Platform.OS === 'web') {\n        cache.set(persistKey, newIndex);\n      }\n      onChangeIndex?.(newIndex);\n    },\n    [persistKey, onChangeIndex]\n  );\n\n  return (\n    <Swiper\n      style={style}\n      dark={dark}\n      theme={theme}\n      defaultIndex={getDefaultIndex(defaultIndex, persistKey)}\n      onChangeIndex={onInnerChangeIndex}\n      uppercase={uppercase}\n      iconPosition={iconPosition}\n      showTextLabel={showTextLabel}\n      showLeadingSpace={showLeadingSpace}\n      mode={mode}\n    >\n      {children}\n    </Swiper>\n  );\n}\n\nfunction getDefaultIndex(\n  defaultIndex: number | undefined,\n  persistKey: string | undefined\n) {\n  if (persistKey) {\n    return cache.get(persistKey) || defaultIndex || 0;\n  }\n  return defaultIndex || 0;\n}\n// used to persist position on web\nfunction createCache() {\n  let c: { [k: string]: number } = {};\n  const set = (k: string, i: number) => {\n    c[k] = i;\n  };\n  const get = (key: string) => c[key];\n  return {\n    set,\n    get,\n  };\n}\n\nexport default withTheme(Tabs);\n"]},"metadata":{},"sourceType":"module"}