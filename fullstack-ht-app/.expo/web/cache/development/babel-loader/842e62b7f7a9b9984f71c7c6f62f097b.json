{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SideMenu.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useContext, useRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { StateContext } from \"../state\";\nimport Button from \"./Button\";\nvar styles = StyleSheet.create({\n  sidebar: {\n    width: 200,\n    height: '100%',\n    backgroundColor: \"blue\"\n  },\n  button: {\n    padding: 10\n  }\n});\nexport var SlidingMenu = function (_React$Component) {\n  _inherits(SlidingMenu, _React$Component);\n\n  var _super = _createSuper(SlidingMenu);\n\n  function SlidingMenu() {\n    var _this;\n\n    _classCallCheck(this, SlidingMenu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = useContext(StateContext);\n    _this.toggleAnim = useRef(new Animated.Value(0)).current;\n    return _this;\n  }\n\n  _createClass(SlidingMenu, [{\n    key: \"render\",\n    value: function render() {\n      Animated.spring(this.toggleAnim, {\n        toValue: this.state ? 0 : -200\n      }).start();\n      return React.createElement(Animated.View, {\n        style: [styles.sidebar, {\n          transform: [{\n            translateX: this.toggleAnim\n          }]\n        }]\n      }, React.createElement(View, {\n        style: styles.button\n      }, React.createElement(Button, {\n        color: \"error\",\n        onPress: function onPress() {\n          return console.log('Button pressed');\n        }\n      }, \"Button1\")), React.createElement(View, {\n        style: styles.button\n      }, React.createElement(Button, {\n        color: \"error\",\n        onPress: function onPress() {\n          return console.log('Button pressed');\n        }\n      }, \"Button2\")));\n    }\n  }]);\n\n  return SlidingMenu;\n}(React.Component);\n\nvar SideMenu = function SideMenu() {\n  return React.createElement(React.Fragment, null, React.createElement(SlidingMenu, null));\n};\n\nexport default SideMenu;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/SideMenu.jsx"],"names":["React","useContext","useRef","StateContext","Button","styles","StyleSheet","create","sidebar","width","height","backgroundColor","button","padding","SlidingMenu","state","toggleAnim","Animated","Value","current","spring","toValue","start","transform","translateX","console","log","Component","SideMenu"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,QAA0C,OAA1C;;;;AAGA,SAASC,YAAT;AACA,OAAOC,MAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,GADA;AAEPC,IAAAA,MAAM,EAAE,MAFD;AAGPC,IAAAA,eAAe,EAAE;AAHV,GADsB;AAO/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH;AAPuB,CAAlB,CAAf;AAaA,WAAaC,WAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UAKEC,KALF,GAKWd,UAAU,CAACE,YAAD,CALrB;AAAA,UAMEa,UANF,GAMed,MAAM,CAAC,IAAIe,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAN7C;AAAA;AAAA;;AAAA;AAAA;AAAA,6BASW;AAEPF,MAAAA,QAAQ,CAACG,MAAT,CACE,KAAKJ,UADP,EAEE;AACEK,QAAAA,OAAO,EAAE,KAAKN,KAAL,GAAa,CAAb,GAAiB,CAAC;AAD7B,OAFF,EAKEO,KALF;AAOA,aAEE,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,KAAK,EAAE,CAACjB,MAAM,CAACG,OAAR,EAAiB;AACrCe,UAAAA,SAAS,EAAE,CAAC;AACVC,YAAAA,UAAU,EAAE,KAAKR;AADP,WAAD;AAD0B,SAAjB;AAAtB,SAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEX,MAAM,CAACO;AAApB,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAMa,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AAAA;AAA/B,mBADF,CALF,EAQE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAErB,MAAM,CAACO;AAApB,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAMa,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AAAA;AAA/B,mBADF,CARF,CAFF;AAgBD;AAlCH;;AAAA;AAAA,EAAiC1B,KAAK,CAAC2B,SAAvC;;AAsCA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAIrB,SACE,0CACE,oBAAC,WAAD,OADF,CADF;AAMD,CAVD;;AAYA,eAAeA,QAAf","sourcesContent":["import React, { useContext, useRef } from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { StateContext } from '../state';\nimport Button from './Button';\n\nconst styles = StyleSheet.create({\n  sidebar: {\n    width: 200,\n    height: '100%', \n    backgroundColor: \"blue\",\n    // position: 'fixed',\n  },\n  button: {\n    padding: 10,\n  }\n});\n\n\nexport class SlidingMenu extends React.Component {\n\n\n  \n\n  state  = useContext(StateContext);\n  toggleAnim = useRef(new Animated.Value(0)).current;\n \n\n  render() {\n\n    Animated.spring(\n      this.toggleAnim,\n      {\n        toValue: this.state ? 0 : -200,\n      }\n    ).start();\n\n    return (\n      \n      <Animated.View style={[styles.sidebar, {\n        transform: [{\n          translateX: this.toggleAnim\n        }]\n      }]}>\n        <View style={styles.button}>\n          <Button color='error' onPress={() => console.log('Button pressed')} >Button1</Button>\n        </View>\n        <View style={styles.button}>\n          <Button color='error' onPress={() => console.log('Button pressed')} >Button2</Button>\n        </View>\n      </Animated.View>\n\n    );\n  }\n}\n\n\nconst SideMenu = () => {\n  \n\n\n  return (\n    <>\n      <SlidingMenu/>\n    </>\n\n  );\n};\n\nexport default SideMenu;"]},"metadata":{},"sourceType":"module"}