{"ast":null,"code":"var _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Home.jsx\";\nimport React, { useContext, useRef, useEffect, useState } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useQuery } from '@apollo/client';\nimport { StateContext } from \"../state\";\nimport Text from \"./Text\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    zIndex: 2\n  },\n  scrollContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    position: 'absolute',\n    backgroundColor: 'green',\n    height: 100,\n    width: 50\n  },\n  scrollViewStyle: {},\n  textContainer: {\n    position: 'absolute',\n    backgroundColor: 'purple',\n    alignSelf: 'flex-end'\n  }\n});\n\nvar addDays = function addDays() {\n  var d = [];\n  var m = [];\n  var y = [];\n};\n\nvar d = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31];\nvar m = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nvar y = [1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000];\n\nvar Home = function Home() {\n  var scrollY = useRef(new Animated.Value(0)).current;\n  console.log(scrollY);\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.scrollContainer\n  }, React.createElement(ScrollView, {\n    style: styles.scrollViewStyle,\n    showsHorizontalScrollIndicator: false,\n    pagingEnabled: true,\n    onScroll: Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          y: scrollY\n        }\n      }\n    }]),\n    scrollEventThrottle: 1\n  }, d.map(function (x, y) {\n    return React.createElement(View, {\n      key: y\n    }, React.createElement(Text, null, x));\n  })), React.createElement(View, {\n    style: styles.textContainer\n  }, React.createElement(Text, null)))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Home.jsx"],"names":["React","useContext","useRef","useEffect","useState","useQuery","StateContext","Text","styles","StyleSheet","create","container","flex","flexDirection","alignItems","justifyContent","width","height","position","zIndex","scrollContainer","backgroundColor","scrollViewStyle","textContainer","alignSelf","addDays","d","m","y","Home","scrollY","Animated","Value","current","console","log","event","nativeEvent","contentOffset","map","x"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useEffect, useState } from 'react';\nimport { Animated, StyleSheet, View, Image, ScrollView, SafeAreaView } from 'react-native';\nimport { useQuery } from '@apollo/client'; \n\nimport { StateContext } from '../state';\nimport Text from './Text';\n// import fileService from '../services/files';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    zIndex: 2,\n  },\n  scrollContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    position: 'absolute',\n    backgroundColor: 'green',\n    height: 100,\n    width: 50\n  },\n  scrollViewStyle: {\n\n  },\n  textContainer: {\n    position: 'absolute',\n    backgroundColor: 'purple',\n    alignSelf: 'flex-end'\n\n\n  }\n\n\n  // photo: {\n  //   width: 50,\n  //   height: 50,\n  // },\n});\n\n\nconst addDays = () => {\n\n  let d = [];\n  let m = [];\n  let y = [];\n\n};\n\n//temp\n\nlet d = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];\nlet m = [1,2,3,4,5,6,7,8,9,10,11,12];\nlet y = [1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000];\n\n\nconst Home = () => {\n  const scrollY = useRef(new Animated.Value(0)).current; \n\n  // create dates\n\n  // const { state } = useContext(StateContext);\n  // const [files, setFiles] = useState([]);\n\n  // const moveMenu = () => {\n\n  //   Animated.spring(\n  //     homeAnim,\n  //     {\n  //       toValue: state.open ? 600 : 0\n  //     }\n  //   ).start();\n  \n  // };\n\n  // useEffect(() => {\n  //   moveMenu();\n  //   fileService.getAll().then(files =>\n  //     setFiles(files));\n  // },[]);\n\n  // const getImage = async (filename) => {\n  //   return await fileService.getImage(filename);\n  // };\n\n  // get images here\n\n  console.log(scrollY);\n\n  return (\n     <>\n    <View style={styles.container}>\n\n    <View style={styles.scrollContainer}>\n        <ScrollView\n          style={styles.scrollViewStyle}\n          showsHorizontalScrollIndicator={false}\n          pagingEnabled\n          onScroll={Animated.event([\n            {\n              nativeEvent: {\n                contentOffset: {\n                  y: scrollY,\n                }\n              }\n            }\n          ])}\n          scrollEventThrottle={1}\n        >\n          {d.map((x,y) => {\n            return(\n              <View key={y}>\n                <Text>{x}</Text>\n              </View>\n            );\n          })}\n        </ScrollView>\n        <View style={styles.textContainer}>\n          <Text>{}</Text>\n        </View>\n      </View>\n\n\n\n    </View>\n     \n\n\n      {/* <Animated.View style={[styles.home, {\n        transform: [{\n          translateX: homeAnim\n        }]\n      }]}>\n        <View>\n          {files.map((file) =>\n            <React.Fragment key={file._id}>\n              <Image\n                style={styles.photo}\n                source={{\n                  uri: `http://localhost:3001/image/${file.filename}`\n                }} />\n            </React.Fragment>\n          )}\n          <Text>Pictures&videos</Text>\n        </View>\n      </Animated.View>  */}\n      \n     </>\n\n  );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}