{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyReviews.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Button, Snackbar } from 'react-native-paper';\nimport * as firebase from 'firebase';\nimport ReviewItem from \"./ReviewItem\";\nvar styles = StyleSheet.create({\n  reviewItemWrapper: {\n    padding: 15,\n    backgroundColor: 'white'\n  },\n  separator: {\n    height: 10\n  },\n  actionsContainer: {\n    marginTop: 15,\n    flexDirection: 'row'\n  },\n  actionButton: {\n    flexGrow: 1,\n    marginRight: 15\n  },\n  lastActionButton: {\n    marginRight: 0\n  }\n});\n\nvar ReviewItemWithActions = function ReviewItemWithActions(_ref) {\n  var review = _ref.review,\n      onDelete = _ref.onDelete;\n  return React.createElement(View, null, React.createElement(ReviewItem, {\n    review: review\n  }), React.createElement(Button, {\n    mode: \"outlined\"\n  }, \"Show whisky\"), React.createElement(Button, {\n    mode: \"outlined\"\n  }, \"Delete review\"));\n};\n\nvar ItemSeparator = function ItemSeparator() {\n  return React.createElement(View, {\n    style: styles.separator\n  });\n};\n\nvar MyReviews = function MyReviews() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      reviews = _useState2[0],\n      setReviews = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  useEffect(function () {\n    {\n      firebase.auth().currentUser && firebase.firestore().collection('reviews').doc(firebase.auth().currentUser.uid).collection('userReviews').get().then(function (querySnapshot) {\n        var posts = querySnapshot.docs.map(function (doc) {\n          var data = doc.data();\n          var id = doc.id;\n          return _objectSpread({\n            id: id\n          }, data);\n        });\n        setReviews(posts);\n      }).catch(function (error) {\n        console.log(\"Error getting documents: \", error);\n      });\n    }\n  }, []);\n\n  var _onDelete = function onDelete(id) {\n    return _regeneratorRuntime.async(function onDelete$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            firebase.firestore().collection('reviews').doc(firebase.auth().currentUser.uid).collection('userReviews').doc(id).delete().then(function () {\n              setVisible(true);\n            }).catch(function (error) {\n              console.log(error);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Snackbar, {\n    visible: visible\n  }, \"Review deleted\"), React.createElement(FlatList, {\n    data: reviews,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(ReviewItemWithActions, {\n        review: item,\n        onDelete: function onDelete() {\n          return _onDelete(item.id);\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(_ref3) {\n      var id = _ref3.id;\n      return id;\n    },\n    ItemSeparatorComponent: ItemSeparator\n  }));\n};\n\nexport default MyReviews;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/MyReviews.jsx"],"names":["React","useState","useEffect","Button","Snackbar","firebase","ReviewItem","styles","StyleSheet","create","reviewItemWrapper","padding","backgroundColor","separator","height","actionsContainer","marginTop","flexDirection","actionButton","flexGrow","marginRight","lastActionButton","ReviewItemWithActions","review","onDelete","ItemSeparator","MyReviews","reviews","setReviews","visible","setVisible","auth","currentUser","firestore","collection","doc","uid","get","then","querySnapshot","posts","docs","map","data","id","catch","error","console","log","delete","item"],"mappings":"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","sourcesContent":["import React , {useState, useEffect} from 'react';\nimport { FlatList, View, StyleSheet, Alert } from 'react-native';\nimport {Â Button, Snackbar } from 'react-native-paper';\nimport * as firebase from 'firebase';\nimport ReviewItem from './ReviewItem';\n\n\nconst styles = StyleSheet.create({\n  reviewItemWrapper: {\n    padding: 15,\n    backgroundColor: 'white',\n  },\n  separator: {\n    height: 10,\n  },\n  actionsContainer: {\n    marginTop: 15,\n    flexDirection: 'row',\n  },\n  actionButton: {\n    flexGrow: 1,\n    marginRight: 15,\n  },\n  lastActionButton: {\n    marginRight: 0,\n  },\n});\n\n\n\nconst ReviewItemWithActions = ({ review, onDelete }) => {\n\n    // view whisky\n    // delete review\n  return (\n    <View>\n        <ReviewItem review={review}/> \n        <Button mode=\"outlined\">Show whisky</Button>\n        <Button mode=\"outlined\">Delete review</Button>       \n    </View>\n  );\n};\n\nconst ItemSeparator = () => <View style={styles.separator} />;\n\nconst MyReviews = () => {\n\n    const [reviews, setReviews] = useState([]);\n    const [visible, setVisible] = useState(false);\n  \n    useEffect(() => {\n        {firebase.auth().currentUser&&firebase.firestore()\n            .collection('reviews').doc(firebase.auth().currentUser.uid).collection('userReviews')\n            .get()\n            .then((querySnapshot) => {\n                let posts = querySnapshot.docs.map(doc => {\n                    const data = doc.data();\n                    const id = doc.id;\n                    return { id, ...data };\n                });\n                setReviews(posts);\n            })\n            .catch((error) => {\n                console.log(\"Error getting documents: \", error);\n            });\n}}, []);\n\n  const onDelete = async (id) => {\n    // use transaction\n    firebase.firestore().collection('reviews').doc(firebase.auth().currentUser.uid).collection('userReviews')\n    .doc(id).delete().then(() => {setVisible(true);}).catch((error) => {console.log(error);});\n    \n  };\n\n  return (\n      <>\n          <Snackbar visible={visible}>\n              Review deleted\n        </Snackbar>\n          <FlatList\n              data={reviews}\n              renderItem={({ item }) => (\n                  <ReviewItemWithActions\n                      review={item}\n                      onDelete={() => onDelete(item.id)}\n                  />\n              )}\n              keyExtractor={({ id }) => id}\n              ItemSeparatorComponent={ItemSeparator}\n          />\n      </>\n  );\n};\n\nexport default MyReviews;"]},"metadata":{},"sourceType":"module"}