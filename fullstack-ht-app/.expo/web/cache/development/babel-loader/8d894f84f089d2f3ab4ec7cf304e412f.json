{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nexport var getImage = function getImage() {\n  var db, docRef, test;\n  return _regeneratorRuntime.async(function getImage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          db = firebase.firestore();\n          docRef = db.collection(\"images\").doc(firebase.auth().currentUser.uid).collection(\"userImages\").doc(\"z7wHkAaPtm1R4Kp4MfMl\");\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(docRef.get());\n\n        case 4:\n          test = _context.sent.data().downloadURL;\n          return _context.abrupt(\"return\", test);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/firebase/queries.js"],"names":["firebase","getImage","db","firestore","docRef","collection","doc","auth","currentUser","uid","get","test","data","downloadURL"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAEdC,UAAAA,EAFc,GAETF,QAAQ,CAACG,SAAT,EAFS;AAIdC,UAAAA,MAJc,GAILF,EAAE,CAACG,UAAH,CAAc,QAAd,EAAwBC,GAAxB,CAA4BN,QAAQ,CAACO,IAAT,GAC3CC,WAD2C,CAC/BC,GADG,EACEJ,UADF,CACa,YADb,EAC2BC,GAD3B,CAC+B,sBAD/B,CAJK;AAAA;AAAA,2CAOAF,MAAM,CAACM,GAAP,EAPA;;AAAA;AAOdC,UAAAA,IAPc,iBAOcC,IAPd,GAOqBC,WAPrB;AAAA,2CASbF,IATa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nexport const getImage = async () => {\n\n    const db = firebase.firestore();\n\n    const docRef = db.collection(\"images\").doc(firebase.auth().\n    currentUser.uid).collection(\"userImages\").doc(\"z7wHkAaPtm1R4Kp4MfMl\");\n\n    const test = (await docRef.get()).data().downloadURL;\n\n    return test;\n    // docRef.get().then((doc) => {\n    //     if (doc.exists) {\n    //         console.log(\"Document data:\", doc.data().downloadURL);\n    //         return doc.data().downloadURL;\n    //     } else {\n    //         // doc.data() will be undefined in this case\n    //         console.log(\"No such document!\");\n    //     }\n    // }).catch((error) => {\n    //     console.log(\"Error getting document:\", error);\n    // });\n\n};"]},"metadata":{},"sourceType":"module"}