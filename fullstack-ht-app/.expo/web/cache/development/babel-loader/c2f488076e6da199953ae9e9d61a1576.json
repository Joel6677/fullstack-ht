{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation deleteReview($id: ID!) {\\n    deleteReview(id: $id)\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation createUser($user: CreateUserInput!) {\\n    createUser(user: $user) {\\n      ...UserBaseFields\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation createReview($review: CreateReviewInput!) {\\n    createReview(review: $review) {\\n      ...ReviewBaseFields\\n      repository {\\n        ...RepositoryBaseFields\\n      }\\n    }\\n  }\\n\\n  \", \"\\n  \", \"\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation authorize($credentials: AuthorizeInput!) {\\n    authorize(credentials: $credentials) {\\n      accessToken\\n      user {\\n        ...UserBaseFields\\n      }\\n    }\\n  }\\n\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost';\nimport { USER_BASE_FIELDS, REPOSITORY_BASE_FIELDS, REVIEW_BASE_FIELDS } from \"./fragments\";\nexport var AUTHORIZE = gql(_templateObject(), USER_BASE_FIELDS);\nexport var CREATE_REVIEW = gql(_templateObject2(), REVIEW_BASE_FIELDS, REPOSITORY_BASE_FIELDS);\nexport var CREATE_USER = gql(_templateObject3(), USER_BASE_FIELDS);\nexport var DELETE_REVIEW = gql(_templateObject4());","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/graphql/mutations.js"],"names":["gql","USER_BASE_FIELDS","REPOSITORY_BASE_FIELDS","REVIEW_BASE_FIELDS","AUTHORIZE","CREATE_REVIEW","CREATE_USER","DELETE_REVIEW"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA,SACEC,gBADF,EAEEC,sBAFF,EAGEC,kBAHF;AAMA,OAAO,IAAMC,SAAS,GAAGJ,GAAH,oBAUlBC,gBAVkB,CAAf;AAaP,OAAO,IAAMI,aAAa,GAAGL,GAAH,qBAUtBG,kBAVsB,EAWtBD,sBAXsB,CAAnB;AAcP,OAAO,IAAMI,WAAW,GAAGN,GAAH,qBAMpBC,gBANoB,CAAjB;AASP,OAAO,IAAMM,aAAa,GAAGP,GAAH,oBAAnB","sourcesContent":["import { gql } from 'apollo-boost';\n\nimport {\n  USER_BASE_FIELDS,\n  REPOSITORY_BASE_FIELDS,\n  REVIEW_BASE_FIELDS,\n} from './fragments';\n\nexport const AUTHORIZE = gql`\n  mutation authorize($credentials: AuthorizeInput!) {\n    authorize(credentials: $credentials) {\n      accessToken\n      user {\n        ...UserBaseFields\n      }\n    }\n  }\n\n  ${USER_BASE_FIELDS}\n`;\n\nexport const CREATE_REVIEW = gql`\n  mutation createReview($review: CreateReviewInput!) {\n    createReview(review: $review) {\n      ...ReviewBaseFields\n      repository {\n        ...RepositoryBaseFields\n      }\n    }\n  }\n\n  ${REVIEW_BASE_FIELDS}\n  ${REPOSITORY_BASE_FIELDS}\n`;\n\nexport const CREATE_USER = gql`\n  mutation createUser($user: CreateUserInput!) {\n    createUser(user: $user) {\n      ...UserBaseFields\n    }\n  }\n  ${USER_BASE_FIELDS}\n`;\n\nexport const DELETE_REVIEW = gql`\n  mutation deleteReview($id: ID!) {\n    deleteReview(id: $id)\n  }\n`;"]},"metadata":{},"sourceType":"module"}