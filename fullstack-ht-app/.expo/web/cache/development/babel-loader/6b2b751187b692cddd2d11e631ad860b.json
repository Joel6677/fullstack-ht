{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_AUTHORIZED_USER } from \"../graphql/queries\";\n\nvar useAuthorizedUser = function useAuthorizedUser(variables) {\n  var _useQuery = useQuery(GET_AUTHORIZED_USER, {\n    variables: variables,\n    fetchPolicy: 'cache-and-network'\n  }),\n      data = _useQuery.data,\n      rest = _objectWithoutProperties(_useQuery, [\"data\"]);\n\n  var authorizedUser = data ? data.authorizedUser : undefined;\n  return _objectSpread({\n    authorizedUser: authorizedUser\n  }, rest);\n};\n\nexport default useAuthorizedUser;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/hooks/useAuthorizedUser.js"],"names":["useQuery","GET_AUTHORIZED_USER","useAuthorizedUser","variables","fetchPolicy","data","rest","authorizedUser","undefined"],"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,qBAAzB;AAEA,SAASC,mBAAT;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,SAAD,EAAe;AAAA,kBACbH,QAAQ,CAACC,mBAAD,EAAsB;AACtDE,IAAAA,SAAS,EAATA,SADsD;AAEtDC,IAAAA,WAAW,EAAE;AAFyC,GAAtB,CADK;AAAA,MAC/BC,IAD+B,aAC/BA,IAD+B;AAAA,MACtBC,IADsB;;AAMvC,MAAMC,cAAc,GAAGF,IAAI,GAAGA,IAAI,CAACE,cAAR,GAAyBC,SAApD;AAEA;AAASD,IAAAA,cAAc,EAAdA;AAAT,KAA4BD,IAA5B;AACD,CATD;;AAWA,eAAeJ,iBAAf","sourcesContent":["import { useQuery } from '@apollo/react-hooks';\n\nimport { GET_AUTHORIZED_USER } from '../graphql/queries';\n\nconst useAuthorizedUser = (variables) => {\n  const { data, ...rest } = useQuery(GET_AUTHORIZED_USER, {\n    variables,\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const authorizedUser = data ? data.authorizedUser : undefined;\n\n  return { authorizedUser, ...rest };\n};\n\nexport default useAuthorizedUser;"]},"metadata":{},"sourceType":"module"}