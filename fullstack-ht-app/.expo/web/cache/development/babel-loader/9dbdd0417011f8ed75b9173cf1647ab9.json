{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/RepositoryItem.jsx\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Linking } from 'expo';\nimport theme from \"../theme\";\nimport Text from \"./Text\";\nimport Button from \"./Button\";\nimport formatInThousands from \"../utils/formatInThousands\";\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    padding: 15\n  },\n  topContainer: {\n    flexDirection: 'row',\n    marginBottom: 15\n  },\n  bottomContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  },\n  avatarContainer: {\n    flexGrow: 0,\n    marginRight: 20\n  },\n  contentContainer: {\n    flexGrow: 1,\n    flexShrink: 1\n  },\n  nameText: {\n    marginBottom: 5\n  },\n  descriptionText: {\n    flexGrow: 1\n  },\n  avatar: {\n    width: 45,\n    height: 45,\n    borderRadius: theme.roundness\n  },\n  countItem: {\n    flexGrow: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 15\n  },\n  countItemCount: {\n    marginBottom: 5\n  },\n  languageContainer: {\n    marginTop: 10,\n    flexDirection: 'row'\n  },\n  languageText: {\n    color: 'white',\n    backgroundColor: theme.colors.primary,\n    borderRadius: theme.roundness,\n    flexGrow: 0,\n    paddingVertical: 3,\n    paddingHorizontal: 6\n  },\n  githubButton: {\n    marginTop: 15\n  }\n});\n\nvar CountItem = function CountItem(_ref) {\n  var label = _ref.label,\n      count = _ref.count,\n      props = _objectWithoutProperties(_ref, [\"label\", \"count\"]);\n\n  return React.createElement(View, {\n    style: styles.countItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, _extends({\n    style: styles.countItemCount,\n    fontWeight: \"bold\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), formatInThousands(count)), React.createElement(Text, {\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, label));\n};\n\nvar RepositoryItem = function RepositoryItem(_ref2) {\n  var repository = _ref2.repository,\n      _ref2$showGithubLink = _ref2.showGithubLink,\n      showGithubLink = _ref2$showGithubLink === void 0 ? false : _ref2$showGithubLink,\n      props = _objectWithoutProperties(_ref2, [\"repository\", \"showGithubLink\"]);\n\n  var fullName = repository.fullName,\n      description = repository.description,\n      language = repository.language,\n      forksCount = repository.forksCount,\n      stargazersCount = repository.stargazersCount,\n      ratingAverage = repository.ratingAverage,\n      reviewCount = repository.reviewCount,\n      ownerAvatarUrl = repository.ownerAvatarUrl,\n      url = repository.url;\n\n  var onGithubLinkClick = function onGithubLinkClick() {\n    Linking.openURL(url);\n  };\n\n  return React.createElement(View, _extends({\n    style: styles.container\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: styles.topContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.avatarContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: ownerAvatarUrl\n    },\n    style: styles.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.contentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.nameText,\n    fontWeight: \"bold\",\n    fontSize: \"subheading\",\n    numberOfLines: 1,\n    testID: \"repositoryItemFullName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, fullName), React.createElement(Text, {\n    style: styles.descriptionText,\n    color: \"textSecondary\",\n    testID: \"repositoryItemDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, description), language ? React.createElement(View, {\n    style: styles.languageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.languageText,\n    testID: \"repositoryItemLanguage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, language)) : null)), React.createElement(View, {\n    style: styles.bottomContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, React.createElement(CountItem, {\n    count: stargazersCount,\n    label: \"Stars\",\n    testID: \"repositoryItemStars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }), React.createElement(CountItem, {\n    count: forksCount,\n    label: \"Forks\",\n    testID: \"repositoryItemForks\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }), React.createElement(CountItem, {\n    count: reviewCount,\n    label: \"Reviews\",\n    testID: \"repositoryItemReviews\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }), React.createElement(CountItem, {\n    count: ratingAverage,\n    label: \"Rating\",\n    testID: \"repositoryItemRating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  })), showGithubLink && url && React.createElement(Button, {\n    style: styles.githubButton,\n    onPress: onGithubLinkClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, \"Open in GitHub\"));\n};\n\nexport default RepositoryItem;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/RepositoryItem.jsx"],"names":["React","Linking","theme","Text","Button","formatInThousands","styles","StyleSheet","create","container","backgroundColor","padding","topContainer","flexDirection","marginBottom","bottomContainer","justifyContent","avatarContainer","flexGrow","marginRight","contentContainer","flexShrink","nameText","descriptionText","avatar","width","height","borderRadius","roundness","countItem","alignItems","paddingHorizontal","countItemCount","languageContainer","marginTop","languageText","color","colors","primary","paddingVertical","githubButton","CountItem","label","count","props","RepositoryItem","repository","showGithubLink","fullName","description","language","forksCount","stargazersCount","ratingAverage","reviewCount","ownerAvatarUrl","url","onGithubLinkClick","openURL","uri"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Image, StyleSheet } from 'react-native';\nimport { Linking } from 'expo';\n\nimport theme from '../theme';\nimport Text from './Text';\nimport Button from './Button';\nimport formatInThousands from '../utils/formatInThousands';\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    padding: 15,\n  },\n  topContainer: {\n    flexDirection: 'row',\n    marginBottom: 15,\n  },\n  bottomContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  avatarContainer: {\n    flexGrow: 0,\n    marginRight: 20,\n  },\n  contentContainer: {\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  nameText: {\n    marginBottom: 5,\n  },\n  descriptionText: {\n    flexGrow: 1,\n  },\n  avatar: {\n    width: 45,\n    height: 45,\n    borderRadius: theme.roundness,\n  },\n  countItem: {\n    flexGrow: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 15,\n  },\n  countItemCount: {\n    marginBottom: 5,\n  },\n  languageContainer: {\n    marginTop: 10,\n    flexDirection: 'row',\n  },\n  languageText: {\n    color: 'white',\n    backgroundColor: theme.colors.primary,\n    borderRadius: theme.roundness,\n    flexGrow: 0,\n    paddingVertical: 3,\n    paddingHorizontal: 6,\n  },\n  githubButton: {\n    marginTop: 15,\n  },\n});\n\nconst CountItem = ({ label, count, ...props }) => {\n  return (\n    <View style={styles.countItem}>\n      <Text style={styles.countItemCount} fontWeight=\"bold\" {...props}>\n        {formatInThousands(count)}\n      </Text>\n      <Text color=\"textSecondary\">{label}</Text>\n    </View>\n  );\n};\n\nconst RepositoryItem = ({ repository, showGithubLink = false, ...props }) => {\n  const {\n    fullName,\n    description,\n    language,\n    forksCount,\n    stargazersCount,\n    ratingAverage,\n    reviewCount,\n    ownerAvatarUrl,\n    url,\n  } = repository;\n\n  const onGithubLinkClick = () => {\n    Linking.openURL(url);\n  };\n\n  return (\n    <View style={styles.container} {...props}>\n      <View style={styles.topContainer}>\n        <View style={styles.avatarContainer}>\n          <Image source={{ uri: ownerAvatarUrl }} style={styles.avatar} />\n        </View>\n        <View style={styles.contentContainer}>\n          <Text\n            style={styles.nameText}\n            fontWeight=\"bold\"\n            fontSize=\"subheading\"\n            numberOfLines={1}\n            testID=\"repositoryItemFullName\"\n          >\n            {fullName}\n          </Text>\n          <Text\n            style={styles.descriptionText}\n            color=\"textSecondary\"\n            testID=\"repositoryItemDescription\"\n          >\n            {description}\n          </Text>\n          {language ? (\n            <View style={styles.languageContainer}>\n              <Text style={styles.languageText} testID=\"repositoryItemLanguage\">\n                {language}\n              </Text>\n            </View>\n          ) : null}\n        </View>\n      </View>\n      <View style={styles.bottomContainer}>\n        <CountItem\n          count={stargazersCount}\n          label=\"Stars\"\n          testID=\"repositoryItemStars\"\n        />\n        <CountItem\n          count={forksCount}\n          label=\"Forks\"\n          testID=\"repositoryItemForks\"\n        />\n        <CountItem\n          count={reviewCount}\n          label=\"Reviews\"\n          testID=\"repositoryItemReviews\"\n        />\n        <CountItem\n          count={ratingAverage}\n          label=\"Rating\"\n          testID=\"repositoryItemRating\"\n        />\n      </View>\n      {showGithubLink && url && (\n        <Button style={styles.githubButton} onPress={onGithubLinkClick}>\n          Open in GitHub\n        </Button>\n      )}\n    </View>\n  );\n};\n\nexport default RepositoryItem;\n"]},"metadata":{},"sourceType":"module"}