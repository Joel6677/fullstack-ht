{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import ApolloClient from'apollo-boost';import Constants from'expo-constants';var apolloUri=Constants.manifest.extra.apolloUri;var createApolloClient=function createApolloClient(authStorage){return new ApolloClient({uri:apolloUri,request:function request(operation){var accessToken;return _regeneratorRuntime.async(function request$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(authStorage.getAccessToken());case 3:accessToken=_context.sent;operation.setContext({headers:{authorization:accessToken?\"Bearer \"+accessToken:''}});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},null,null,[[0,7]],Promise);}});};export default createApolloClient;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/utils/apolloClient.js"],"names":["ApolloClient","Constants","apolloUri","manifest","extra","createApolloClient","authStorage","uri","request","operation","getAccessToken","accessToken","setContext","headers","authorization","console","log"],"mappings":"4DAAA,MAAOA,CAAAA,YAAP,KAAyB,cAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,gBAAtB,C,GAEQC,CAAAA,S,CAAcD,SAAS,CAACE,QAAV,CAAmBC,K,CAAjCF,S,CAER,GAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,WAAD,CAAiB,CAC1C,MAAO,IAAIN,CAAAA,YAAJ,CAAiB,CACtBO,GAAG,CAAEL,SADiB,CAEtBM,OAAO,CAAE,iBAAOC,SAAP,oMAEqBH,WAAW,CAACI,cAAZ,EAFrB,SAECC,WAFD,eAILF,SAAS,CAACG,UAAV,CAAqB,CACnBC,OAAO,CAAE,CACPC,aAAa,CAAEH,WAAW,WAAaA,WAAb,CAA6B,EADhD,CADU,CAArB,EAJK,+EAULI,OAAO,CAACC,GAAR,cAVK,yEAFa,CAAjB,CAAP,CAgBD,CAjBD,CAmBA,cAAeX,CAAAA,kBAAf","sourcesContent":["import ApolloClient from 'apollo-boost';\nimport Constants from 'expo-constants';\n\nconst { apolloUri } = Constants.manifest.extra;\n\nconst createApolloClient = (authStorage) => {\n  return new ApolloClient({\n    uri: apolloUri,\n    request: async (operation) => {\n      try {\n        const accessToken = await authStorage.getAccessToken();\n\n        operation.setContext({\n          headers: {\n            authorization: accessToken ? `Bearer ${accessToken}` : '',\n          },\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n  });\n};\n\nexport default createApolloClient;"]},"metadata":{},"sourceType":"module"}