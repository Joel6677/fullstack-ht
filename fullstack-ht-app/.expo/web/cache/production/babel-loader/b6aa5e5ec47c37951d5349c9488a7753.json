{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useContext,useRef,useEffect,useState}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Image from\"react-native-web/dist/exports/Image\";import{useQuery}from'@apollo/client';import{StateContext}from\"../state\";import Text from\"./Text\";import fileService from\"../services/files\";var styles=StyleSheet.create({home:{backgroundColor:\"white\",height:'100%',width:'100%',position:'absolute',zIndex:49,top:60},photo:{width:50,height:50}});var Home=function Home(){var homeAnim=useRef(new Animated.Value(0)).current;var _useContext=useContext(StateContext),state=_useContext.state;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),files=_useState2[0],setFiles=_useState2[1];var moveMenu=function moveMenu(){Animated.spring(homeAnim,{toValue:state.open?600:0}).start();};useEffect(function(){moveMenu();fileService.getAll().then(function(files){return setFiles(files);});},[]);var getImage=function getImage(filename){return _regeneratorRuntime.async(function getImage$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(fileService.getImage(filename));case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},null,null,null,Promise);};return React.createElement(React.Fragment,null,React.createElement(Animated.View,{style:[styles.home,{transform:[{translateX:homeAnim}]}]},React.createElement(View,null,files.map(function(file){return React.createElement(React.Fragment,{key:file._id},React.createElement(Image,{style:styles.photo,source:{uri:\"http://localhost:3001/image/\"+file.filename}}));}),React.createElement(Text,null,\"Pictures&videos\"))));};export default Home;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/Home.jsx"],"names":["React","useContext","useRef","useEffect","useState","useQuery","StateContext","Text","fileService","styles","StyleSheet","create","home","backgroundColor","height","width","position","zIndex","top","photo","Home","homeAnim","Animated","Value","current","state","files","setFiles","moveMenu","spring","toValue","open","start","getAll","then","getImage","filename","transform","translateX","map","file","_id","uri"],"mappings":"6HAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,MAA5B,CAAoCC,SAApC,CAA+CC,QAA/C,KAA+D,OAA/D,C,0OAEA,OAASC,QAAT,KAAyB,gBAAzB,CAEA,OAASC,YAAT,gBACA,MAAOC,CAAAA,IAAP,cACA,MAAOC,CAAAA,WAAP,yBAEA,GAAMC,CAAAA,MAAM,CAAGC,UAAU,CAACC,MAAX,CAAkB,CAC/BC,IAAI,CAAE,CACJC,eAAe,CAAE,OADb,CAEJC,MAAM,CAAE,MAFJ,CAGJC,KAAK,CAAE,MAHH,CAIJC,QAAQ,CAAE,UAJN,CAKJC,MAAM,CAAE,EALJ,CAMJC,GAAG,CAAE,EAND,CADyB,CAU/BC,KAAK,CAAE,CACLJ,KAAK,CAAE,EADF,CAELD,MAAM,CAAE,EAFH,CAVwB,CAAlB,CAAf,CAiBA,GAAMM,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjB,GAAMC,CAAAA,QAAQ,CAAGnB,MAAM,CAAC,GAAIoB,CAAAA,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAA/C,CADiB,gBAECvB,UAAU,CAACK,YAAD,CAFX,CAETmB,KAFS,aAETA,KAFS,eAGSrB,QAAQ,CAAC,EAAD,CAHjB,wCAGVsB,KAHU,eAGHC,QAHG,eAKjB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAErBN,QAAQ,CAACO,MAAT,CACER,QADF,CAEE,CACES,OAAO,CAAEL,KAAK,CAACM,IAAN,CAAa,GAAb,CAAmB,CAD9B,CAFF,EAKEC,KALF,GAOD,CATD,CAWA7B,SAAS,CAAC,UAAM,CACdyB,QAAQ,GACRpB,WAAW,CAACyB,MAAZ,GAAqBC,IAArB,CAA0B,SAAAR,KAAK,QAC7BC,CAAAA,QAAQ,CAACD,KAAD,CADqB,EAA/B,EAED,CAJQ,CAIP,EAJO,CAAT,CAMA,GAAMS,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAOC,QAAP,qKACF5B,WAAW,CAAC2B,QAAZ,CAAqBC,QAArB,CADE,6HAAjB,CAIA,MACG,yCACC,oBAAC,QAAD,CAAU,IAAV,EAAe,KAAK,CAAE,CAAC3B,MAAM,CAACG,IAAR,CAAc,CAClCyB,SAAS,CAAE,CAAC,CACVC,UAAU,CAAEjB,QADF,CAAD,CADuB,CAAd,CAAtB,EAKE,oBAAC,IAAD,MACGK,KAAK,CAACa,GAAN,CAAU,SAACC,IAAD,QACT,qBAAC,KAAD,CAAO,QAAP,EAAgB,GAAG,CAAEA,IAAI,CAACC,GAA1B,EACE,oBAAC,KAAD,EACE,KAAK,CAAEhC,MAAM,CAACU,KADhB,CAEE,MAAM,CAAE,CACNuB,GAAG,gCAAiCF,IAAI,CAACJ,QADnC,CAFV,EADF,CADS,EAAV,CADH,CAUE,oBAAC,IAAD,wBAVF,CALF,CADD,CADH,CAwBD,CAlDD,CAoDA,cAAehB,CAAAA,IAAf","sourcesContent":["import React, { useContext, useRef, useEffect, useState } from 'react';\nimport { Animated, StyleSheet, View, Image } from 'react-native';\nimport { useQuery } from '@apollo/client'; \n\nimport { StateContext } from '../state';\nimport Text from './Text';\nimport fileService from '../services/files';\n\nconst styles = StyleSheet.create({\n  home: {\n    backgroundColor: \"white\",\n    height: '100%',\n    width: '100%',\n    position: 'absolute',\n    zIndex: 49,\n    top: 60\n    \n  },\n  photo: {\n    width: 50,\n    height: 50,\n  },\n});\n\n\nconst Home = () => {\n  const homeAnim = useRef(new Animated.Value(0)).current; \n  const { state } = useContext(StateContext);\n  const [files, setFiles] = useState([]);\n\n  const moveMenu = () => {\n\n    Animated.spring(\n      homeAnim,\n      {\n        toValue: state.open ? 600 : 0\n      }\n    ).start();\n  \n  };\n\n  useEffect(() => {\n    moveMenu();\n    fileService.getAll().then(files =>\n      setFiles(files));\n  },[]);\n\n  const getImage = async (filename) => {\n    return await fileService.getImage(filename);\n  };\n\n  return (\n     <>\n      <Animated.View style={[styles.home, {\n        transform: [{\n          translateX: homeAnim\n        }]\n      }]}>\n        <View>\n          {files.map((file) =>\n            <React.Fragment key={file._id}>\n              <Image\n                style={styles.photo}\n                source={{\n                  uri: `http://localhost:3001/image/${file.filename}`\n                }} />\n            </React.Fragment>\n          )}\n          <Text>Pictures&videos</Text>\n        </View>\n      </Animated.View> \n      \n     </>\n\n  );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}