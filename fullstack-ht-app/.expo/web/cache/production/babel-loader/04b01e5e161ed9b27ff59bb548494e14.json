{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{useField}from'formik';import TextInput from\"./TextInput\";import Text from\"./Text\";import theme from\"../theme\";var styles=StyleSheet.create({errorText:{marginTop:5,color:theme.colors.error}});var FormikTextInput=function FormikTextInput(_ref){var name=_ref.name,props=_objectWithoutProperties(_ref,[\"name\"]);var _useField=useField(name),_useField2=_slicedToArray(_useField,3),field=_useField2[0],meta=_useField2[1],helpers=_useField2[2];var showError=meta.touched&&meta.error;return React.createElement(React.Fragment,null,React.createElement(TextInput,_extends({onChangeText:function onChangeText(value){return helpers.setValue(value);},onBlur:function onBlur(){return helpers.setTouched(true);},value:field.value,error:showError},props)),showError&&React.createElement(Text,{style:styles.errorText},meta.error));};export default FormikTextInput;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/components/FormikTextInput.jsx"],"names":["React","useField","TextInput","Text","theme","styles","StyleSheet","create","errorText","marginTop","color","colors","error","FormikTextInput","name","props","field","meta","helpers","showError","touched","value","setValue","setTouched"],"mappings":"2MAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,iEAEA,OAASC,QAAT,KAAyB,QAAzB,CAEA,MAAOC,CAAAA,SAAP,mBACA,MAAOC,CAAAA,IAAP,cACA,MAAOC,CAAAA,KAAP,gBAEA,GAAMC,CAAAA,MAAM,CAAGC,UAAU,CAACC,MAAX,CAAkB,CAC/BC,SAAS,CAAE,CACTC,SAAS,CAAE,CADF,CAETC,KAAK,CAAEN,KAAK,CAACO,MAAN,CAAaC,KAFX,CADoB,CAAlB,CAAf,CAOA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAwB,IAArBC,CAAAA,IAAqB,MAArBA,IAAqB,CAAZC,KAAY,uDACfd,QAAQ,CAACa,IAAD,CADO,wCACvCE,KADuC,eAChCC,IADgC,eAC1BC,OAD0B,eAE9C,GAAMC,CAAAA,SAAS,CAAGF,IAAI,CAACG,OAAL,EAAgBH,IAAI,CAACL,KAAvC,CAEA,MACE,yCACE,oBAAC,SAAD,WACE,YAAY,CAAE,sBAACS,KAAD,QAAWH,CAAAA,OAAO,CAACI,QAAR,CAAiBD,KAAjB,CAAX,EADhB,CAEE,MAAM,CAAE,wBAAMH,CAAAA,OAAO,CAACK,UAAR,CAAmB,IAAnB,CAAN,EAFV,CAGE,KAAK,CAAEP,KAAK,CAACK,KAHf,CAIE,KAAK,CAAEF,SAJT,EAKMJ,KALN,EADF,CAQGI,SAAS,EAAI,oBAAC,IAAD,EAAM,KAAK,CAAEd,MAAM,CAACG,SAApB,EAAgCS,IAAI,CAACL,KAArC,CARhB,CADF,CAYD,CAhBD,CAiBA,cAAeC,CAAAA,eAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { useField } from 'formik';\n\nimport TextInput from './TextInput';\nimport Text from './Text';\nimport theme from '../theme';\n\nconst styles = StyleSheet.create({\n  errorText: {\n    marginTop: 5,\n    color: theme.colors.error,\n  },\n});\n\nconst FormikTextInput = ({ name, ...props }) => {\n  const [field, meta, helpers] = useField(name);\n  const showError = meta.touched && meta.error;\n\n  return (\n    <>\n      <TextInput\n        onChangeText={(value) => helpers.setValue(value)}\n        onBlur={() => helpers.setTouched(true)}\n        value={field.value}\n        error={showError}\n        {...props}\n      />\n      {showError && <Text style={styles.errorText}>{meta.error}</Text>}\n    </>\n  );\n};\nexport default FormikTextInput;\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}