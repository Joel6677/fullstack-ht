{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{useQuery}from'@apollo/react-hooks';import{GET_AUTHORIZED_USER}from\"../graphql/queries\";var useAuthorizedUser=function useAuthorizedUser(variables){var _useQuery=useQuery(GET_AUTHORIZED_USER,{variables:variables,fetchPolicy:'cache-and-network'}),data=_useQuery.data,rest=_objectWithoutProperties(_useQuery,[\"data\"]);var authorizedUser=data?data.authorizedUser:undefined;return _objectSpread({authorizedUser:authorizedUser},rest);};export default useAuthorizedUser;","map":{"version":3,"sources":["/home/hejoel/fullstack/fullstack-ht/fullstack-ht/fullstack-ht-app/src/hooks/useAuthorizedUser.js"],"names":["useQuery","GET_AUTHORIZED_USER","useAuthorizedUser","variables","fetchPolicy","data","rest","authorizedUser","undefined"],"mappings":"o7BAAA,OAASA,QAAT,KAAyB,qBAAzB,CAEA,OAASC,mBAAT,0BAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,SAAD,CAAe,eACbH,QAAQ,CAACC,mBAAD,CAAsB,CACtDE,SAAS,CAATA,SADsD,CAEtDC,WAAW,CAAE,mBAFyC,CAAtB,CADK,CAC/BC,IAD+B,WAC/BA,IAD+B,CACtBC,IADsB,8CAMvC,GAAMC,CAAAA,cAAc,CAAGF,IAAI,CAAGA,IAAI,CAACE,cAAR,CAAyBC,SAApD,CAEA,sBAASD,cAAc,CAAdA,cAAT,EAA4BD,IAA5B,EACD,CATD,CAWA,cAAeJ,CAAAA,iBAAf","sourcesContent":["import { useQuery } from '@apollo/react-hooks';\n\nimport { GET_AUTHORIZED_USER } from '../graphql/queries';\n\nconst useAuthorizedUser = (variables) => {\n  const { data, ...rest } = useQuery(GET_AUTHORIZED_USER, {\n    variables,\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const authorizedUser = data ? data.authorizedUser : undefined;\n\n  return { authorizedUser, ...rest };\n};\n\nexport default useAuthorizedUser;"]},"metadata":{},"sourceType":"module"}